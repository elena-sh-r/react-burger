{"version":3,"sources":["components/app/app.module.css","pages/home/home.module.css","components/modal-overlay/modal-overlay.module.css","components/order-ingredients/order-ingredients.module.css","components/app-header/app-header.module.css","components/nutrition-value/nutrition-value.module.css","components/orders-board/orders-board.module.css","services/constants/index.ts","services/reducers/burger-ingredients.ts","services/reducers/burger-constructor.ts","services/reducers/ingredient-details.ts","services/reducers/order-details.ts","services/reducers/user.ts","services/reducers/ws.ts","services/reducers/index.ts","services/store.ts","services/middleware/socketMiddleware.ts","components/app-header/app-header.tsx","services/hooks/hooks.ts","components/ingredient/ingredient.tsx","components/ingredients-list/ingredients-list.tsx","components/burger-ingredients/burger-ingredients.tsx","utils/constants.ts","utils/index.ts","utils/UserApi.ts","services/actions/user.ts","services/actions/order-details.ts","utils/IngredientsApi.ts","components/filling-constructor-element/filling-constructor-element.tsx","services/actions/burger-constructor.ts","components/burger-constructor-items/burger-constructor-items.tsx","services/auth.ts","components/burger-constructor/burger-constructor.tsx","images/order-details__done.gif","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","pages/home/home.tsx","components/auth-form/auth-form.tsx","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/profile-menu/profile-menu.tsx","pages/profile/profile.tsx","components/protected-route/protected-route.tsx","components/order-ingredient/order-ingredient.tsx","components/order-ingredients/order-ingredients.tsx","components/order-card/order-card.tsx","components/orders-feed/orders-feed.tsx","services/actions/ws.ts","pages/profile-orders/profile-orders.tsx","components/nutrition-value/nutrition-value.tsx","services/actions/burger-ingredients.ts","components/ingredient-details/ingredient-details.tsx","services/actions/ingredient-details.ts","components/orders-board/orders-board.tsx","pages/feed/feed.tsx","components/order-info-ingredient/order-info-ingredient.tsx","components/order-info/order-info.tsx","components/modal-switch/modal-switch.tsx","components/app/app.tsx","index.tsx","components/profile-menu/profile-menu.module.css","components/order-info/order-info.module.css","components/order-card/order-card.module.css","components/order-info-ingredient/order-info-ingredient.module.css","components/ingredient/ingredient.module.css","components/burger-constructor/burger-constructor.module.css","pages/login/login.module.css","components/order-ingredient/order-ingredient.module.css","components/burger-constructor-items/burger-constructor-items.module.css","components/modal/modal.module.css","components/auth-form/auth-form.module.css","pages/profile/profile.module.css","components/ingredient-details/ingredient-details.module.css","components/order-details/order-details.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","pages/feed/feed.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredients-list/ingredients-list.module.css","components/filling-constructor-element/filling-constructor-element.module.css","pages/profile-orders/profile-orders.module.css","components/orders-feed/orders-feed.module.css"],"names":["module","exportsinitialState","burgerIngredients","burgerIngredientsRequest","burgerIngredientsFailed","constructorIngredients","ingredientDetails","modalOpened","orderDetails","orderDetailsUnauthStart","orderDetailsRequest","orderDetailsFailed","message","requestPasswordResetRequest","requestPasswordResetSuccess","requestPasswordResetFailed","setPasswordRequest","setPasswordSuccess","setPasswordFailed","user","createUserRequest","createUserSuccess","createUserFailed","loginUserRequest","loginUserSuccess","loginUserFailed","accessToken","exitUserRequest","exitUserSuccess","exitUserFailed","patchUserRequest","patchUserSuccess","patchUserFailed","wsConnected","rootReducer","combineReducers","state","action","type","burgerConstructor","constructorIngredient","filter","x","slice","ingredientIndex","ingredientIndexTo","ingredientIndexFrom","getTokenRequest","getTokenSuccess","getTokenFailed","getUserRequest","getUserFailed","getUserSuccess","ws","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","wsActions","wsInit","onOpen","wsClose","onClose","onError","onMessage","enhancer","applyMiddleware","thunk","wsUrl","store","socket","next","dispatch","payload","token","WebSocket","substring","close","onopen","event","onerror","onmessage","data","parsedData","JSON","parse","restParsedData","success","onclose","socketMiddleware","createStore","AppHeader","className","appHeader","header","header__menu","header__links","header__link","to","header__links_right","header__link_type_login","useSelector","selectorHook","useDispatch","dispatchHook","Ingredient","item","location","useLocation","history","useHistory","useDrag","dragRef","count","_id","length","ingredientStyles","ref","onClick","push","background","src","image","alt","name","price","IngredientsList","forwardRef","props","title","ingredientsListStyles","ingredients","map","BurgerIngredients","useState","current","setCurrent","bunsRef","createRef","sauceRef","mainRef","ingredientsStyles","style","display","value","active","scrollIntoView","behavior","onScroll","e","containerY","target","getBoundingClientRect","y","sauceY","mainY","PATHS","path","ORDER_STATUS_DONE","ORDER_STATUS_PENDING","ORDER_STATUS_CREATED","getResponse","res","ok","json","then","err","Promise","reject","Error","status","statusText","getToken","fetch","method","headers","body","stringify","requestPasswordResetActionFailed","setPasswordActionFailed","createUserActionFailed","loginUserActionFailed","getTokenActionSuccess","getUserActionFailed","exitUserActionFailed","patchUserActionFailed","requestPasswordResetThunk","email","requestPasswordResetAction","requestPasswordReset","catch","setPasswordThunk","password","setPasswordAction","setPassword","createUserThunk","createUserAction","createUser","localStorage","setItem","refreshToken","loginUserThunk","loginUserAction","loginUser","getUserThunk","getUserAction","getUser","exitUserThunk","exitUserAction","removeItem","patchUserThunk","setUser","getOrderDetailsActionFailed","resetOrderDetailsAction","getOrderDetailsThunk","getOrderDetailsAction","setOrder","order","FillingConstructorElement","index","useDrop","accept","drop","indexFrom","indexTo","collect","monitor","isHover","isOver","dropTarget","handleClose","deleteConstructorIngredient","fillingConstructorElementStyles","el","text","thumbnail","image_mobile","BurgerConstructorItems","bun","fillings","ingredient","uniqueId","uuidv4","burgerConstructorItemsStyles","isLocked","useAuth","getItem","BurgerConstructor","isBun","find","totalPrice","reduce","previousItem","currentItem","orderIngredientsData","concat","useEffect","burgerConstructorStyles","size","OrderDetails","orderDetailsStyles","number","doneImagePath","ModalOverlay","children","modalOverlayStyles","evt","currentTarget","modalRoot","document","getElementById","Modal","closeByEscape","key","addEventListener","removeEventListener","createPortal","modalStyles","Home","homeStyles","main","DndProvider","backend","HTML5Backend","AuthForm","onSubmit","buttonText","bottomText","authFormStyles","Login","setEmail","from","preventDefault","loginFormStyles","placeholder","onChange","error","errorText","Register","setName","registerFormStyles","ForgotPassword","forgotPasswordFormStyles","ResetPassword","setToken","resetPasswordFormStyles","ProfileMenu","profileMenuStyles","exact","activeClassName","Profile","nameValue","setNameValue","emailValue","setEmailValue","passwordValue","setPasswordValue","currenNameValue","setCurrentNameValue","currentEmailValue","setCurrentEmailValue","currentPasswordValue","setCurrentPasswordValue","nameDisabled","setNameDisabled","emailDisabled","setEmailDisabled","passwordDisabled","setPasswordDisabled","buttonsVisible","setButtonsVisible","profileFormStyles","icon","onIconClick","disabled","ProtectedRoute","rest","render","pathname","OrderIngredient","ingredientId","orderIngredientStyles","OrderIngredients","orderId","ingredientIds","orderIngredientsStyles","id","array","OrderCard","statusVisible","sum","prev","cur","date","Date","createdAt","timezoneHours","getTimezoneOffset","dayDelta","getDate","timezoneString","getHours","getMinutes","statusTextClass","orderCardStyles","OrdersFeed","orders","ordersFeedStyles","wsConnectionStart","wsConnectionClose","ProfileOrders","profileOrdersFormStyles","sort","a","b","NutritionValue","nutritionValueStyles","getBurgerIngredientsFailedAction","getBurgerIngredientsThunk","IngredientDetails","useParams","ingredientDetailsStyles","image_large","calories","proteins","fat","carbohydrates","OrdersBoard","total","totalToday","ordersBoardStyles","Feed","feedStyles","OrderInfoIngredient","orderInfoIngredientStyles","OrderInfo","isModal","orderInfoStyles","self","indexOf","ModalSwitch","onIngredientModalClose","goBack","openedFromList","component","App","basename","appStyles","app","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.3bba5e83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__3ygrW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-overlay\":\"modal-overlay_modal-overlay__4byzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-ingredients\":\"order-ingredients_order-ingredients__--N3F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"header__menu\":\"app-header_header__menu__3M2cl\",\"header__links\":\"app-header_header__links__2h6Qr\",\"header__links_right\":\"app-header_header__links_right__2tPXC\",\"header__link\":\"app-header_header__link__Qgbfo\",\"header__link_type_login\":\"app-header_header__link_type_login__3KjJf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nutrition-value\":\"nutrition-value_nutrition-value__3zW1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders-board\":\"orders-board_orders-board__124e8\",\"orders-board__container\":\"orders-board_orders-board__container__2PPjz\",\"orders-board__done\":\"orders-board_orders-board__done__154kB\",\"orders-board__done-number\":\"orders-board_orders-board__done-number__3Ff_E\",\"orders-board__in-work\":\"orders-board_orders-board__in-work__NOW8n\",\"orders-board__completed-number\":\"orders-board_orders-board__completed-number__WfaNI\",\"orders-board__numbers-container\":\"orders-board_orders-board__numbers-container__1rVOM\",\"orders-board__numbers\":\"orders-board_orders-board__numbers__1ARTf\"};","export const ADD_CONSTRUCTOR_INGREDIENT: 'ADD_CONSTRUCTOR_INGREDIENT' = 'ADD_CONSTRUCTOR_INGREDIENT';\nexport const DELETE_CONSTRUCTOR_INGREDIENT: 'DELETE_CONSTRUCTOR_INGREDIENT' = 'DELETE_CONSTRUCTOR_INGREDIENT';\nexport const SORT_CONSTRUCTOR_INGREDIENT: 'SORT_CONSTRUCTOR_INGREDIENT' = 'SORT_CONSTRUCTOR_INGREDIENT';\nexport const RESET_CONSTRUCTOR_INGREDIENTS: 'RESET_CONSTRUCTOR_INGREDIENTS' = 'RESET_CONSTRUCTOR_INGREDIENTS';\n\nexport const GET_BURGER_INGREDIENTS_REQUEST: 'GET_API_INGREDIENTS_REQUEST' = 'GET_API_INGREDIENTS_REQUEST';\nexport const GET_BURGER_INGREDIENTS_SUCCESS: 'GET_API_INGREDIENTS_SUCCESS' = 'GET_API_INGREDIENTS_SUCCESS';\nexport const GET_BURGER_INGREDIENTS_FAILED: 'GET_API_INGREDIENTS_FAILED' = 'GET_API_INGREDIENTS_FAILED';\n\nexport const SET_INGREDIENT_DETAILS: 'SET_INGREDIENT_DETAILS' = 'SET_INGREDIENT_DETAILS';\nexport const RESET_INGREDIENT_DETAILS: 'RESET_INGREDIENT_DETAILS' = 'RESET_INGREDIENT_DETAILS';\n\nexport const GET_ORDER_DETAILS_UNAUTH_START: 'GET_ORDER_DETAILS_UNAUTH_START' = 'GET_ORDER_DETAILS_UNAUTH_START';\nexport const GET_ORDER_DETAILS_REQUEST: 'GET_ORDER_DETAILS_REQUEST' = 'GET_ORDER_DETAILS_REQUEST';\nexport const GET_ORDER_DETAILS_SUCCESS: 'GET_ORDER_DETAILS_SUCCESS' = 'GET_ORDER_DETAILS_SUCCESS';\nexport const GET_ORDER_DETAILS_FAILED: 'GET_ORDER_DETAILS_FAILED' = 'GET_ORDER_DETAILS_FAILED';\nexport const RESET_ORDER_DETAILS: 'RESET_ORDER_DETAILS' = 'RESET_ORDER_DETAILS';\n\nexport const REQUEST_PASSWORD_RESET_REQUEST: 'REQUEST_PASSWORD_RESET_REQUEST' = 'REQUEST_PASSWORD_RESET_REQUEST';\nexport const REQUEST_PASSWORD_RESET_SUCCESS: 'REQUEST_PASSWORD_RESET_SUCCESS' = 'REQUEST_PASSWORD_RESET_SUCCESS';\nexport const REQUEST_PASSWORD_RESET_FAILED: 'REQUEST_PASSWORD_RESET_FAILED' = 'REQUEST_PASSWORD_RESET_FAILED';\nexport const RESET_REQUEST_PASSWORD_RESET: 'RESET_REQUEST_PASSWORD_RESET' = 'RESET_REQUEST_PASSWORD_RESET';\n\nexport const SET_PASSWORD_REQUEST: 'SET_PASSWORD_REQUEST' = 'SET_PASSWORD_REQUEST';\nexport const SET_PASSWORD_SUCCESS: 'SET_PASSWORD_SUCCESS' = 'SET_PASSWORD_SUCCESS';\nexport const SET_PASSWORD_FAILED: 'SET_PASSWORD_FAILED' = 'SET_PASSWORD_FAILED';\nexport const RESET_SET_PASSWORD: 'RESET_SET_PASSWORD' = 'RESET_SET_PASSWORD';\n\nexport const CREATE_USER_REQUEST: 'CREATE_USER_REQUEST' = 'CREATE_USER_REQUEST';\nexport const CREATE_USER_SUCCESS: 'CREATE_USER_SUCCESS' = 'CREATE_USER_SUCCESS';\nexport const CREATE_USER_FAILED: 'CREATE_USER_FAILED' = 'CREATE_USER_FAILED';\nexport const RESET_CREATE_USER: 'RESET_CREATE_USER' = 'RESET_CREATE_USER';\n\nexport const LOGIN_USER_REQUEST: 'LOGIN_USER_REQUEST' = 'LOGIN_USER_REQUEST';\nexport const LOGIN_USER_SUCCESS: 'LOGIN_USER_SUCCESS' = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED: 'LOGIN_USER_FAILED' = 'LOGIN_USER_FAILED';\nexport const RESET_LOGIN_USER: 'RESET_LOGIN_USER' = 'RESET_LOGIN_USER';\n\nexport const GET_TOKEN_REQUEST: 'GET_TOKEN_REQUEST' = 'GET_TOKEN_REQUEST';\nexport const GET_TOKEN_SUCCESS: 'GET_TOKEN_SUCCESS' = 'GET_TOKEN_SUCCESS';\nexport const GET_TOKEN_FAILED: 'GET_TOKEN_FAILED' = 'GET_TOKEN_FAILED';\nexport const RESET_GET_TOKEN: 'RESET_GET_TOKEN' = 'RESET_GET_TOKEN';\n\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\nexport const RESET_GET_USER: 'RESET_GET_USER' = 'RESET_GET_USER';\n\nexport const EXIT_USER_REQUEST: 'EXIT_USER_REQUEST' = 'EXIT_USER_REQUEST';\nexport const EXIT_USER_SUCCESS: 'EXIT_USER_SUCCESS' = 'EXIT_USER_SUCCESS';\nexport const EXIT_USER_FAILED: 'EXIT_USER_FAILED' = 'EXIT_USER_FAILED';\n\nexport const PATCH_USER_REQUEST: 'PATCH_USER_REQUEST' = 'PATCH_USER_REQUEST';\nexport const PATCH_USER_SUCCESS: 'PATCH_USER_SUCCESS' = 'PATCH_USER_SUCCESS';\nexport const PATCH_USER_FAILED: 'PATCH_USER_FAILED' = 'PATCH_USER_FAILED';\nexport const RESET_PATCH_USER: 'RESET_PATCH_USER' = 'RESET_PATCH_USER';\n\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\nexport const WS_CONNECTION_CLOSE: 'WS_CONNECTION_CLOSE' = 'WS_CONNECTION_CLOSE';\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';","import { TIngredientType } from '../types/data';\n\nimport {\n  GET_BURGER_INGREDIENTS_REQUEST,\n  GET_BURGER_INGREDIENTS_SUCCESS,\n  GET_BURGER_INGREDIENTS_FAILED,\n} from '../constants';\n\nimport { TBurgerIngredientsActions } from 'services/actions/burger-ingredients';\n\nexport type TBurgerIngredientsState = {\n  burgerIngredients: ReadonlyArray<TIngredientType>;\n  burgerIngredientsRequest: boolean;\n  burgerIngredientsFailed: boolean;\n};\n\nconst initialState = {\n  burgerIngredients: [],\n  burgerIngredientsRequest: false,\n  burgerIngredientsFailed: false,\n};\n\nexport const burgerIngredientsReducer = (\n  state: TBurgerIngredientsState = initialState, \n  action: TBurgerIngredientsActions\n  ): TBurgerIngredientsState => {\n  switch (action.type) {\n    case GET_BURGER_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        burgerIngredientsRequest: true,\n      };\n    }\n    case GET_BURGER_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        burgerIngredientsFailed: false,\n        burgerIngredients: action.burgerIngredients,\n        burgerIngredientsRequest: false,\n      };\n    }\n    case GET_BURGER_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        burgerIngredientsFailed: true,\n        burgerIngredientsRequest: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TIngredientType } from '../types/data';\n\nimport {\n  ADD_CONSTRUCTOR_INGREDIENT,\n  DELETE_CONSTRUCTOR_INGREDIENT,\n  SORT_CONSTRUCTOR_INGREDIENT,\n  RESET_CONSTRUCTOR_INGREDIENTS,\n} from '../constants';\n\nimport type { TConstructorIngredientActions } from '../actions/burger-constructor';\n\nexport type TBurgerConstructorState = {\n  constructorIngredients: Array<TIngredientType>;\n};\n\nconst initialState = {\n  constructorIngredients: [],\n};\n\nexport const burgerConstructorReducer = (\n  state: TBurgerConstructorState = initialState, \n  action: TConstructorIngredientActions\n  ): TBurgerConstructorState => {\n  switch (action.type) {\n    case ADD_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients: action.constructorIngredient.type === 'bun'\n          ? [...state.constructorIngredients.filter( (x: {type: string}) => x.type !== 'bun'), action.constructorIngredient]\n          : [...state.constructorIngredients, action.constructorIngredient],\n      };\n    }\n    case DELETE_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients: [...state.constructorIngredients.slice(0, action.ingredientIndex), ...state.constructorIngredients.slice(action.ingredientIndex + 1)],\n      }\n    }\n    case SORT_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients:\n        action.ingredientIndexTo > action.ingredientIndexFrom\n          ? [...state.constructorIngredients.slice(0, action.ingredientIndexFrom), ...state.constructorIngredients.slice(action.ingredientIndexFrom + 1, action.ingredientIndexTo + 1), state.constructorIngredients[action.ingredientIndexFrom], ...state.constructorIngredients.slice(action.ingredientIndexTo + 1)]\n          : [...state.constructorIngredients.slice(0, action.ingredientIndexTo), state.constructorIngredients[action.ingredientIndexFrom], ...state.constructorIngredients.slice(action.ingredientIndexTo, action.ingredientIndexFrom), ...state.constructorIngredients.slice(action.ingredientIndexFrom + 1)]\n      }\n    }\n    case RESET_CONSTRUCTOR_INGREDIENTS: {\n      return {\n        ...state,\n        constructorIngredients: [],\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TIngredientType } from '../types/data';\n\nimport {\n  SET_INGREDIENT_DETAILS,\n  RESET_INGREDIENT_DETAILS,\n} from '../constants';\n\nimport { TIngredintsDetailsActions } from 'services/actions/ingredient-details';\n\nexport type TIngredientDetailsState = {\n  ingredientDetails: TIngredientType | null;\n  modalOpened: boolean;\n};\n\nconst initialState = {\n  ingredientDetails: null,\n  modalOpened: false,\n};\n\nexport const ingredientDetailsReducer = (\n  state: TIngredientDetailsState = initialState, \n  action: TIngredintsDetailsActions\n  ): TIngredientDetailsState => {\n  switch (action.type) {\n    case SET_INGREDIENT_DETAILS: {\n      return {\n        ...state,\n        ingredientDetails: action.ingredientDetails,\n      };\n    }\n    case RESET_INGREDIENT_DETAILS: {\n      return {\n        ...state,\n        ingredientDetails: null,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TOrderDetailsType } from '../types/data';\n\nimport {\n  GET_ORDER_DETAILS_UNAUTH_START,\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  RESET_ORDER_DETAILS,\n} from '../constants';\n\nimport { TOrderDetailsActions } from 'services/actions/order-details';\n\nexport type TOrderDetailsState = {\n  orderDetails: TOrderDetailsType | null;\n  orderDetailsUnauthStart: boolean;\n  orderDetailsRequest: boolean;\n  orderDetailsFailed: boolean;\n};\n\nconst initialState = {\n  orderDetails: null,\n  orderDetailsUnauthStart: false,\n  orderDetailsRequest: false,\n  orderDetailsFailed: false,\n};\n\nexport const orderDetailsReducer = (state: TOrderDetailsState = initialState, \n  action: TOrderDetailsActions\n  ) => {\n  switch (action.type) {\n    case GET_ORDER_DETAILS_UNAUTH_START: {\n      return {\n        ...state,\n        orderDetailsUnauthStart: true,\n      };\n    }\n    case GET_ORDER_DETAILS_REQUEST: {\n      return {\n        ...state,\n        orderDetailsRequest: true,\n        orderDetailsUnauthStart: false,\n      };\n    }\n    case GET_ORDER_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        orderDetailsFailed: false,\n        orderDetails: action.orderDetails,\n        orderDetailsRequest: false,\n        orderDetailsUnauthStart: false,\n      };\n    }\n    case GET_ORDER_DETAILS_FAILED: {\n      return {\n        ...state,\n        orderDetailsFailed: true,\n        orderDetailsRequest: false,\n        orderDetailsUnauthStart: false,\n      };\n    }\n    case RESET_ORDER_DETAILS: {\n      return {\n        ...state,\n        orderDetails: null,\n        orderDetailsFailed: false,\n        orderDetailsUnauthStart: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TUserInfoType } from '../types/data';\n\nimport {\n  REQUEST_PASSWORD_RESET_REQUEST,\n  REQUEST_PASSWORD_RESET_SUCCESS,\n  REQUEST_PASSWORD_RESET_FAILED,\n  RESET_REQUEST_PASSWORD_RESET,\n  SET_PASSWORD_REQUEST,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAILED,\n  RESET_SET_PASSWORD,\n  CREATE_USER_REQUEST,\n  CREATE_USER_SUCCESS,\n  CREATE_USER_FAILED,\n  RESET_CREATE_USER,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILED,\n  RESET_LOGIN_USER,\n  GET_TOKEN_REQUEST,\n  GET_TOKEN_SUCCESS,\n  GET_TOKEN_FAILED,\n  RESET_GET_TOKEN,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  RESET_GET_USER,\n  EXIT_USER_REQUEST,\n  EXIT_USER_SUCCESS,\n  EXIT_USER_FAILED,\n  PATCH_USER_REQUEST,\n  PATCH_USER_SUCCESS,\n  PATCH_USER_FAILED,\n  RESET_PATCH_USER,\n} from '../constants';\n\nimport { TUserActions } from 'services/actions/user';\n\nexport type TUserState = {\n  message: string | null;\n  requestPasswordResetRequest: boolean;\n  requestPasswordResetSuccess: boolean;\n  requestPasswordResetFailed: boolean;\n  setPasswordRequest: boolean;\n  setPasswordSuccess: boolean;\n  setPasswordFailed: boolean;\n  user: TUserInfoType | null;\n  createUserRequest: boolean;\n  createUserSuccess: boolean;\n  createUserFailed: boolean;\n  loginUserRequest: boolean;\n  loginUserSuccess: boolean;\n  loginUserFailed: boolean;\n  accessToken: string | null;\n  exitUserRequest: boolean;\n  exitUserSuccess: boolean;\n  exitUserFailed: boolean;\n  patchUserRequest: boolean;\n  patchUserSuccess: boolean;\n  patchUserFailed: boolean;\n};\n\nconst initialState = {\n  message: null,\n  requestPasswordResetRequest: false,\n  requestPasswordResetSuccess: false,\n  requestPasswordResetFailed: false,\n  setPasswordRequest: false,\n  setPasswordSuccess: false,\n  setPasswordFailed: false,\n  user: null,\n  createUserRequest: false,\n  createUserSuccess: false,\n  createUserFailed: false,\n  loginUserRequest: false,\n  loginUserSuccess: false,\n  loginUserFailed: false,\n  accessToken: null,\n  exitUserRequest: false,\n  exitUserSuccess: false,\n  exitUserFailed: false,\n  patchUserRequest: false,\n  patchUserSuccess: false,\n  patchUserFailed: false,\n};\n\nexport const userReducer = (state: TUserState = initialState, \n  action: TUserActions\n  ) => {\n  switch (action.type) {\n    case REQUEST_PASSWORD_RESET_REQUEST: {\n      return {\n        ...state,\n        requestPasswordResetRequest: true,\n      };\n    }\n    case REQUEST_PASSWORD_RESET_SUCCESS: {\n      return {\n        ...state,\n        requestPasswordResetFailed: false,\n        requestPasswordResetSuccess: true,\n        message: action.message,\n        requestPasswordResetRequest: false,\n      };\n    }\n    case REQUEST_PASSWORD_RESET_FAILED: {\n      return {\n        ...state,\n        requestPasswordResetFailed: true,\n        requestPasswordResetRequest: false,\n        requestPasswordResetSuccess: false,\n      };\n    }\n    case RESET_REQUEST_PASSWORD_RESET: {\n      return {\n        ...state,\n        requestPasswordResetFailed: false,\n        requestPasswordResetRequest: false,\n        requestPasswordResetSuccess: false,\n      };\n    }\n    case SET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        setPasswordRequest: true,\n      };\n    }\n    case SET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        setPasswordFailed: false,\n        setPasswordSuccess: true,\n        message: action.message,\n        setPasswordRequest: false,\n      };\n    }\n    case SET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        setPasswordFailed: true,\n        setPasswordRequest: false,\n        setPasswordSuccess: false,\n      };\n    }\n    case RESET_SET_PASSWORD: {\n      return {\n        ...state,\n        setPasswordFailed: false,\n        setPasswordRequest: false,\n        setPasswordSuccess: false,\n      };\n    }\n    case CREATE_USER_REQUEST: {\n      return {\n        ...state,\n        createUserRequest: true,\n        accessToken: null,\n      };\n    }\n    case CREATE_USER_SUCCESS: {\n      return {\n        ...state,\n        createUserRequest: false,\n        createUserSuccess: true,\n        user: action.user,\n        createUserFailed: false,\n        accessToken: action.accessToken,\n      };\n    }\n    case CREATE_USER_FAILED: {\n      return {\n        ...state,\n        createUserFailed: true,\n        createUserRequest: false,\n        createUserSuccess: false,\n      };\n    }\n    case RESET_CREATE_USER: {\n      return {\n        ...state,\n        createUserFailed: false,\n        createUserRequest: false,\n        createUserSuccess: false,\n      };\n    }\n    case LOGIN_USER_REQUEST: {\n      return {\n        ...state,\n        loginUserRequest: true,\n        accessToken: null,\n      };\n    }\n    case LOGIN_USER_SUCCESS: {\n      return {\n        ...state,\n        loginUserRequest: false,\n        loginUserSuccess: true,\n        user: action.user,\n        loginUserFailed: false,\n        accessToken: action.accessToken,\n      };\n    }\n    case LOGIN_USER_FAILED: {\n      return {\n        ...state,\n        loginUserFailed: true,\n        loginUserRequest: false,\n        loginUserSuccess: false,\n      };\n    }\n    case RESET_LOGIN_USER: {\n      return {\n        ...state,\n        loginUserFailed: false,\n        loginUserRequest: false,\n        loginUserSuccess: false,\n      };\n    }\n    case GET_TOKEN_REQUEST: {\n      return {\n        ...state,\n        getTokenRequest: true,\n        accessToken: null,\n      };\n    }\n    case GET_TOKEN_SUCCESS: {\n      return {\n        ...state,\n        getTokenRequest: false,\n        getTokenSuccess: true,\n        getTokenFailed: false,\n        accessToken: action.accessToken,\n      };\n    }\n    case GET_TOKEN_FAILED: {\n      return {\n        ...state,\n        getTokenFailed: true,\n        getTokenRequest: false,\n        getTokenSuccess: false,\n      };\n    }\n    case RESET_GET_TOKEN: {\n      return {\n        ...state,\n        getTokenFailed: false,\n        getTokenRequest: false,\n        getTokenSuccess: false,\n      };\n    }\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        getUserRequest: true,\n        user: null,\n      };\n    }\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        getUserFailed: false,\n        getUserSuccess: true,\n        getUserRequest: false,\n        user: action.user,\n      };\n    }\n    case GET_USER_FAILED: {\n      return {\n        ...state,\n        getUserFailed: true,\n        getUserRequest: false,\n        getUserSuccess: false,\n      };\n    }\n    case RESET_GET_USER: {\n      return {\n        ...state,\n        getUserFailed: false,\n        getUserRequest: false,\n        getUserSuccess: false,\n      };\n    }\n    case EXIT_USER_REQUEST: {\n      return {\n        ...state,\n        exitUserRequest: true,\n      };\n    }\n    case EXIT_USER_SUCCESS: {\n      return {\n        ...state,\n        exitUserRequest: false,\n        exitUserSuccess: true,\n        user: null,\n        exitUserFailed: false,\n        accessToken: null,\n      };\n    }\n    case EXIT_USER_FAILED: {\n      return {\n        ...state,\n        exitUserFailed: true,\n        exitUserRequest: false,\n        exitUserSuccess: false,\n      };\n    }\n    case PATCH_USER_REQUEST: {\n      return {\n        ...state,\n        patchUserRequest: true,\n      };\n    }\n    case PATCH_USER_SUCCESS: {\n      return {\n        ...state,\n        patchUserFailed: false,\n        patchUserSuccess: true,\n        patchUserRequest: false,\n        user: action.user,\n      };\n    }\n    case PATCH_USER_FAILED: {\n      return {\n        ...state,\n        patchUserFailed: true,\n        patchUserRequest: false,\n        patchUserSuccess: false,\n      };\n    }\n    case RESET_PATCH_USER: {\n      return {\n        ...state,\n        patchUserFailed: false,\n        patchUserRequest: false,\n        patchUserSuccess: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TWsActions } from '../actions/ws';\nimport {\n  WS_CONNECTION_START,\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_CLOSE,\n  WS_CONNECTION_CLOSED,\n  WS_GET_MESSAGE\n} from '../constants/index';\n\nexport type TWsState = {\n  wsConnected: boolean;\n  message: any;\n};\n\nconst initialState = {\n  wsConnected: false,\n  message: null,\n};\n\nexport const wsReducer = (state: TWsState = initialState, \n  action: TWsActions) => {\n  switch (action.type) {\n    case WS_CONNECTION_START:\n      return {\n        ...state,\n        message: null,\n      };\n\n    case WS_CONNECTION_SUCCESS:\n      return {\n        ...state,\n        wsConnected: true,\n      };\n\n    case WS_CONNECTION_ERROR:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n\n    case WS_CONNECTION_CLOSE:\n    return {\n      ...state,\n      message: null,\n    };\n\n    case WS_CONNECTION_CLOSED:\n      return {\n        ...state,\n        wsConnected: false,\n      };\n\n    case WS_GET_MESSAGE:\n      return {\n        ...state,\n        message: action.message,\n      };\n\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\n\nimport { burgerIngredientsReducer } from './burger-ingredients';\nimport { burgerConstructorReducer } from './burger-constructor';\nimport { ingredientDetailsReducer } from './ingredient-details';\nimport { orderDetailsReducer } from './order-details';\nimport { userReducer } from './user';\nimport { wsReducer } from './ws';\n\nexport const rootReducer = combineReducers({\n  burgerIngredients: burgerIngredientsReducer,\n  burgerConstructor: burgerConstructorReducer,\n  ingredientDetails: ingredientDetailsReducer,\n  orderDetails: orderDetailsReducer,\n  user: userReducer,\n  ws: wsReducer,\n});","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nimport { compose } from 'redux';\nimport { socketMiddleware } from './middleware/socketMiddleware';\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_CLOSE, WS_CONNECTION_ERROR, WS_CONNECTION_START, WS_CONNECTION_SUCCESS, WS_GET_MESSAGE } from './constants';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst wsUrl = 'wss://norma.nomoreparties.space/orders';\n\nconst wsActions = {\n  wsInit: WS_CONNECTION_START,\n  onOpen: WS_CONNECTION_SUCCESS,\n  wsClose: WS_CONNECTION_CLOSE,\n  onClose: WS_CONNECTION_CLOSED,\n  onError: WS_CONNECTION_ERROR,\n  onMessage: WS_GET_MESSAGE,\n};\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk), applyMiddleware(socketMiddleware({wsUrl, wsActions})));\n\nexport const store = createStore(rootReducer, enhancer);","interface IProps {\n  wsUrl: string,\n  wsActions: any,\n}\n\nexport const socketMiddleware = ({wsUrl, wsActions} : IProps) => {\n  return (store: any) => {\n    let socket: WebSocket | null = null;\n\n    return (next: any) => (action: any) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n      const { wsInit, onOpen, wsClose, onClose, onError, onMessage } = wsActions;\n\n      if (type === wsInit) {\n        const token = payload;\n        if (token){\n          socket = new WebSocket(`${wsUrl}?token=${token.substring(7)}`);\n        }\n        else {\n          socket = new WebSocket(`${wsUrl}/all`);\n        }\n      }\n\n      if (type === wsClose) {\n          socket?.close();\n      }\n\n      if (socket) {\n        socket.onopen = event => {\n          dispatch({ type: onOpen, payload: event });\n        };\n\n        socket.onerror = event => {\n          dispatch({ type: onError, payload: event });\n        };\n\n        socket.onmessage = event => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          dispatch({ type: onMessage, message: restParsedData });\n        };\n\n        socket.onclose = event => {\n          dispatch({ type: onClose, payload: event });\n        };\n      }\n\n      next(action);\n    };\n  };\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport appHeader from './app-header.module.css';\n\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\n\nconst AppHeader = () => {\n  return (\n    <header className={`${appHeader.header} text text_type_main-default pt-4 pb-4`}>\n      <nav className={appHeader.header__menu}>\n        <ul className={`${appHeader.header__links}`}>\n          <li className={`${appHeader.header__link} pl-5 pr-5 mr-2`}>\n            <Link to='/' className={`${appHeader.header__link}`}>\n              <BurgerIcon type=\"primary\" />\n              <p className={`pl-2`}>Конструктор</p>\n            </Link>\n          </li>\n          <li className={`${appHeader.header__link}`}>\n            <Link to='/feed' className={`${appHeader.header__link}`}>\n              <ListIcon type=\"secondary\" />\n              <p className={`pl-2 text_color_inactive`}>Лента заказов</p>\n            </Link>\n          </li>\n        </ul>\n        <Link to='/' className={`${appHeader.header__link}`}>\n          <Logo />\n        </Link>\n        <ul className={`${appHeader.header__links} ${appHeader.header__links_right} pr-5`}>\n          <li className={`${appHeader.header__link} ${appHeader.header__link_type_login} text_color_inactive`}>\n            <Link to='/profile/orders' className={`${appHeader.header__link} ${appHeader.header__link_type_login} text_color_inactive`}>\n              <ProfileIcon type=\"secondary\" />\n              <p className={`pl-2`}>Личный кабинет</p>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default AppHeader;","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook\n} from 'react-redux';\nimport { AppDispatch, AppThunk, RootState } from '../types';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); \n","import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { useSelector } from 'services/hooks/hooks';\n\nimport ingredientStyles from './ingredient.module.css';\n\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  item: TIngredientType,\n}\n\nconst Ingredient = ({ item }: IProps) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [, dragRef] = useDrag({\n    type: 'ingredient',\n    item: {item}\n  });\n\n  const {constructorIngredients} = useSelector((store) => store.burgerConstructor);\n\n  let count = constructorIngredients.filter(x => x._id === item._id).length;\n\n  if(item.type === 'bun') {\n    count *= 2;\n  }\n\n  return (\n    <div className={`${ingredientStyles['ingredient__item']}`} ref={dragRef} onClick={() => history.push('/ingredients/' + item._id, { background: location })} >\n      {count > 0 && <div className={`${ingredientStyles['ingredient__counter']} text_type_digits-default`}>{count}</div>}\n      <img className={`pb-1`} src={item.image} alt={item.name} />\n      <div className={`${ingredientStyles['ingredient__container']} pb-1`}>\n        <p className={`${ingredientStyles['ingredient__price']} text text_type_digits-default pr-2`}>{item.price}</p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n      <p className={`${ingredientStyles['ingredient__name']} text text_type_main-default`}>{item.name}</p>\n    </div>\n  )\n};\n\nexport default Ingredient;","import React, { forwardRef } from 'react';\n\nimport ingredientsListStyles from './ingredients-list.module.css';\nimport Ingredient from 'components/ingredient/ingredient';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  data: ReadonlyArray<TIngredientType>,\n  title: string,\n  type: string,\n}\n\nconst IngredientsList = forwardRef<HTMLDivElement, IProps>((props, ref) => {\n  const { data, title, type } = props as IProps;\n  return (\n    <div className={`${ingredientsListStyles.ingredients}`} ref={ref}>\n      <h3 className={`text text_type_main-medium pb-6`}>{title}</h3>\n      <div className={`${ingredientsListStyles['ingredients__items']} pl-4 pb-10`}>\n        {data.filter(item => item.type === type).map((item) => (\n          <Ingredient key={item._id} item={item} />\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport default IngredientsList;","import React, { useState, createRef } from 'react';\n\nimport { useSelector } from 'services/hooks/hooks';\n\nimport ingredientsStyles from './burger-ingredients.module.css';\n\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport IngredientsList from '../ingredients-list/ingredients-list';\n\nconst BurgerIngredients = () => {\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n  const [current, setCurrent] = useState('one');\n\n  const bunsRef = createRef<HTMLDivElement>();\n  const sauceRef = createRef<HTMLDivElement>();\n  const mainRef = createRef<HTMLDivElement>();\n\n  const onScroll = (e: any) =>\n  {\n    const delta = 10;\n    const containerY = e.target.getBoundingClientRect().y;\n    const sauceY = sauceRef.current!.getBoundingClientRect().y;\n    const mainY = mainRef.current!.getBoundingClientRect().y;\n\n    if (mainY <= containerY + delta){\n      setCurrent('three');\n    } else if (sauceY <= containerY + delta){\n      setCurrent('two');\n    } else {\n      setCurrent('one');\n    }\n  }\n\n  return (\n    <section className={`${ingredientsStyles['burger-ingredients']} pt-10 pl-5 pb-10`}>\n      <h2 className={`text text_type_main-large pb-5`}>Соберите бургер</h2>\n      <div style={{ display: 'flex' }} className={`pb-10`}>\n        <Tab value=\"one\" active={current === 'one'} onClick={(value) => {\n          setCurrent(value);\n          bunsRef.current!.scrollIntoView({ behavior: 'smooth' });\n        }}>\n          Булки\n        </Tab>\n        <Tab value=\"two\" active={current === 'two'} onClick={(value) => {\n          setCurrent(value);\n          sauceRef.current!.scrollIntoView({ behavior: 'smooth' });\n        }}>\n          Соусы\n        </Tab>\n        <Tab value=\"three\" active={current === 'three'} onClick={(value) => {\n          setCurrent(value);\n          mainRef.current!.scrollIntoView({ behavior: 'smooth' });\n        }}>\n          Начинки\n        </Tab>\n      </div>\n      <div className={`${ingredientsStyles['burger-ingredients__ingredients-list-container']}`} onScroll={onScroll}>\n        <IngredientsList data={burgerIngredients} title=\"Булки\" type=\"bun\" ref={bunsRef} />\n        <IngredientsList data={burgerIngredients} title=\"Соусы\" type=\"sauce\" ref={sauceRef} />\n        <IngredientsList data={burgerIngredients} title=\"Начинки\" type=\"main\" ref={mainRef} />\n      </div>\n    </section>\n  );\n}\n\nexport default BurgerIngredients;","const PATHS = {\n  baseUrl: { path: 'https://norma.nomoreparties.space/api' },\n}\n\nconst ORDER_STATUS_DONE: 'done' | string = 'done';\nconst ORDER_STATUS_PENDING: 'pending' | string = 'pending';\nconst ORDER_STATUS_CREATED: 'created' | string = 'created';\n\nexport {\n  PATHS,\n  ORDER_STATUS_DONE,\n  ORDER_STATUS_PENDING,\n  ORDER_STATUS_CREATED,\n}","export const getResponse = (res: Response) => (res.ok\n  ? res.json()\n  : res.json()\n      .then((err: Error) => Promise.reject(new Error(`${err.message} (${res.status} ${res.statusText})`))));","import { getResponse } from \"utils\";\nimport { PATHS } from \"./constants\";\n\nconst requestPasswordReset = ( email: string ) => fetch(`${ PATHS.baseUrl.path }/password-reset`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    email,\n  })\n})\n.then((res) => getResponse(res))\n\nconst createUser = ( email: string, password: string, name: string ) => fetch(`${ PATHS.baseUrl.path }/auth/register`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    email,\n    password,\n    name,\n  })\n})\n.then((res) => getResponse(res))\n\nconst loginUser = ( email: string, password: string ) => fetch(`${ PATHS.baseUrl.path }/auth/login`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    email,\n    password,\n  })\n})\n.then((res) => getResponse(res))\n\nconst getToken = ( token: string ) => fetch(`${ PATHS.baseUrl.path }/auth/token`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    token,\n  })\n})\n.then((res) => getResponse(res))\n\nconst getUser = ( accessToken: string ) => fetch(`${ PATHS.baseUrl.path }/auth/user`, {\n  method: 'GET',\n  headers: {\n    \"Authorization\" : accessToken\n  },\n})\n.then((res) => getResponse(res))\n\nconst exitUser = ( token: string ) => fetch(`${ PATHS.baseUrl.path }/auth/logout`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    token,\n  })\n})\n.then((res) => getResponse(res))\n\nconst setPassword = ( password: string, token: string ) => fetch(`${ PATHS.baseUrl.path }/password-reset/reset`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    password,\n    token,\n  })\n})\n.then((res) => getResponse(res))\n\nconst setUser = ( accessToken: string, name: string, email: string, password: string ) => fetch(`${ PATHS.baseUrl.path }/auth/user`, {\n  method: 'PATCH',\n  headers: {\n    \"Authorization\" : accessToken,\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    name,\n    email,\n    password,\n  })\n})\n.then((res) => getResponse(res))\n\nexport {\n  requestPasswordReset,\n  setPassword,\n  createUser,\n  loginUser,\n  getToken,\n  getUser,\n  exitUser,\n  setUser,\n}","import { createUser, requestPasswordReset, setPassword, loginUser, getToken, getUser, exitUser, setUser } from '../../utils/UserApi';\nimport { AppDispatch, AppThunk } from '../types';\n\nimport {\n  REQUEST_PASSWORD_RESET_REQUEST,\n  REQUEST_PASSWORD_RESET_SUCCESS,\n  REQUEST_PASSWORD_RESET_FAILED,\n  RESET_REQUEST_PASSWORD_RESET,\n  SET_PASSWORD_REQUEST,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAILED,\n  RESET_SET_PASSWORD,\n  CREATE_USER_REQUEST,\n  CREATE_USER_SUCCESS,\n  CREATE_USER_FAILED,\n  RESET_CREATE_USER,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILED,\n  RESET_LOGIN_USER,\n  GET_TOKEN_REQUEST,\n  GET_TOKEN_SUCCESS,\n  GET_TOKEN_FAILED,\n  RESET_GET_TOKEN,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  RESET_GET_USER,\n  EXIT_USER_REQUEST,\n  EXIT_USER_SUCCESS,\n  EXIT_USER_FAILED,\n  PATCH_USER_REQUEST,\n  PATCH_USER_SUCCESS,\n  PATCH_USER_FAILED,\n  RESET_PATCH_USER,\n} from '../constants';\n\nimport { TUserInfoType } from '../types/data';\n\n// Типизация экшенов forgot-password\n\nexport interface IRequestPasswordResetRequest {\n  readonly type: typeof REQUEST_PASSWORD_RESET_REQUEST;\n  readonly email: string;\n}\n\nexport interface IRequestPasswordResetSuccess {\n  readonly type: typeof REQUEST_PASSWORD_RESET_SUCCESS;\n  readonly message: string;\n}\n\nexport interface IRequestPasswordResetFailed {\n  readonly type: typeof REQUEST_PASSWORD_RESET_FAILED;\n}\n\nexport interface IResetRequestPasswordReset {\n  readonly type: typeof RESET_REQUEST_PASSWORD_RESET;\n}\n\n// Типизация экшенов reset-password\n\nexport interface ISetPasswordRequest {\n  readonly type: typeof SET_PASSWORD_REQUEST;\n  readonly password: string;\n  readonly token: string;\n}\n\nexport interface ISetPasswordSuccess {\n  readonly type: typeof SET_PASSWORD_SUCCESS;\n  readonly message: string;\n}\n\nexport interface ISetPasswordFailed {\n  readonly type: typeof SET_PASSWORD_FAILED;\n}\n\nexport interface IResetSetPassword {\n  readonly type: typeof RESET_SET_PASSWORD;\n}\n\n// Типизация экшенов register\n\nexport interface ICreateUserRequest {\n  readonly type: typeof CREATE_USER_REQUEST;\n  readonly email: string;\n  readonly password: string;\n  readonly name: string;\n}\n\nexport interface ICreateUserSuccess {\n  readonly type: typeof CREATE_USER_SUCCESS;\n  readonly user: TUserInfoType;\n  readonly accessToken: string;\n}\n\nexport interface ICreateUserFailed {\n  readonly type: typeof CREATE_USER_FAILED;\n}\n\nexport interface IResetCreateUser {\n  readonly type: typeof RESET_CREATE_USER;\n}\n\n// Типизация экшенов login\n\nexport interface ILoginUserRequest {\n  readonly type: typeof LOGIN_USER_REQUEST;\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface ILoginUserSuccess {\n  readonly type: typeof LOGIN_USER_SUCCESS;\n  readonly user: TUserInfoType;\n  readonly accessToken: string;\n}\n\nexport interface ILoginUserFailed {\n  readonly type: typeof LOGIN_USER_FAILED;\n}\n\nexport interface IResetLoginUser {\n  readonly type: typeof RESET_LOGIN_USER;\n}\n\n// Типизация экшенов get token\n\nexport interface IGetTokenRequest {\n  readonly type: typeof GET_TOKEN_REQUEST;\n  readonly token: string;\n}\n\nexport interface IGetTokenSuccess {\n  readonly type: typeof GET_TOKEN_SUCCESS;\n  readonly accessToken: string;\n}\n\nexport interface IGetTokenFailed {\n  readonly type: typeof GET_TOKEN_FAILED;\n}\n\nexport interface IResetGetToken {\n  readonly type: typeof RESET_GET_TOKEN;\n}\n\n// Типизация экшенов get user\n\nexport interface IGetUserRequest {\n  readonly type: typeof GET_USER_REQUEST;\n  readonly refreshToken: string;\n  readonly accessToken: string;\n}\n\nexport interface IGetUserSuccess {\n  readonly type: typeof GET_USER_SUCCESS;\n  readonly user: TUserInfoType;\n}\n\nexport interface IGetUserFailed {\n  readonly type: typeof GET_USER_FAILED;\n}\n\nexport interface IResetGetUser {\n  readonly type: typeof RESET_GET_USER;\n}\n\n// Типизация экшенов exit\n\nexport interface IExitUserRequest {\n  readonly type: typeof EXIT_USER_REQUEST;\n  readonly refreshToken: string;\n}\n\nexport interface IExitUserSuccess {\n  readonly type: typeof EXIT_USER_SUCCESS;\n  readonly message: string;\n}\n\nexport interface IExitUserFailed {\n  readonly type: typeof EXIT_USER_FAILED;\n}\n\n// Типизация экшенов patch user\n\nexport interface IPatchUserRequest {\n  readonly type: typeof PATCH_USER_REQUEST;\n}\n\nexport interface IPatchUserSuccess {\n  readonly type: typeof PATCH_USER_SUCCESS;\n  readonly user: TUserInfoType;\n}\n\nexport interface IPatchUserFailed {\n  readonly type: typeof PATCH_USER_FAILED;\n}\n\nexport interface IResetPatchUser {\n  readonly type: typeof RESET_PATCH_USER;\n}\n\n// объединение в Union\n\nexport type TUserActions =\n  IRequestPasswordResetRequest\n  | IRequestPasswordResetSuccess\n  | IRequestPasswordResetFailed\n  | IResetRequestPasswordReset\n  | ISetPasswordRequest\n  | ISetPasswordSuccess\n  | ISetPasswordFailed\n  | IResetSetPassword\n  | ICreateUserRequest\n  | ICreateUserSuccess\n  | ICreateUserFailed\n  | IResetCreateUser\n  | ILoginUserRequest\n  | ILoginUserSuccess\n  | ILoginUserFailed\n  | IResetLoginUser\n  | IGetTokenRequest\n  | IGetTokenSuccess\n  | IGetTokenFailed\n  | IResetGetToken\n  | IGetUserRequest\n  | IGetUserSuccess\n  | IGetUserFailed\n  | IResetGetUser\n  | IExitUserRequest\n  | IExitUserSuccess\n  | IExitUserFailed\n  | IPatchUserRequest\n  | IPatchUserSuccess\n  | IPatchUserFailed\n  | IResetPatchUser;\n\n// Экшены forgot-password\n\nexport const requestPasswordResetAction = (email: string): IRequestPasswordResetRequest => ({\n  type: REQUEST_PASSWORD_RESET_REQUEST,\n  email,\n});\n\nexport const requestPasswordResetActionSuccess = (message: string): IRequestPasswordResetSuccess => ({\n  type: REQUEST_PASSWORD_RESET_SUCCESS,\n  message,\n});\n\nexport const requestPasswordResetActionFailed = (): IRequestPasswordResetFailed => ({\n  type: REQUEST_PASSWORD_RESET_FAILED,\n});\n\nexport const resetRequestPasswordResetAction = (): IResetRequestPasswordReset => ({\n  type: RESET_REQUEST_PASSWORD_RESET,\n});\n\n// Экшены reset-password\n\nexport const setPasswordAction = (password: string, token: string): ISetPasswordRequest => ({\n  type: SET_PASSWORD_REQUEST,\n  password,\n  token,\n});\n\nexport const setPasswordActionSuccess = (message: string): ISetPasswordSuccess => ({\n  type: SET_PASSWORD_SUCCESS,\n  message,\n});\n\nexport const setPasswordActionFailed = (): ISetPasswordFailed => ({\n  type: SET_PASSWORD_FAILED,\n});\n\nexport const resetSetPasswordAction = (): IResetSetPassword => ({\n  type: RESET_SET_PASSWORD,\n});\n\n// Экшены register\n\nexport const createUserAction = ( email: string, password: string, name: string): ICreateUserRequest => ({\n  type: CREATE_USER_REQUEST,\n  email,\n  password,\n  name,\n});\n\nexport const createUserActionSuccess = (user: TUserInfoType, accessToken: string): ICreateUserSuccess => ({\n  type: CREATE_USER_SUCCESS,\n  user,\n  accessToken,\n});\n\nexport const createUserActionFailed = (): ICreateUserFailed => ({\n  type: CREATE_USER_FAILED,\n});\n\nexport const resetCreateUserAction = (): IResetCreateUser => ({\n  type: RESET_CREATE_USER,\n});\n\n// Экшены login\n\nexport const loginUserAction = ( email: string, password: string ): ILoginUserRequest => ({\n  type: LOGIN_USER_REQUEST,\n  email,\n  password,\n});\n\nexport const loginUserActionSuccess = (user: TUserInfoType, accessToken: string): ILoginUserSuccess => ({\n  type: LOGIN_USER_SUCCESS,\n  user,\n  accessToken,\n});\n\nexport const loginUserActionFailed = (): ILoginUserFailed => ({\n  type: LOGIN_USER_FAILED,\n});\n\nexport const resetLoginUserAction = (): IResetLoginUser => ({\n  type: RESET_LOGIN_USER,\n});\n\n// Экшены get token\n\nexport const getTokenAction = ( token: string ): IGetTokenRequest => ({\n  type: GET_TOKEN_REQUEST,\n  token,\n});\n\nexport const getTokenActionSuccess = ( accessToken: string ): IGetTokenSuccess => ({\n  type: GET_TOKEN_SUCCESS,\n  accessToken,\n});\n\nexport const getTokenActionFailed = (): IGetTokenFailed => ({\n  type: GET_TOKEN_FAILED,\n});\n\nexport const resetGetTokenAction = (): IResetGetToken => ({\n  type: RESET_GET_TOKEN,\n});\n\n// Экшены get user\n\nexport const getUserAction = ( refreshToken: string, accessToken: string ): IGetUserRequest => ({\n  type: GET_USER_REQUEST,\n  refreshToken,\n  accessToken,\n});\n\nexport const getUserActionSuccess = ( user: TUserInfoType ): IGetUserSuccess => ({\n  type: GET_USER_SUCCESS,\n  user,\n});\n\nexport const getUserActionFailed = (): IGetUserFailed => ({\n  type: GET_USER_FAILED,\n});\n\nexport const resetGetUserAction = (): IResetGetUser => ({\n  type: RESET_GET_USER,\n});\n\n// Экшены exit\n\nexport const exitUserAction = ( refreshToken: string ): IExitUserRequest => ({\n  type: EXIT_USER_REQUEST,\n  refreshToken,\n});\n\nexport const exitUserActionSuccess = ( message: string ): IExitUserSuccess => ({\n  type: EXIT_USER_SUCCESS,\n  message,\n});\n\nexport const exitUserActionFailed = (): IExitUserFailed => ({\n  type: EXIT_USER_FAILED,\n});\n\n// Экшены patch user\n\nexport const patchUserAction = ( ): IPatchUserRequest => ({\n  type: PATCH_USER_REQUEST,\n});\n\nexport const patchUserActionSuccess = (user: TUserInfoType): IPatchUserSuccess => ({\n  type: PATCH_USER_SUCCESS,\n  user,\n});\n\nexport const patchUserActionFailed = (): IPatchUserFailed => ({\n  type: PATCH_USER_FAILED,\n});\n\nexport const resetPatchUserAction = (): IResetPatchUser => ({\n  type: RESET_PATCH_USER,\n});\n\n// Типизированный thunk forgot-password\n\nexport const requestPasswordResetThunk: AppThunk = ( email: string ) => (dispatch: AppDispatch) => {\n  dispatch(requestPasswordResetAction(email));\n  requestPasswordReset(email).then(res => {\n    if (res && res.success) {\n      dispatch(requestPasswordResetActionSuccess(res.message));\n    } else {\n      dispatch(requestPasswordResetActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(requestPasswordResetActionFailed()));\n};\n\n// Типизированный thunk reset-password\n\nexport const setPasswordThunk: AppThunk = ( password: string, token: string ) => (dispatch: AppDispatch) => {\n  dispatch(setPasswordAction(password, token));\n  setPassword(password, token).then(res => {\n    if (res && res.success) {\n      dispatch(setPasswordActionSuccess(res.message));\n    } else {\n      dispatch(setPasswordActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(setPasswordActionFailed()));\n};\n\n// Типизированный thunk register\n\nexport const createUserThunk: AppThunk = ( email: string, password: string, name: string ) => (dispatch: AppDispatch) => {\n  dispatch(createUserAction(email, password, name));\n  createUser(email, password, name).then(res => {\n    if (res && res.success) {\n      localStorage.setItem('refreshToken', res.refreshToken);\n      dispatch(createUserActionSuccess(res.user, res.accessToken));\n    } else {\n      dispatch(createUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(createUserActionFailed()));\n};\n\n// Типизированный thunk login\n\nexport const loginUserThunk: AppThunk = ( email: string, password: string ) => (dispatch: AppDispatch) => {\n  dispatch(loginUserAction(email, password));\n  loginUser(email, password).then(res => {\n    if (res && res.success) {\n      localStorage.setItem('refreshToken', res.refreshToken);\n      dispatch(loginUserActionSuccess(res.user, res.accessToken));\n    } else {\n      dispatch(loginUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(loginUserActionFailed()));\n};\n\n// Типизированный thunk get token\n\nexport const getTokenThunk: AppThunk = ( token: string ) => (dispatch: AppDispatch) => {\n  dispatch(getTokenAction(token));\n  getToken(token).then(res => {\n    if (res && res.success) {\n      localStorage.setItem('refreshToken', res.refreshToken);\n      dispatch(getTokenActionSuccess(res.accessToken));\n    } else {\n      dispatch(getTokenActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(getTokenActionFailed()));\n};\n\n// Типизированный thunk get user\n\nexport const getUserThunk: AppThunk = ( refreshToken: string, accessToken: string ) => (dispatch: AppDispatch | AppThunk) => {\n  dispatch(getUserAction(refreshToken, accessToken));\n\n  if (!refreshToken){\n    dispatch(getUserActionFailed());\n    return;\n  }\n\n  if (!accessToken){\n    getToken(refreshToken).then(res => {\n      if (res && res.success) {\n        localStorage.setItem('refreshToken', res.refreshToken);\n        accessToken = res.accessToken;\n        dispatch(getTokenActionSuccess(accessToken));\n        dispatch(getUserThunk(refreshToken, accessToken));\n      } else {\n        dispatch(getUserActionFailed());\n        return;\n      }\n    })\n    .catch(() =>  dispatch(getUserActionFailed()));\n    return;\n  }\n\n  getUser(accessToken).then(res => {\n    if (res && res.success) {\n      dispatch(getUserActionSuccess(res.user));\n    } else if (res && !res.success && res.message === 'jwt expired') {\n      dispatch(getUserThunk(refreshToken, null));\n    } else {\n      dispatch(getUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(getUserActionFailed()));\n};\n\n// Типизированный thunk exit\n\nexport const exitUserThunk: AppThunk = ( refreshToken: string ) => (dispatch: AppDispatch) => {\n  dispatch(exitUserAction(refreshToken));\n  exitUser(refreshToken).then(res => {\n    if (res && res.success) {\n      localStorage.removeItem('refreshToken');\n      dispatch(exitUserActionSuccess(res.message));\n    } else {\n      dispatch(exitUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(exitUserActionFailed()));\n};\n\n// Типизированный thunk patch user\n\nexport const patchUserThunk: AppThunk = ( refreshToken: string, accessToken: string, name: string, email: string, password: string ) => (dispatch: AppDispatch | AppThunk) => {\n  dispatch(patchUserAction());\n\n  if (!refreshToken){\n    dispatch(patchUserActionFailed());\n    return;\n  }\n\n  if (!accessToken){\n    getToken(refreshToken).then(res => {\n      if (res && res.success) {\n        localStorage.setItem('refreshToken', res.refreshToken);\n        accessToken = res.accessToken;\n        dispatch(getTokenActionSuccess(accessToken));\n        dispatch(patchUserThunk(refreshToken, accessToken, name, email, password));\n      } else {\n        dispatch(patchUserActionFailed());\n        return;\n      }\n    })\n    .catch(() =>  dispatch(patchUserActionFailed()));\n    return;\n  }\n\n  setUser(accessToken, name, email, password).then(res => {\n    if (res && res.success) {\n      dispatch(patchUserActionSuccess(res.user));\n    } else if (res && !res.success && res.message === 'jwt expired') {\n      dispatch(patchUserThunk(refreshToken, null));\n    } else {\n      dispatch(patchUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(patchUserActionFailed()));\n};","import { setOrder } from '../../utils/IngredientsApi';\nimport { AppDispatch, AppThunk } from '../types';\n\nimport {\n  GET_ORDER_DETAILS_UNAUTH_START,\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  RESET_ORDER_DETAILS,\n} from '../constants';\n\nimport { TIngredientType, TOrderDetailsType } from '../types/data';\nimport { getToken } from 'utils/UserApi';\nimport { getTokenActionSuccess } from './user';\n\nexport interface IGetOrderDetailsUnauthStart {\n  readonly type: typeof GET_ORDER_DETAILS_UNAUTH_START;\n}\n\nexport interface IGetOrderDetailsRequest {\n  readonly type: typeof GET_ORDER_DETAILS_REQUEST;\n  readonly ingredients: ReadonlyArray<TIngredientType | undefined>;\n}\n\nexport interface IGetOrderDetailsSuccess {\n  readonly type: typeof GET_ORDER_DETAILS_SUCCESS;\n  readonly orderDetails: TOrderDetailsType;\n}\n\nexport interface IGetOrderDetailsFailed {\n  readonly type: typeof GET_ORDER_DETAILS_FAILED;\n}\n\nexport interface IResetOrderDetails {\n  readonly type: typeof RESET_ORDER_DETAILS;\n}\n\nexport type TOrderDetailsActions =\n  IGetOrderDetailsUnauthStart\n  | IGetOrderDetailsRequest\n  | IGetOrderDetailsSuccess\n  | IGetOrderDetailsFailed\n  | IResetOrderDetails;\n\nexport const getOrderDetailsUnauthStart = (): IGetOrderDetailsUnauthStart => ({\n  type: GET_ORDER_DETAILS_UNAUTH_START,\n});\n\nexport const getOrderDetailsAction = (ingredients: ReadonlyArray<TIngredientType | undefined>): IGetOrderDetailsRequest => ({\n  type: GET_ORDER_DETAILS_REQUEST,\n  ingredients,\n});\n\nexport const getOrderDetailsActionSuccess = (orderDetails: TOrderDetailsType): IGetOrderDetailsSuccess => ({\n  type: GET_ORDER_DETAILS_SUCCESS,\n  orderDetails,\n});\n\nexport const getOrderDetailsActionFailed = (): IGetOrderDetailsFailed => ({\n  type: GET_ORDER_DETAILS_FAILED,\n});\n\nexport const resetOrderDetailsAction = (): IResetOrderDetails => ({\n  type: RESET_ORDER_DETAILS,\n});\n\nexport const getOrderDetailsThunk: AppThunk = ( refreshToken: string, accessToken: string, ingredients: ReadonlyArray<TIngredientType> ) => (dispatch: AppDispatch | AppThunk) => {\n  dispatch(getOrderDetailsAction(ingredients));\n\n  if (!refreshToken){\n    dispatch(getOrderDetailsActionFailed());\n    return;\n  }\n\n  if (!accessToken){\n    getToken(refreshToken).then(res => {\n      if (res && res.success) {\n        localStorage.setItem('refreshToken', res.refreshToken);\n        accessToken = res.accessToken;\n        dispatch(getTokenActionSuccess(accessToken));\n        dispatch(getOrderDetailsThunk(refreshToken, accessToken, ingredients));\n      } else {\n        dispatch(getOrderDetailsActionFailed());\n        return;\n      }\n    })\n    .catch(() =>  dispatch(getOrderDetailsActionFailed()));\n    return;\n  }\n\n  setOrder(ingredients, accessToken).then(res => {\n    if (res && res.success) {\n      dispatch(getOrderDetailsActionSuccess(res.order));\n    } else if (res && !res.success && res.message === 'jwt expired') {\n      dispatch(getOrderDetailsThunk(refreshToken, null, ingredients));\n    } else {\n      dispatch(getOrderDetailsActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(getOrderDetailsActionFailed()));\n};","import { PATHS } from \"./constants\";\n\nimport { TIngredientType } from 'services/types/data';\nimport { getResponse } from \"utils\";\n\nconst getIngredients = () => fetch(`${ PATHS.baseUrl.path }/ingredients`, {\n  headers: {\n      'Content-Type': 'application/json',\n  },\n})\n  .then((res) => getResponse(res))\n\nconst setOrder = ( ingredients: ReadonlyArray<TIngredientType>, accessToken: string ) => fetch(`${ PATHS.baseUrl.path }/orders`, {\n  method: 'POST',\n  headers: {\n      \"Authorization\" : accessToken,\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    ingredients: ingredients,\n  })\n})\n.then((res) => getResponse(res))\n\nexport {\n  getIngredients,\n  setOrder,\n}","import React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { useDispatch } from 'services/hooks/hooks';\n\nimport fillingConstructorElementStyles from './filling-constructor-element.module.css';\n\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { deleteConstructorIngredient, sortConstructorIngredient } from 'services/actions/burger-constructor';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  item: TIngredientType,\n}\n\ninterface IDropItem {\n  index: number,\n}\n\nconst FillingConstructorElement = ({ item }: IProps) => {\n  const dispatch = useDispatch();\n\n  const [, dragRef] = useDrag({\n    type: 'filling',\n    item: {index: item.index}\n  });\n\n  const [{ isHover }, dropTarget] = useDrop({\n    accept: 'filling',\n    drop({index}: IDropItem) {\n      dispatch(sortConstructorIngredient(index, item.index! ));\n    },\n    collect: monitor => ({\n      isHover: monitor.isOver(),\n    }),\n  });\n\n  const attachRef = (el: any) => {\n    dragRef(el);\n    dropTarget(el);\n  }\n\n  const handleClose = (index: number) => {\n    dispatch(deleteConstructorIngredient(index));\n  }\n\n  return (\n    <div className={`${fillingConstructorElementStyles['filling-constructor-element__container']} ${isHover && fillingConstructorElementStyles['filling-constructor-element__container-hovered']} pr-4`} ref={attachRef}>\n      <DragIcon type=\"primary\" />\n      <ConstructorElement\n        text={item.name}\n        price={item.price}\n        thumbnail={item.image_mobile}\n        handleClose={() => handleClose(item.index!)}\n      />\n    </div>\n  );\n}\n\nexport default FillingConstructorElement;","import { v4 as uuidv4 } from 'uuid';\n\nimport {\n  ADD_CONSTRUCTOR_INGREDIENT,\n  DELETE_CONSTRUCTOR_INGREDIENT,\n  SORT_CONSTRUCTOR_INGREDIENT,\n  RESET_CONSTRUCTOR_INGREDIENTS,\n} from '../constants';\n\nimport { TIngredientType } from '../types/data';\n\nexport interface IAddConstructorIngredient {\n  readonly type: typeof ADD_CONSTRUCTOR_INGREDIENT;\n  readonly constructorIngredient: TIngredientType;\n}\n\nexport interface IDeleteConstructorIngredient {\n  readonly type: typeof DELETE_CONSTRUCTOR_INGREDIENT;\n  readonly ingredientIndex: number;\n}\n\nexport interface ISortConstructorIngredient {\n  readonly type: typeof SORT_CONSTRUCTOR_INGREDIENT;\n  readonly ingredientIndexFrom: number;\n  readonly ingredientIndexTo: number;\n}\n\nexport interface IResetConstructorIngredients {\n  readonly type: typeof RESET_CONSTRUCTOR_INGREDIENTS;\n}\n\nexport type TConstructorIngredientActions =\n  | IAddConstructorIngredient\n  | IDeleteConstructorIngredient\n  | ISortConstructorIngredient\n  | IResetConstructorIngredients;\n\n\nexport const addConstructorIngredient = ( ingredient: TIngredientType ): IAddConstructorIngredient => ({\n  type: ADD_CONSTRUCTOR_INGREDIENT,\n  constructorIngredient: { ...ingredient, uniqueId: uuidv4() },\n});\n\nexport const deleteConstructorIngredient = ( index: number ): IDeleteConstructorIngredient => ({\n  type: DELETE_CONSTRUCTOR_INGREDIENT,\n  ingredientIndex: index,\n});\n\nexport const sortConstructorIngredient = ( indexFrom: number, indexTo: number ): ISortConstructorIngredient => ({\n  type: SORT_CONSTRUCTOR_INGREDIENT,\n  ingredientIndexFrom: indexFrom,\n  ingredientIndexTo: indexTo,\n});\n\nexport const resetConstructorIngredients = (): IResetConstructorIngredients => ({\n  type: RESET_CONSTRUCTOR_INGREDIENTS,\n});\n","import React from 'react';\nimport { useDrop } from 'react-dnd';\n\nimport { useDispatch } from 'services/hooks/hooks';\n\nimport burgerConstructorItemsStyles from './burger-constructor-items.module.css';\n\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { addConstructorIngredient } from 'services/actions/burger-constructor';\nimport FillingConstructorElement from 'components/filling-constructor-element/filling-constructor-element';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  bun: TIngredientType,\n  fillings: ReadonlyArray<TIngredientType>,\n}\n\ninterface IDropItem {\n  item: TIngredientType,\n}\n\nconst BurgerConstructorItems = ({ bun, fillings } : IProps) => {\n  const dispatch = useDispatch();\n\n  const [, dropTarget] = useDrop({\n    accept: 'ingredient',\n    drop({item}:IDropItem) {\n      dispatch(addConstructorIngredient(item));\n    },\n  });\n\n  return (\n      <div className={`${burgerConstructorItemsStyles['burger-constructor__items-container']}`} ref={dropTarget}>\n        <div className={`${burgerConstructorItemsStyles['burger-constructor__item-container']} pr-4`}>\n          {bun\n            ? <ConstructorElement\n              type=\"top\"\n              isLocked={true}\n              text={`${bun.name} (верх)`}\n              price={bun.price}\n              thumbnail={bun.image_mobile}\n            />\n            : <div className='mt-20'></div>\n          }\n        </div>\n        <div className={`${burgerConstructorItemsStyles['burger-constructor__center-items-container']}`}>\n          { fillings?.map(( item ) => \n              <FillingConstructorElement key={item.uniqueId} item={item} />\n            )\n          }\n        </div>\n        <div className={`${burgerConstructorItemsStyles['burger-constructor__item-container']} pr-4`}>\n        {bun\n          ? <ConstructorElement\n            type=\"bottom\"\n            isLocked={true}\n            text={`${bun.name} (низ)`}\n            price={bun.price}\n            thumbnail={bun.image_mobile}\n          />\n          : <div className='mt-20'></div>\n          }\n        </div>\n      </div>\n  );\n}\n\nexport default BurgerConstructorItems;","const useAuth = () => {\n  return {\n    refreshToken: localStorage.getItem('refreshToken'),\n  }\n};\n\nexport default useAuth;","import React, { useEffect } from 'react';\n\nimport burgerConstructorStyles from './burger-constructor.module.css';\n\nimport { useSelector, useDispatch } from 'services/hooks/hooks';\n\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { getOrderDetailsUnauthStart, getOrderDetailsThunk, resetOrderDetailsAction } from 'services/actions/order-details';\nimport BurgerConstructorItems from 'components/burger-constructor-items/burger-constructor-items';\nimport { TIngredientType } from 'services/types/data';\nimport useAuth from 'services/auth';\nimport { Redirect } from 'react-router-dom';\n\nconst BurgerConstructor = () => {\n  const dispatch = useDispatch();\n  const { refreshToken } = useAuth();\n\n  const { accessToken } = useSelector((state) => state.user);\n  const { constructorIngredients } = useSelector((store) => store.burgerConstructor);\n  const { orderDetailsUnauthStart, orderDetailsRequest } = useSelector((store) => store.orderDetails);\n\n  const isBun = (item: TIngredientType) => item.type === 'bun';\n\n  const bun = constructorIngredients?.find(item => isBun(item));\n  const fillings = constructorIngredients?.map((item, index) => { return {...item, index: index}} ).filter(item => !isBun(item));\n\n  const reducer = (previousItem: number, currentItem: TIngredientType) => previousItem + currentItem.price;\n  const totalPrice = (bun?.price ?? 0) * 2 + (fillings?.reduce(reducer, 0) ?? 0);\n\n  const orderIngredientsData = [bun].concat(fillings).concat([bun]);\n\n  const createOrder = () => {\n    if (orderDetailsRequest){\n      return;\n    }\n\n    if (refreshToken){\n      dispatch(getOrderDetailsThunk(refreshToken, accessToken, orderIngredientsData));\n    }\n    else {\n      dispatch(getOrderDetailsUnauthStart());\n    }\n  }\n\n  useEffect(() => {\n    dispatch(resetOrderDetailsAction());\n  }, [orderDetailsUnauthStart])\n\n  if (!refreshToken && orderDetailsUnauthStart) {\n    return <Redirect to={'/login'} />\n  }\n\n  return (\n    <section className={`${burgerConstructorStyles['burger-constructor']} mt-25 pl-10 pb-10`}>\n      <BurgerConstructorItems bun={bun!} fillings={fillings} />\n      <div className={`${burgerConstructorStyles['burger-constructor__burger-price-container']} pt-10 pr-2`}>\n        <div className={`${burgerConstructorStyles['burger-constructor__burger-price-container']} pr-10`}>\n          <p className={`${burgerConstructorStyles['burger-constructor__burger-price']} text text_type_digits-medium`}>{totalPrice}</p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n        {bun && totalPrice > 0 && <div className={`pl-10 ${orderDetailsRequest && burgerConstructorStyles['burger-constructor__order-button']}`}><Button type=\"primary\" size=\"large\" onClick={createOrder} >\n          {orderDetailsRequest ? 'Заказываем...' : 'Оформить заказ'}\n        </Button></div>}\n      </div>\n    </section>\n  );\n}\n\nexport default BurgerConstructor;","export default __webpack_public_path__ + \"static/media/order-details__done.887b83be.gif\";","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nimport orderDetailsStyles from 'components/order-details/order-details.module.css';\n\nimport doneImagePath from 'images/order-details__done.gif'\nimport { resetConstructorIngredients } from 'services/actions/burger-constructor';\n\nconst OrderDetails = () => {\n  const dispatch = useDispatch();\n  const { orderDetails } = useSelector((state) => state.orderDetails);\n\n  useEffect(() => {\n    dispatch(resetConstructorIngredients());\n  }, [orderDetails]);\n\n  return (\n    <div className={`${orderDetailsStyles['order-details']} pb-30 pt-4`}>\n      <h3 className={`${orderDetailsStyles['order-details__title']} text text_type_digits-large pb-8`}>{ orderDetails?.number }</h3>\n      <p className={`text text_type_main-medium pb-15`}>идентификатор заказа</p>\n      <img className={`${orderDetailsStyles['order-details__done-image']}`} src={doneImagePath} alt=\"Выполняется\" />\n      <p className={`text text_type_main-default pt-15 pb-2`}>Ваш заказ начали готовить</p>\n      <p className={`text text_type_main-default text_color_inactive`}>Дождитесь готовности на орбитальной станции</p>\n    </div>\n  );\n}\n\nexport default OrderDetails;","import React from 'react';\n\nimport modalOverlayStyles from './modal-overlay.module.css';\n\ninterface IProps {\n  children: any,\n  onClose: () => void,\n}\n\nconst ModalOverlay = ({ children, onClose }: IProps) => {\n  return(\n    <section className={`${modalOverlayStyles['modal-overlay']}`} onClick={(evt) => {\n      if (evt.target !== evt.currentTarget)\n        return;\n      onClose();\n    }}>\n      { children }\n    </section>\n  );\n};\n\nexport default ModalOverlay;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport modalStyles from 'components/modal/modal.module.css';\n\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ModalOverlay from 'components/modal-overlay/modal-overlay';\n\nconst modalRoot = document.getElementById(\"modals\");\n\ninterface IProps {\n  children: any,\n  title?: string,\n  onClose: () => void,\n}\n\nconst Modal = ({ children, title, onClose }: IProps) => {\n  const closeByEscape = (evt: KeyboardEvent) => {\n    if (evt.key === 'Escape') {\n      onClose();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', closeByEscape);\n    return () => {\n      document.removeEventListener('keydown', closeByEscape);\n    }\n  }, []);\n\n  return createPortal(\n    <ModalOverlay onClose={onClose} >\n      <div className={`${modalStyles['modal']} pt-10 pr-10 pl-10`} >\n        <div className={`${modalStyles['modal__header-container']}`}>\n          <h2 className={`${modalStyles['modal__title']} text text_type_main-large`}>{title}</h2>\n          <button className={`${modalStyles['modal__close-icon']}`} type=\"button\" onClick={onClose}><CloseIcon type=\"primary\" /></button>\n        </div>\n        {children}\n      </div>\n    </ModalOverlay>,\n    modalRoot as Element\n  )\n};\n\nexport default Modal;","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport homeStyles from './home.module.css' ;\n\nimport BurgerIngredients from 'components/burger-ingredients/burger-ingredients';\nimport BurgerConstructor from 'components/burger-constructor/burger-constructor';\nimport OrderDetails from 'components/order-details/order-details';\nimport Modal from 'components/modal/modal';\n\nimport { useSelector, useDispatch } from 'services/hooks/hooks';\n\nimport { resetOrderDetailsAction } from 'services/actions/order-details';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const {orderDetails} = useSelector((state) => state.orderDetails);\n\n  const onOrderModalClose = () => {\n    dispatch(resetOrderDetailsAction());\n  }\n\n  return (\n    <main className={`${homeStyles.main}`}>\n      <DndProvider backend={HTML5Backend}>\n        <BurgerIngredients />\n\n        <BurgerConstructor />\n\n        {orderDetails &&\n          <Modal onClose={onOrderModalClose} >\n            <OrderDetails />\n          </Modal> \n        }\n      </DndProvider>\n    </main>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport authFormStyles from './auth-form.module.css' ;\n\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\n\ninterface IProps {\n  name: string,\n  onSubmit: (event: React.FormEvent) => void,\n  title: string,\n  children: any,\n  buttonText: string,\n  bottomText: any,\n}\n\nconst AuthForm = ({name, onSubmit, title, children, buttonText, bottomText} : IProps) => {\n  return (\n    <main className={`${authFormStyles.main}`}>\n      <section className={`${authFormStyles['auth-form']}`}>\n        <form className={`${authFormStyles['auth-form__container']}`} name={name} onSubmit={onSubmit}>\n          <h2 className={`${authFormStyles['auth-form__title']} text text_type_main-medium`}>{title}</h2>\n          {children}\n          <Button type=\"primary\" size=\"medium\">\n            {buttonText ?? \"Отправить\"}\n          </Button>\n          {bottomText}\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default AuthForm;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\nimport loginFormStyles from './login.module.css' ;\n\nimport { Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport { loginUserThunk } from \"services/actions/user\";\nimport useAuth from \"services/auth\";\n\ninterface IProps {\n  location?: any,\n}\n\nconst Login = ({location} : IProps) => {\n  const dispatch = useDispatch();\n  const { accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  if (accessToken || refreshToken) {\n    return <Redirect to={ location?.state?.from || '/' } />\n  }\n\n  return (\n    <AuthForm title=\"Вход\" name=\"login\" buttonText={\"Войти\"} onSubmit={e => {e.preventDefault(); dispatch(loginUserThunk(email, password))}} children={\n        <div className={`${loginFormStyles['login-form-container']} pt-6 pb-6`}>\n            <Input\n              type={'email'}\n              placeholder={'E-mail'}\n              onChange={e => setEmail(e.target.value)}\n              value={email}\n              name={'email'}\n              error={false}\n              errorText={'Ошибка'}\n              size={'default'}\n            />\n            <PasswordInput \n              onChange={e => setPassword(e.target.value)} \n              value={password} \n              name={'password'} \n              size={'default'} \n            />\n        </div>\n      } \n      bottomText={\n        <div>\n          <p className={`${loginFormStyles['login-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Вы — новый пользователь? <Link to=\"register\" className={`${loginFormStyles['login-form__link']} text text_type_main-default text_color_inactive`}>Зарегистрироваться</Link></p>\n          <p className={`${loginFormStyles['login-form__bottom-text']} text text_type_main-default text_color_inactive pt-4`}>Забыли пароль? <Link to=\"forgot-password\" className={`${loginFormStyles['login-form__link']} text text_type_main-default text_color_inactive`}>Восстановить пароль</Link></p>\n        </div>\n      }\n    />\n  )\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nimport registerFormStyles from './register.module.css' ;\n\nimport { Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport { createUserThunk } from \"services/actions/user\";\nimport useAuth from \"services/auth\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const { createUserSuccess, accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  if (createUserSuccess){\n    return <Redirect to='/' />;\n  }\n\n  if (accessToken || refreshToken) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <AuthForm title=\"Регистрация\" name=\"register\" buttonText={\"Зарегистрироваться\"} onSubmit={e => {e.preventDefault(); dispatch(createUserThunk(email, password, name))}} children={\n        <div className={`${registerFormStyles['register-form-container']} pt-6 pb-6`}>\n            <Input\n              type={'text'}\n              placeholder={'Имя'}\n              onChange={e => setName(e.target.value)} \n              value={name}\n              name={'name'}\n              error={false}\n              errorText={'Ошибка'}\n              size={'default'}\n            />\n            <Input\n              type={'email'}\n              placeholder={'E-mail'}\n              onChange={e => setEmail(e.target.value)} \n              value={email}\n              name={'email'}\n              error={false}\n              errorText={'Ошибка'}\n              size={'default'}\n            />\n            <PasswordInput \n              onChange={e => setPassword(e.target.value)} \n              value={password} \n              name={'password'} \n              size={'default'} \n            />\n        </div>\n      } \n      bottomText={\n        <p className={`${registerFormStyles['register-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Уже зарегистрированы? <Link to=\"login\" className={`${registerFormStyles['register-form__link']} text text_type_main-default text_color_inactive`}>Войти</Link></p>\n      }\n    />\n  )\n}\n\nexport default Register;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport forgotPasswordFormStyles from './forgot-password.module.css' ;\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\nimport { requestPasswordResetThunk } from 'services/actions/user';\n\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport useAuth from \"services/auth\";\n\nconst ForgotPassword = () => {\n  const dispatch = useDispatch();\n  const { requestPasswordResetSuccess, accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [email, setEmail] = useState('');\n\n  if (requestPasswordResetSuccess){\n    return <Redirect to='/reset-password'/>;\n  }\n\n  if (accessToken || refreshToken) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <AuthForm title=\"Восстановление пароля\" name=\"forgot-password\" buttonText={\"Восстановить\"} onSubmit={e => {e.preventDefault(); dispatch(requestPasswordResetThunk(email))}} children={\n        <div className={`${forgotPasswordFormStyles['forgot-password-form-container']} pt-6 pb-6`}>\n          <Input\n            type={'email'}\n            placeholder={'Укажите e-mail'}\n            onChange={e => setEmail(e.target.value)} \n            value={email}\n            name={'email'}\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          /> \n        </div>\n      } \n      bottomText={\n        <div>\n          <p className={`${forgotPasswordFormStyles['forgot-password-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Вспомнили пароль? <Link to=\"register\" className={`${forgotPasswordFormStyles['forgot-password-form__link']} text text_type_main-default text_color_inactive`}>Войти</Link></p>\n        </div>\n      }\n    />\n  )\n}\n\nexport default ForgotPassword;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\nimport resetPasswordFormStyles from './reset-password.module.css' ;\n\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport { setPasswordThunk } from '../../services/actions/user';\nimport useAuth from \"services/auth\";\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const { setPasswordSuccess, requestPasswordResetSuccess, accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState('');\n\n  if (setPasswordSuccess){\n    return <Redirect to='/login' />;\n  }\n\n  if (!requestPasswordResetSuccess || accessToken || refreshToken) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <AuthForm title=\"Восстановление пароля\" name=\"reset-password\" buttonText={\"Сохранить\"} onSubmit={e => {e.preventDefault(); dispatch(setPasswordThunk(password, token))}} children={\n        <div className={`${resetPasswordFormStyles['reset-password-form-container']} pt-6 pb-6`}>\n          <Input\n            type={'password'}\n            placeholder={'Введите новый пароль'}\n            onChange={e => setPassword(e.target.value)} \n            value={password}\n            name={'password'}\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          /> \n          <Input\n            type={'text'}\n            placeholder={'Введите код из письма'}\n            onChange={e => setToken(e.target.value)} \n            value={token}\n            name={'token'}\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          /> \n        </div>\n      } \n      bottomText={\n        <div>\n          <p className={`${resetPasswordFormStyles['reset-password-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Вспомнили пароль? <Link to=\"login\" className={`${resetPasswordFormStyles['reset-password-form__link']} text text_type_main-default text_color_inactive`}>Войти</Link></p>\n        </div>\n      }\n    />\n  )\n}\n\nexport default ResetPassword;","import React, { useEffect } from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"services/hooks/hooks\";\nimport { exitUserThunk } from \"services/actions/user\";\nimport useAuth from 'services/auth';\n\nimport profileMenuStyles from './profile-menu.module.css';\n\nconst ProfileMenu = () => {\n  const dispatch = useDispatch();\n  const { refreshToken } = useAuth();\n  const { exitUserSuccess } = useSelector((state) => state.user);\n\n  useEffect(() => {}, [exitUserSuccess])\n\n  if (!refreshToken) {\n    return <Redirect to={'/login'} />\n  }\n\n  return (\n    <section className={`${profileMenuStyles['profile-menu']}`}>\n      <nav className={`${profileMenuStyles['profile-menu__navigation']}`}>\n        <NavLink exact to=\"/profile\" activeClassName={`${profileMenuStyles['profile-menu__link_active']}`} className={`${profileMenuStyles['profile-menu__link']} text text_type_main-medium text_color_inactive`} >Профиль</NavLink>\n        <NavLink to=\"/profile/orders\" activeClassName={`${profileMenuStyles['profile-menu__link_active']}`} className={`${profileMenuStyles['profile-menu__link']} text text_type_main-medium text_color_inactive`}>История заказов</NavLink>\n        <button className={`${profileMenuStyles['profile-menu__link']} text text_type_main-medium text_color_inactive`} onClick={() => dispatch(exitUserThunk(refreshToken))}>Выход</button>\n      </nav>\n      <p className={`${profileMenuStyles['profile-menu__caption']} text text_type_main-default text_color_inactive pt-20`}>В этом разделе вы можете изменить свои персональные данные</p>\n    </section>\n  )\n};\n\nexport default ProfileMenu;","import React, { useState, useEffect } from \"react\";\n\nimport profileFormStyles from './profile.module.css' ;\n\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector, useDispatch } from \"services/hooks/hooks\";\nimport { getUserThunk, patchUserThunk, resetPatchUserAction } from \"services/actions/user\";\nimport useAuth from \"services/auth\";\nimport ProfileMenu from \"components/profile-menu/profile-menu\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { user, accessToken, patchUserSuccess } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [nameValue, setNameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n\n  const [currenNameValue, setCurrentNameValue] = useState('');\n  const [currentEmailValue, setCurrentEmailValue] = useState('');\n  const [currentPasswordValue, setCurrentPasswordValue] = useState('');\n\n  const [nameDisabled, setNameDisabled] = useState(true);\n  const [emailDisabled, setEmailDisabled] = useState(true);\n  const [passwordDisabled, setPasswordDisabled] = useState(true);\n\n  const [buttonsVisible, setButtonsVisible] = useState(false);\n\n  useEffect(() => {\n    dispatch(getUserThunk(refreshToken, accessToken));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      setNameValue(user.name);\n      setEmailValue(user.email);\n      setCurrentNameValue(user.name);\n      setCurrentEmailValue(user.email);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (\n      ((nameValue !== currenNameValue)) ||\n      ((emailValue !== currentEmailValue)) ||\n      ((passwordValue !== currentPasswordValue))\n    ) {\n      setButtonsVisible(true);\n    } else {\n      setButtonsVisible(false);\n    }\n  }, [nameValue, emailValue, passwordValue, currenNameValue, currentEmailValue, currentPasswordValue, nameDisabled, emailDisabled, passwordDisabled]);\n\n  useEffect(() => {\n    if (patchUserSuccess)\n    {\n      dispatch(resetPatchUserAction());\n      if (user) {\n        setCurrentNameValue(user.name);\n        setCurrentEmailValue(user.email);\n      }\n      setCurrentPasswordValue('');\n      setPasswordValue('');\n      setNameDisabled(true);\n      setEmailDisabled(true);\n      setPasswordDisabled(true);\n    }\n  }, [dispatch, patchUserSuccess, user]);\n\n  const onNameIconClick = () => {\n    if(nameDisabled) {\n      setCurrentNameValue(nameValue);\n    } else {\n      setNameValue(currenNameValue);\n    }\n    setNameDisabled(!nameDisabled);\n  }\n\n  const onEmailIconClick = () => {\n    if(emailDisabled) {\n      setCurrentEmailValue(emailValue);\n    } else {\n      setEmailValue(currentEmailValue);\n    }\n    setEmailDisabled(!emailDisabled);\n  }\n\n  const onPasswordIconClick = () => {\n    if(passwordDisabled) {\n      setCurrentPasswordValue(passwordValue);\n    } else {\n      setPasswordValue(currentPasswordValue);\n    }\n    setPasswordDisabled(!passwordDisabled);\n  }\n\n  const confirmlInput = (e: any) => {\n    e.preventDefault();\n    dispatch(patchUserThunk(refreshToken, accessToken, nameValue, emailValue, passwordValue));\n  }\n\n  const cancelInput = (e: any) => {\n    e.preventDefault()\n    setNameDisabled(true);\n    setEmailDisabled(true);\n    setPasswordDisabled(true);\n    setNameValue(currenNameValue);\n    setEmailValue(currentEmailValue);\n    setPasswordValue(currentPasswordValue);\n  }\n\n  return (\n    <main className={`${profileFormStyles.main}`}>\n      <ProfileMenu />\n      <section className={`${profileFormStyles['profile-form']}`}>\n        <form className={`${profileFormStyles['profile-form__container']}`}>\n          <Input\n            type={'text'}\n            placeholder={'Имя'}\n            onChange={e => setNameValue(e.target.value)}\n            icon={nameDisabled ? 'EditIcon' : 'CloseIcon'}\n            value={nameValue}\n            name={'name'}\n            error={false}\n            onIconClick={onNameIconClick}\n            errorText={'Ошибка'}\n            size={'default'}\n            disabled={nameDisabled}\n          />\n          <Input\n            type={'email'}\n            placeholder={'Логин'}\n            onChange={e => setEmailValue(e.target.value)}\n            icon={emailDisabled ? 'EditIcon' : 'CloseIcon'}\n            value={emailValue}\n            name={'email'}\n            error={false}\n            onIconClick={onEmailIconClick}\n            errorText={'Ошибка'}\n            size={'default'}\n            disabled={emailDisabled}\n          />\n          <Input\n            type={'password'}\n            placeholder={'Пароль'}\n            onChange={e => setPasswordValue(e.target.value)}\n            icon={passwordDisabled ? 'EditIcon' : 'CloseIcon'}\n            value={passwordDisabled? '******' : passwordValue}\n            name={'password'}\n            error={false}\n            onIconClick={onPasswordIconClick}\n            errorText={'Ошибка'}\n            size={'default'}\n            disabled={passwordDisabled}\n          />\n          {buttonsVisible && \n            <div className={`${profileFormStyles['profile-form__button-container']} text text_type_main-default`}>\n              <Button type=\"secondary\" size=\"medium\" onClick={cancelInput}>\n                Отмена\n              </Button>\n              <Button type=\"primary\" size=\"medium\" onClick={confirmlInput} >\n                Сохранить\n              </Button>\n            </div>\n          }\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport useAuth from 'services/auth';\n\nconst ProtectedRoute = ({ children, path, exact, ...rest }: RouteProps) => {\n  const {refreshToken} = useAuth();\n\n  return (\n      <Route\n        path={path}\n        exact={exact}\n        {...rest}\n        render={({ location  }) => (\n          refreshToken ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: location }\n              }}\n            />\n          )\n        )}\n      /> \n  );\n}\n\nexport default ProtectedRoute;","import React from 'react';\nimport { useSelector } from 'services/hooks/hooks';\n\nimport orderIngredientStyles from './order-ingredient.module.css';\n\ninterface IProps {\n  ingredientId?: string | null,\n  text?: string | null,\n}\n\nconst OrderIngredient = ({ingredientId, text} : IProps) => {\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n\n  const ingredient = burgerIngredients?.find(x => x._id === ingredientId);\n\n  return (\n    <>\n    {ingredient &&\n        <div className={`${orderIngredientStyles['order-ingredient']}`}>\n          <div className={`${orderIngredientStyles['order-ingredient__item']}`}>\n            <img className={`${orderIngredientStyles['order-ingredient__item-image']} ${text && orderIngredientStyles['order-ingredient__item-image__covered']}`} src={ingredient.image_mobile} alt=\"Краторная булка N-200i\" />\n            {text && <p className={`${orderIngredientStyles['order-ingredient__item-text']} text text_type_main-default`}>{text}</p>}\n          </div>\n        </div>\n    }\n    </>\n  );\n}\n\nexport default OrderIngredient;","import OrderIngredient from 'components/order-ingredient/order-ingredient';\nimport orderIngredientsStyles from './order-ingredients.module.css';\n\ninterface IProps {\n  orderId: string,\n  ingredientIds: ReadonlyArray<string | null>,\n}\n\nconst OrderIngredients = ({orderId, ingredientIds} : IProps) => {\n  return (\n    <div className={`${orderIngredientsStyles['order-ingredients']}`}>\n      {ingredientIds.slice(0,6).map((id, index, array) => <OrderIngredient key={orderId+id+index} ingredientId={id} text={(ingredientIds?.length > 6 && index === 0) ? `+${ingredientIds?.length - array.length + 1}` : null }/>)}\n    </div>\n  );\n}\n\nexport default OrderIngredients;","import React from 'react';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport orderCardStyles from './order-card.module.css';\nimport OrderIngredients from 'components/order-ingredients/order-ingredients';\nimport { TOrderType } from 'services/types/data';\nimport { useSelector } from 'services/hooks/hooks';\nimport { useHistory } from 'react-router-dom';\nimport { ORDER_STATUS_CREATED, ORDER_STATUS_DONE, ORDER_STATUS_PENDING } from 'utils/constants';\n\ninterface IProps {\n  order: TOrderType,\n  statusVisible?: boolean,\n}\n\nconst OrderCard = ({order, statusVisible} : IProps) => {\n  const history = useHistory();\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n\n  const sum = order.ingredients?.reduce(\n    (prev, cur) => prev + (burgerIngredients?.find(x => x._id === cur)?.price ?? 0),\n    0\n  );  \n\n  const date = new Date(order.createdAt);\n  const timezoneOffset = date.getTimezoneOffset();\n  const timezoneHours = timezoneOffset / -60;\n  const dayDelta = new Date().getDate() - date.getDate();\n  const dayString = dayDelta === 0 ? 'Сегодня' : (dayDelta === 1 ? 'Вчера' : (dayDelta + ' дня назад'));\n  const timezoneString = `${dayString}, ${('0' + date.getHours()).slice(-2)}:${('0' + date.getMinutes()).slice(-2)} i-GMT${timezoneHours >= 0 && '+'}${timezoneHours}`;\n  \n  let statusText = '';\n  let statusTextClass = ``;\n\n  switch (order.status) {\n    case ORDER_STATUS_DONE:\n      statusText = 'Выполнен';\n      statusTextClass = `${orderCardStyles['text_color_success']}`\n      break;\n    case ORDER_STATUS_PENDING:\n      statusText = 'Готовится';\n      break;\n    case ORDER_STATUS_CREATED:\n      statusText = 'Создан';\n      break;\n    default:\n      statusText = '';\n  }\n\n  return (\n    <div className={`${orderCardStyles['order-card']} p-6 mr-2`} onClick={() => history.push(history.location.pathname + '/' + order._id, { background: history.location })}>\n      <p className={`${orderCardStyles['order-title']} text text_type_digits-default`}>#{order.number}<span className={`text_type_main-default text_color_inactive`}>{timezoneString}</span></p>\n      <div className={`${orderCardStyles['order-texts']}`}>\n        <h3 className={`text text_type_main-medium`}>{order.name}</h3>\n        {statusVisible && <p className={`text text_type_main-default ${statusTextClass}`}>\n          {statusText}\n        </p>}\n      </div>\n      <div className={`${orderCardStyles['order-card__burger-data-container']}`}>\n        <OrderIngredients orderId={order._id} ingredientIds={order.ingredients}/>\n        <div className={`${orderCardStyles['order-card__burger-price-container']}`}>\n          <p className={`${orderCardStyles['order-card__burger-price']} text text_type_digits-default`}>{sum}</p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OrderCard;","import React from 'react';\n\nimport ordersFeedStyles from './orders-feed.module.css';\n\nimport OrderCard from 'components/order-card/order-card';\nimport { TOrderType } from 'services/types/data';\n\ninterface IProps {\n  orders: ReadonlyArray<TOrderType>,\n  statusVisible?: boolean,\n}\n\nconst OrdersFeed = ({orders, statusVisible} : IProps) => {\n\n  return (\n    <section className={`${ordersFeedStyles['orders-feed']}`}>\n      <div className={`${ordersFeedStyles['orders-feed__container']}`}>\n        {orders?.map(order => <OrderCard key={order._id} order={order} statusVisible={statusVisible} />)}\n      </div>\n    </section>\n  );\n}\n\nexport default OrdersFeed;","import {\n  WS_CONNECTION_SUCCESS,\n  WS_CONNECTION_ERROR,\n  WS_CONNECTION_CLOSE,\n  WS_CONNECTION_CLOSED,\n  WS_GET_MESSAGE,\n  WS_CONNECTION_START,\n} from '../constants/index';\n\nexport interface IWsConnectionStart {\n  readonly type: typeof WS_CONNECTION_START;\n}\n\nexport interface IWsConnectionSuccess {\n  readonly type: typeof WS_CONNECTION_SUCCESS;\n}\n\nexport interface IWsConnectionError {\n  readonly type: typeof WS_CONNECTION_ERROR;\n}\n\nexport interface IWsConnectionClose {\n  readonly type: typeof WS_CONNECTION_CLOSE;\n}\n\nexport interface IWsConnectionClosed {\n  readonly type: typeof WS_CONNECTION_CLOSED;\n}\n\nexport interface IWsGetMessage {\n  readonly type: typeof WS_GET_MESSAGE;\n  readonly message?: string;\n}\n\nexport type TWsActions =\n  IWsConnectionSuccess\n  | IWsConnectionError\n  | IWsConnectionClose\n  | IWsConnectionClosed\n  | IWsGetMessage\n  | IWsConnectionStart;\n\nexport const wsConnectionStart = (token?: string | null) => {\n  return {\n    type: WS_CONNECTION_START,\n    payload: token,\n  };\n};\n\nexport const wsConnectionSuccess = () => {\n  return {\n    type: WS_CONNECTION_SUCCESS\n  };\n};\n\nexport const wsConnectionError = () => {\n  return {\n    type: WS_CONNECTION_ERROR\n  };\n};\n\nexport const wsConnectionClose = () => {\n  return {\n    type: WS_CONNECTION_CLOSE\n  };\n};\n\nexport const wsConnectionClosed = () => {\n  return {\n    type: WS_CONNECTION_CLOSED\n  };\n};\n\nexport const wsGetMessage = (message: string) => {\n  return {\n    type: WS_GET_MESSAGE,\n    payload: message,\n  };\n};","import React, { useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport profileOrdersFormStyles from './profile-orders.module.css' ;\n\nimport useAuth from \"services/auth\";\nimport ProfileMenu from \"components/profile-menu/profile-menu\";\nimport OrdersFeed from \"components/orders-feed/orders-feed\";\n\nimport { getUserThunk } from \"services/actions/user\";\nimport { useDispatch, useSelector } from \"services/hooks/hooks\";\nimport { wsConnectionClose, wsConnectionStart } from \"services/actions/ws\";\nimport { TOrderType } from \"services/types/data\";\n\nconst ProfileOrders = () => {\n  const dispatch = useDispatch();\n  const { user, accessToken } = useSelector((state) => state.user);\n  const { message } = useSelector((state) => state.ws);\n  const { refreshToken } = useAuth();\n\n  useEffect(() => {\n    dispatch(getUserThunk(refreshToken, accessToken));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      dispatch(wsConnectionStart(accessToken));\n    }\n    return () => {\n      dispatch(wsConnectionClose());\n    };\n  }, [user]);\n\n  if (!refreshToken) {\n    return <Redirect to={'/login'} />\n  }\n\n  return (\n    <main className={`${profileOrdersFormStyles.main}`}>\n      <ProfileMenu />\n      <div className={`${profileOrdersFormStyles['orders-container']} pt-10 pl-15`}>\n        <OrdersFeed orders={message?.orders?.sort((a: TOrderType, b: TOrderType) => +b.number - +a.number)} statusVisible={true}/>\n      </div>\n    </main>\n  )\n}\n\nexport default ProfileOrders;","import React from \"react\";\n\nimport nutritionValueStyles from 'components/nutrition-value/nutrition-value.module.css';\n\ninterface IProps {\n  title: string,\n  value?: number,\n}\n\nconst NutritionValue = ({ title, value }: IProps) => {\n  return (\n    <div className={`${nutritionValueStyles['nutrition-value']}`}>\n      <h4 className={`text text_type_main-default text_color_inactive`}>{title}</h4>\n      <p className={`text text_type_digits-default text_color_inactive`}>{value}</p>\n    </div>\n  )\n}\n\nexport default NutritionValue;\n","import { TIngredientType } from 'services/types/data';\nimport { getIngredients } from '../../utils/IngredientsApi'\nimport { AppDispatch, AppThunk } from '../types';\n\nimport {\n  GET_BURGER_INGREDIENTS_REQUEST,\n  GET_BURGER_INGREDIENTS_SUCCESS,\n  GET_BURGER_INGREDIENTS_FAILED,\n} from '../constants';\n\nexport interface IGetBurgerIngredientsRequest {\n  readonly type: typeof GET_BURGER_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetBurgerIngredientsFailed {\n  readonly type: typeof GET_BURGER_INGREDIENTS_FAILED;\n}\n\nexport interface IGetBurgerIngredientsSuccess {\n  readonly type: typeof GET_BURGER_INGREDIENTS_SUCCESS;\n  readonly burgerIngredients : ReadonlyArray<TIngredientType>;\n}\n\nexport type TBurgerIngredientsActions =\n  IGetBurgerIngredientsRequest\n  | IGetBurgerIngredientsFailed\n  | IGetBurgerIngredientsSuccess;\n\n\nexport const getBurgerIngredientsAction = (): IGetBurgerIngredientsRequest => ({\n  type: GET_BURGER_INGREDIENTS_REQUEST,\n});\n\n\nexport const getBurgerIngredientsFailedAction = (): IGetBurgerIngredientsFailed => ({\n  type: GET_BURGER_INGREDIENTS_FAILED,\n});\n\n\nexport const getBurgerIngredientsSuccessAction = ( burgerIngredients: ReadonlyArray<TIngredientType> ): IGetBurgerIngredientsSuccess => ({\n  type: GET_BURGER_INGREDIENTS_SUCCESS,\n  burgerIngredients \n});\n\n\nexport const getBurgerIngredientsThunk: AppThunk = () => (dispatch: AppDispatch) => {\n  dispatch(getBurgerIngredientsAction());\n  getIngredients().then(res => {\n    if (res && res.success) {\n      dispatch(getBurgerIngredientsSuccessAction(res.data));\n    } else {\n      dispatch(getBurgerIngredientsFailedAction());\n    }\n  })\n  .catch(() =>  dispatch(getBurgerIngredientsFailedAction()));\n};","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nimport ingredientDetailsStyles from 'components/ingredient-details/ingredient-details.module.css'\n\nimport NutritionValue from \"components/nutrition-value/nutrition-value\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { setIngredientDetails } from 'services/actions/ingredient-details';\nimport { getBurgerIngredientsThunk } from 'services/actions/burger-ingredients';\n\ninterface IParams {\n  ingredientId: string;\n}\n\nconst IngredientDetails = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { ingredientId } = useParams<IParams>();\n\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n  const {ingredientDetails} = useSelector((state) => state.ingredientDetails);\n\n  useEffect(() => {\n    if (!burgerIngredients || burgerIngredients?.length === 0){\n        dispatch(getBurgerIngredientsThunk());\n        return;\n    }\n    const item = burgerIngredients?.find( x => x._id === ingredientId );\n\n    if (item)\n    {\n      dispatch(setIngredientDetails(item));\n    }\n    else\n    {\n      history.push('');\n    }\n    \n  }, [burgerIngredients, ingredientId]);\n\n  return (\n    <div className={`${ingredientDetailsStyles['ingredient-details']}`}>\n      <img className={`${ingredientDetailsStyles['ingredient-details__image']} pb-4`} src={ingredientDetails?.image_large} alt={ingredientDetails?.name} />\n      <h3 className={`${ingredientDetailsStyles['ingredient-details__title']} text text_type_main-large pb-8`}>{ingredientDetails?.name}</h3>\n      <div className={`${ingredientDetailsStyles['ingredient-details__nutrition-values']} pb-15`}>\n        <NutritionValue title={'Калории,ккал'} value={ingredientDetails?.calories} />\n        <NutritionValue title={'Белки, г'} value={ingredientDetails?.proteins} />\n        <NutritionValue title={'Жиры, г'} value={ingredientDetails?.fat} />\n        <NutritionValue title={'Углеводы, г'} value={ingredientDetails?.carbohydrates} />\n      </div>\n    </div>\n  );\n}\n\nexport default IngredientDetails;","import {\n  SET_INGREDIENT_DETAILS,\n  RESET_INGREDIENT_DETAILS,\n} from '../constants';\n\nimport { TIngredientType } from '../types/data';\n\nexport interface ISetIngredientsDetails {\n  readonly type: typeof SET_INGREDIENT_DETAILS;\n  readonly ingredientDetails: TIngredientType;\n}\n\nexport interface IResetIngredientsDetails {\n  readonly type: typeof RESET_INGREDIENT_DETAILS;\n}\n\nexport type TIngredintsDetailsActions =\n  ISetIngredientsDetails\n  | IResetIngredientsDetails;\n\nexport const setIngredientDetails = ( ingredient: TIngredientType ): ISetIngredientsDetails => ({\n  type: SET_INGREDIENT_DETAILS,\n  ingredientDetails: ingredient,\n});\n\nexport const resetIngredientDetails = (): IResetIngredientsDetails => ({\n  type: RESET_INGREDIENT_DETAILS,\n});","import React from 'react';\nimport { TOrderType } from 'services/types/data';\nimport { ORDER_STATUS_DONE, ORDER_STATUS_PENDING } from 'utils/constants';\n\nimport ordersBoardStyles from './orders-board.module.css';\n\ninterface IProps {\n  total: number,\n  totalToday: number,\n  orders: ReadonlyArray<TOrderType>,\n}\n\nconst OrdersBoard = ({total, totalToday, orders} : IProps ) => {\n\n  return (\n    <section className={`${ordersBoardStyles['orders-board']}`}>\n      <div className={`${ordersBoardStyles['orders-board__container']}`}>\n        <div className={`${ordersBoardStyles['orders-board__done']}`}>\n          <h3 className={`text text_type_main-medium`}>Готовы:</h3>\n          <div className={`${ordersBoardStyles['orders-board__numbers-container']}`}>\n            <div className={`${ordersBoardStyles['orders-board__numbers']}`}>\n              {orders?.filter(order => order.status === ORDER_STATUS_DONE).map((order, index) => <p key={index} className={`${ordersBoardStyles['orders-board__done-number']} text text_type_digits-default`}>{order.number}</p>)}\n            </div>\n          </div>\n        </div>\n        <div className={`${ordersBoardStyles['orders-board__in-work']}`}>\n          <h3 className={`text text_type_main-medium`}>В работе:</h3>\n          <div className={`${ordersBoardStyles['orders-board__numbers-container']}`}>\n            <div className={`${ordersBoardStyles['orders-board__numbers']}`}>\n              {orders?.filter(order => order.status === ORDER_STATUS_PENDING).map((order, index) => <p key={index} className={`text text_type_digits-default`}>{order.number}</p>)}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div>\n        <h3 className={`text text_type_main-medium`}>Выполнено за все время:</h3>\n        <p className={`${ordersBoardStyles['orders-board__completed-number']} text text_type_digits-large`}>{total}</p>\n      </div>\n      <div>\n        <h3 className={`text text_type_main-medium`}>Выполнено за сегодня:</h3>\n        <p className={`${ordersBoardStyles['orders-board__completed-number']} text text_type_digits-large`}>{totalToday}</p>\n      </div>\n    </section>\n  );\n}\n\nexport default OrdersBoard;","import React, { useEffect } from 'react';\n\nimport feedStyles from './feed.module.css' ;\n\nimport OrdersFeed from 'components/orders-feed/orders-feed';\nimport OrdersBoard from 'components/orders-board/orders-board';\n\nimport { wsConnectionClose, wsConnectionStart } from 'services/actions/ws';\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nconst Feed = () => {\n  const dispatch = useDispatch();\n  const { message } = useSelector((state) => state.ws);\n\n  useEffect(() => {\n    dispatch(wsConnectionStart());\n    return () => {\n      dispatch(wsConnectionClose());\n    };\n  }, [dispatch]);\n\n  return (\n    <main className={`${feedStyles.main} pt-10`}>\n      <h2 className={`${feedStyles['feed-title']} text text_type_main-large`}>Лента заказов</h2>\n      <div className={`${feedStyles['feed-container']}`}>\n        <OrdersFeed orders={message?.orders}/>\n      </div>\n      <OrdersBoard total={message?.total} totalToday={message?.totalToday} orders={message?.orders} />\n    </main>\n  );\n}\n\nexport default Feed;\n","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React from 'react';\nimport { useSelector } from 'services/hooks/hooks';\n\nimport orderInfoIngredientStyles from 'components/order-info-ingredient/order-info-ingredient.module.css';\n\ninterface IProps {\n  ingredientId?: string | null,\n  ingredientIds: ReadonlyArray<string>,\n}\n\nconst OrderInfoIngredient = ({ingredientId, ingredientIds} : IProps) => {\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n\n  const ingredient = burgerIngredients?.find(x => x._id === ingredientId);\n  const count = ingredientIds?.filter(x => x === ingredientId).length ?? 0;\n\n  return (\n    <>\n    {ingredient &&\n      <div className={`${orderInfoIngredientStyles['order-info-ingredient']}`}>\n          <div className={`${orderInfoIngredientStyles['order-info-ingredient__icon']}`}>\n            <div className={`${orderInfoIngredientStyles['order-info-ingredient__item']}`}>\n              <img className={`${orderInfoIngredientStyles['order-info-ingredient__item-image']}`} src={ingredient.image_mobile} alt={ingredient.name} />\n            </div>\n          </div>\n          <p className={`${orderInfoIngredientStyles['order-info-ingredient__text']} pl-4 text text_type_main-default`}>\n            {ingredient.name}\n          </p>\n          <p className={`${orderInfoIngredientStyles['order-info-ingredient__price']} pl-4 text text_type_digits-default`}>\n            {count} x {ingredient.price}\n          </p>\n          <CurrencyIcon type='primary' />\n      </div>\n    }\n    </>\n  );\n}\n\nexport default OrderInfoIngredient;","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nimport orderInfoStyles from 'components/order-info/order-info.module.css';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport { ORDER_STATUS_CREATED, ORDER_STATUS_DONE, ORDER_STATUS_PENDING } from 'utils/constants';\nimport { TOrderType } from 'services/types/data';\nimport { wsConnectionClose, wsConnectionStart } from 'services/actions/ws';\nimport OrderInfoIngredient from 'components/order-info-ingredient/order-info-ingredient';\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\ninterface IParams {\n  orderId: string;\n}\n\ninterface IProps {\n  isModal?: boolean,\n}\n\nconst OrderInfo = ({isModal} : IProps) => {\n  const dispatch = useDispatch();\n  const { orderId } = useParams<IParams>();\n  const { message } = useSelector((state) => state.ws);\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n\n  useEffect(() => {\n    if (!message) {\n      dispatch(wsConnectionStart());\n    }\n  }, [dispatch, message]);\n\n  useEffect(() => {\n    return () => {\n      if(!isModal) {\n        dispatch(wsConnectionClose());\n      }\n    };\n  }, [dispatch]);\n\n  const order = message?.orders?.find((x: TOrderType) => x._id === orderId);\n\n  if (message && !order) {\n    return <Redirect to='/' />;\n  }\n\n  const sum = order?.ingredients?.reduce(\n    (prev: number, cur: string) => prev + (burgerIngredients?.find(x => x._id === cur)?.price ?? 0),\n    0\n  );  \n\n  const date = new Date(order?.createdAt);\n  const timezoneOffset = date.getTimezoneOffset();\n  const timezoneHours = timezoneOffset / -60;\n  const dayDelta = new Date().getDate() - date.getDate();\n  const dayString = dayDelta === 0 ? 'Сегодня' : (dayDelta === 1 ? 'Вчера' : (dayDelta + ' дня назад'));\n  const timezoneString = `${dayString}, ${('0' + date.getHours()).slice(-2)}:${('0' + date.getMinutes()).slice(-2)} i-GMT${timezoneHours >= 0 && '+'}${timezoneHours}`;\n  \n  let statusText = '';\n  let statusTextClass = ``;\n\n  switch (order?.status) {\n    case ORDER_STATUS_DONE:\n      statusText = 'Выполнен';\n      statusTextClass = `${orderInfoStyles['text_color_success']}`\n      break;\n    case ORDER_STATUS_PENDING:\n      statusText = 'Готовится';\n      break;\n    case ORDER_STATUS_CREATED:\n      statusText = 'Создан';\n      break;\n    default:\n      statusText = '';\n  }\n\n  const onlyUnique = (value: string, index: number, self: string) => {\n    return self.indexOf(value) === index;\n  }\n\n  return (\n    order\n      ? <div className={`${orderInfoStyles['order-info']} pb-10`}>\n          <p className={`${orderInfoStyles['order-title']} ${isModal && orderInfoStyles['order-title_modal']} text text_type_digits-default pb-4`}>#{order?.number}</p>\n          <h3 className={`text text_type_main-medium pb-2`}>{order?.name}</h3>\n          <p className={`text text_type_main-default ${statusTextClass} pb-15`}>{statusText}</p>\n          <p className={`text text_type_main-medium pb-6`}>Состав:</p>\n          <div className={`${orderInfoStyles['order-info-ingredients']}`}>\n            {order.ingredients?.filter(onlyUnique).map((ingredientId: string, index: number) => <OrderInfoIngredient key={ingredientId + index} ingredientId={ingredientId} ingredientIds={order.ingredients} />)}\n          </div>\n          <div className={`${orderInfoStyles['order-info-time-price']}`}>\n            <span className={`${orderInfoStyles['order-info-time']} text_type_main-default text_color_inactive`}>{timezoneString}</span>\n            <p className={`${orderInfoStyles['order-info-price']} text text_type_digits-default pr-2`}>{sum}</p>\n            <CurrencyIcon type='primary' />\n          </div>\n        </div>\n      : <></>\n  );\n}\n\nexport default OrderInfo;","import React from 'react';\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\n\nimport Home from 'pages/home/home';\nimport Login from 'pages/login/login';\nimport Register from 'pages/register/register';\nimport ForgotPassword from 'pages/forgot-password/forgot-password';\nimport ResetPassword from 'pages/reset-password/reset-password';\nimport Profile from 'pages/profile/profile';\nimport ProtectedRoute from 'components/protected-route/protected-route';\nimport ProfileOrders from 'pages/profile-orders/profile-orders';\nimport { useDispatch } from 'services/hooks/hooks';\nimport { resetIngredientDetails } from 'services/actions/ingredient-details';\nimport IngredientDetails from 'components/ingredient-details/ingredient-details';\nimport Modal from 'components/modal/modal';\nimport Feed from 'pages/feed/feed';\nimport OrderInfo from 'components/order-info/order-info';\n\ninterface ILocationState {\n  background: any;\n}\n\nconst ModalSwitch = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { state } = useLocation<ILocationState>();\n  const background = state && state.background;\n\n  const onIngredientModalClose = () => {\n    dispatch(resetIngredientDetails());\n    history.goBack();\n  }\n\n  const openedFromList = background && history.action === 'PUSH';\n\n  return (\n    <>\n      <Switch location={openedFromList ? background : location}>\n        <Route path={\"/\"} exact={true}>\n          <Home />\n        </Route>\n        <Route path={\"/ingredients/:ingredientId\"} children={<IngredientDetails />} exact={true} />\n        <Route path={\"/login\"} component={Login}>\n        </Route>\n        <Route path={\"/register\"} exact={true} >\n          <Register />\n        </Route>\n        <Route path={\"/forgot-password\"} exact={true} >\n          <ForgotPassword />\n        </Route>\n        <Route path={\"/reset-password\"} exact={true} >\n          <ResetPassword />\n        </Route>\n        <Route path={\"/feed/:orderId\"} children={<OrderInfo />} exact={true} />\n        <Route path={\"/feed\"} exact={true}>\n          <Feed />\n        </Route>\n        <ProtectedRoute path={\"/profile\"} exact={true}>\n          <Profile />\n        </ProtectedRoute>\n        <ProtectedRoute path={\"/profile/orders/:orderId\"} children={<OrderInfo />} exact={true} />\n        <ProtectedRoute path={\"/profile/orders\"} exact={true}>\n          <ProfileOrders />\n        </ProtectedRoute>\n        <Route path=\"*\">\n          404\n        </Route>\n      </Switch>\n      {openedFromList && <Route path=\"/ingredients/:ingredientId\" children={\n        <Modal title={\"Детали ингредиента\"} onClose={onIngredientModalClose} >\n          <IngredientDetails />\n        </Modal> \n      } />}\n      {openedFromList && <Route path=\"/feed/:orderId\" children={\n        <Modal onClose={onIngredientModalClose} >\n          <OrderInfo isModal={true}/>\n        </Modal> \n      } />}\n      {openedFromList && <Route path=\"/profile/orders/:orderId\" children={\n        <Modal onClose={onIngredientModalClose} >\n          <OrderInfo isModal={true}/>\n        </Modal> \n      } />}\n    </>\n  );\n}\n\nexport default ModalSwitch;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport appStyles from 'components/app/app.module.css' ;\n\nimport AppHeader from 'components/app-header/app-header';\nimport ModalSwitch from 'components/modal-switch/modal-switch';\nimport { useDispatch } from 'services/hooks/hooks';\nimport { getBurgerIngredientsThunk } from 'services/actions/burger-ingredients';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getBurgerIngredientsThunk())\n  }, [dispatch]);\n\n  return (\n    <Router basename='react-burger'>\n      <div className={`${appStyles.app}`}>\n        <AppHeader/>\n        <ModalSwitch/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from 'services/store';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport './vendor/normalize.css';\n\nimport App from './components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-menu\":\"profile-menu_profile-menu__1Yitf\",\"profile-menu__navigation\":\"profile-menu_profile-menu__navigation__2Z2Eq\",\"profile-menu__link\":\"profile-menu_profile-menu__link__4TkT1\",\"profile-menu__link_active\":\"profile-menu_profile-menu__link_active__55Im5\",\"profile-menu__caption\":\"profile-menu_profile-menu__caption__2QwS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-info\":\"order-info_order-info__ltYCB\",\"order-title\":\"order-info_order-title__1FlGT\",\"order-info__done-image\":\"order-info_order-info__done-image__3bhPa\",\"text_color_success\":\"order-info_text_color_success__3SpUJ\",\"order-info-ingredients\":\"order-info_order-info-ingredients__1ahjs\",\"order-info-time-price\":\"order-info_order-info-time-price__3pqtU\",\"order-info-time\":\"order-info_order-info-time__hY-sK\",\"order-title_modal\":\"order-info_order-title_modal__3ojye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-card\":\"order-card_order-card__2RkRZ\",\"order-title\":\"order-card_order-title__10hg7\",\"order-card__burger-data-container\":\"order-card_order-card__burger-data-container__21Zhc\",\"order-card__burger-price-container\":\"order-card_order-card__burger-price-container__14ktH\",\"order-card__burger-price\":\"order-card_order-card__burger-price__1ZtBP\",\"order-texts\":\"order-card_order-texts__1qle0\",\"text_color_success\":\"order-card_text_color_success__F3Y6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-info-ingredient\":\"order-info-ingredient_order-info-ingredient__3V0GW\",\"order-info-ingredient__icon\":\"order-info-ingredient_order-info-ingredient__icon__19Oi-\",\"order-info-ingredient__item\":\"order-info-ingredient_order-info-ingredient__item__18Q0b\",\"order-info-ingredient__item-image\":\"order-info-ingredient_order-info-ingredient__item-image__2S6vR\",\"order-info-ingredient__item-image__covered\":\"order-info-ingredient_order-info-ingredient__item-image__covered__1NWeb\",\"order-info-ingredient__price\":\"order-info-ingredient_order-info-ingredient__price__3wSOz\",\"order-info-ingredient__text\":\"order-info-ingredient_order-info-ingredient__text__1IVII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient__item\":\"ingredient_ingredient__item__1GTeL\",\"ingredient__container\":\"ingredient_ingredient__container__1_br5\",\"ingredient__name\":\"ingredient_ingredient__name__3gIIs\",\"ingredient__counter\":\"ingredient_ingredient__counter__3ed5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor\":\"burger-constructor_burger-constructor__2Wv3Z\",\"burger-constructor__burger-price-container\":\"burger-constructor_burger-constructor__burger-price-container__1EqL3\",\"burger-constructor__burger-price\":\"burger-constructor_burger-constructor__burger-price__1kRgh\",\"burger-constructor__order-button\":\"burger-constructor_burger-constructor__order-button__Il3TT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form-container\":\"login_login-form-container__3fdEU\",\"login-form__link\":\"login_login-form__link__2pxAz\",\"login-form__input\":\"login_login-form__input__1nZkZ\",\"login-form__field\":\"login_login-form__field__v_Gpc\",\"login-form__bottom-text\":\"login_login-form__bottom-text__32h6G\",\"input_size_default\":\"login_input_size_default__28895\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-ingredient\":\"order-ingredient_order-ingredient__3ICgY\",\"order-ingredient__item\":\"order-ingredient_order-ingredient__item__TF1Vi\",\"order-ingredient__item-image\":\"order-ingredient_order-ingredient__item-image__3PuPz\",\"order-ingredient__item-image__covered\":\"order-ingredient_order-ingredient__item-image__covered__26A77\",\"order-ingredient__item-text\":\"order-ingredient_order-ingredient__item-text__1Rabv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor__items-container\":\"burger-constructor-items_burger-constructor__items-container__3Dfop\",\"burger-constructor__center-items-container\":\"burger-constructor-items_burger-constructor__center-items-container__2_VRP\",\"burger-constructor__item-container\":\"burger-constructor-items_burger-constructor__item-container__3yyjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"modal__header-container\":\"modal_modal__header-container__1X7X0\",\"modal__title\":\"modal_modal__title__CykZc\",\"modal__close-icon\":\"modal_modal__close-icon__1B_ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"auth-form_main__3dvC0\",\"auth-form\":\"auth-form_auth-form__Ruiec\",\"auth-form__container\":\"auth-form_auth-form__container__39lkj\",\"auth-form__title\":\"auth-form_auth-form__title__3RqkY\",\"auth-form__link\":\"auth-form_auth-form__link__3z_s9\",\"auth-form__input\":\"auth-form_auth-form__input__3xCRR\",\"auth-form__field\":\"auth-form_auth-form__field__Ifo3Q\",\"auth-form__bottom-text\":\"auth-form_auth-form__bottom-text__AFycj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile_main__qGy5r\",\"profile-form\":\"profile_profile-form__37ykj\",\"profile-form__container\":\"profile_profile-form__container__S6vx1\",\"profile-form__button-container\":\"profile_profile-form__button-container__elb5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-details\":\"ingredient-details_ingredient-details__zttXH\",\"ingredient-details__image\":\"ingredient-details_ingredient-details__image__1EWkH\",\"ingredient-details__title\":\"ingredient-details_ingredient-details__title__2zsUn\",\"ingredient-details__nutrition-values\":\"ingredient-details_ingredient-details__nutrition-values__2itqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-details\":\"order-details_order-details__3xw4W\",\"order-details__title\":\"order-details_order-details__title__BOwot\",\"order-details__done-image\":\"order-details_order-details__done-image__1yvzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register-form-container\":\"register_register-form-container__1CE3F\",\"register-form__link\":\"register_register-form__link__aATpA\",\"register-form__bottom-text\":\"register_register-form__bottom-text__hK0V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot-password-form-container\":\"forgot-password_forgot-password-form-container__q_00V\",\"forgot-password-form__link\":\"forgot-password_forgot-password-form__link__IaIgH\",\"forgot-password-form__input\":\"forgot-password_forgot-password-form__input__3azJw\",\"forgot-password-form__field\":\"forgot-password_forgot-password-form__field__25tvT\",\"forgot-password-form__bottom-text\":\"forgot-password_forgot-password-form__bottom-text__3DweC\",\"input_size_default\":\"forgot-password_input_size_default__2Ba19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset-password-form-container\":\"reset-password_reset-password-form-container__1Zncv\",\"reset-password-form__link\":\"reset-password_reset-password-form__link__gGYME\",\"reset-password-form__input\":\"reset-password_reset-password-form__input__3t6UW\",\"reset-password-form__field\":\"reset-password_reset-password-form__field__1C0v5\",\"reset-password-form__bottom-text\":\"reset-password_reset-password-form__bottom-text__2kX0I\",\"input_size_default\":\"reset-password_input_size_default__O115y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"feed_main__3gURw\",\"feed-container\":\"feed_feed-container__2S9vY\",\"feed-title\":\"feed_feed-title__15JXv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredients\":\"burger-ingredients_burger-ingredients__3ja-s\",\"burger-ingredients__ingredients-list-container\":\"burger-ingredients_burger-ingredients__ingredients-list-container__3r3bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredients-list_ingredients__2NfY-\",\"ingredients__items\":\"ingredients-list_ingredients__items__17U65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filling-constructor-element__container\":\"filling-constructor-element_filling-constructor-element__container__2Vhnu\",\"filling-constructor-element__container-hovered\":\"filling-constructor-element_filling-constructor-element__container-hovered__3Le3v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-orders_main__3CNRY\",\"orders-container\":\"profile-orders_orders-container__2hoW-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders-feed\":\"orders-feed_orders-feed__241n3\",\"orders-feed__container\":\"orders-feed_orders-feed__container__3Qy4k\"};"],"sourceRoot":""}