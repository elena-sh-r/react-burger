{"version":3,"sources":["components/app/app.module.css","pages/home/home.module.css","components/modal-overlay/modal-overlay.module.css","pages/profile-orders/profile-orders.module.css","components/nutrition-value/nutrition-value.module.css","components/app-header/app-header.module.css","services/constants/index.ts","services/reducers/burger-ingredients.ts","services/reducers/burger-constructor.ts","services/reducers/ingredient-details.ts","services/reducers/order-details.ts","services/reducers/user.ts","services/reducers/index.ts","services/store.ts","components/app-header/app-header.tsx","services/hooks/hooks.ts","components/ingredient/ingredient.tsx","components/ingredients-list/ingredients-list.tsx","utils/constants.ts","utils/IngredientsApi.ts","services/actions/burger-ingredients.ts","components/burger-ingredients/burger-ingredients.tsx","utils/UserApi.ts","services/actions/user.ts","services/actions/order-details.ts","components/filling-constructor-element/filling-constructor-element.tsx","services/actions/burger-constructor.ts","components/burger-constructor-items/burger-constructor-items.tsx","services/auth.js","components/burger-constructor/burger-constructor.tsx","images/order-details__done.gif","components/order-details/order-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","pages/home/home.tsx","components/auth-form/auth-form.tsx","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/profile-menu/profile-menu.tsx","pages/profile/profile.tsx","components/protected-route/protected-route.tsx","pages/profile-orders/profile-orders.tsx","components/nutrition-value/nutrition-value.tsx","components/ingredient-details/ingredient-details.tsx","services/actions/ingredient-details.ts","components/modalSwitch/modal-switch.tsx","components/app/app.tsx","index.tsx","components/profile-menu/profile-menu.module.css","components/ingredient/ingredient.module.css","pages/login/login.module.css","components/burger-constructor/burger-constructor.module.css","components/burger-constructor-items/burger-constructor-items.module.css","components/modal/modal.module.css","components/auth-form/auth-form.module.css","pages/profile/profile.module.css","components/ingredient-details/ingredient-details.module.css","components/order-details/order-details.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/burger-ingredients/burger-ingredients.module.css","components/ingredients-list/ingredients-list.module.css","components/filling-constructor-element/filling-constructor-element.module.css"],"names":["module","exports","ADD_CONSTRUCTOR_INGREDIENT","DELETE_CONSTRUCTOR_INGREDIENT","SORT_CONSTRUCTOR_INGREDIENT","RESET_CONSTRUCTOR_INGREDIENTS","GET_BURGER_INGREDIENTS_REQUEST","GET_BURGER_INGREDIENTS_SUCCESS","GET_BURGER_INGREDIENTS_FAILED","SET_INGREDIENT_DETAILS","RESET_INGREDIENT_DETAILS","GET_ORDER_DETAILS_UNAUTH_START","GET_ORDER_DETAILS_REQUEST","GET_ORDER_DETAILS_SUCCESS","GET_ORDER_DETAILS_FAILED","RESET_ORDER_DETAILS","REQUEST_PASSWORD_RESET_REQUEST","REQUEST_PASSWORD_RESET_SUCCESS","REQUEST_PASSWORD_RESET_FAILED","RESET_REQUEST_PASSWORD_RESET","SET_PASSWORD_REQUEST","SET_PASSWORD_SUCCESS","SET_PASSWORD_FAILED","RESET_SET_PASSWORD","CREATE_USER_REQUEST","CREATE_USER_SUCCESS","CREATE_USER_FAILED","RESET_CREATE_USER","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","RESET_LOGIN_USER","GET_TOKEN_REQUEST","GET_TOKEN_SUCCESS","GET_TOKEN_FAILED","RESET_GET_TOKEN","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","RESET_GET_USER","EXIT_USER_REQUEST","EXIT_USER_SUCCESS","EXIT_USER_FAILED","PATCH_USER_REQUEST","PATCH_USER_SUCCESS","PATCH_USER_FAILED","RESET_PATCH_USER","initialState","burgerIngredients","burgerIngredientsRequest","burgerIngredientsFailed","constructorIngredients","ingredientDetails","modalOpened","orderDetails","orderDetailsUnauthStart","orderDetailsRequest","orderDetailsFailed","message","requestPasswordResetRequest","requestPasswordResetSuccess","requestPasswordResetFailed","setPasswordRequest","setPasswordSuccess","setPasswordFailed","user","createUserRequest","createUserSuccess","createUserFailed","loginUserRequest","loginUserSuccess","loginUserFailed","accessToken","exitUserRequest","exitUserSuccess","exitUserFailed","patchUserRequest","patchUserSuccess","patchUserFailed","rootReducer","combineReducers","state","action","type","burgerConstructor","constructorIngredient","filter","x","slice","ingredientIndex","ingredientIndexTo","ingredientIndexFrom","getTokenRequest","getTokenSuccess","getTokenFailed","getUserRequest","getUserFailed","getUserSuccess","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","AppHeader","className","appHeader","header","header__menu","header__links","header__link","to","header__links_right","header__link_type_login","useSelector","selectorHook","useDispatch","dispatchHook","Ingredient","item","location","useLocation","history","useHistory","useDrag","dragRef","count","_id","length","ingredientStyles","ref","onClick","push","background","src","image","alt","name","price","IngredientsList","forwardRef","props","data","title","ingredientsListStyles","ingredients","map","PATHS","path","getResponse","res","ok","json","then","err","Promise","reject","Error","status","statusText","getBurgerIngredientsFailedAction","getBurgerIngredientsThunk","dispatch","fetch","headers","success","catch","BurgerIngredients","useState","current","setCurrent","bunsRef","createRef","sauceRef","mainRef","useEffect","ingredientsStyles","style","display","value","active","scrollIntoView","behavior","onScroll","e","containerY","target","getBoundingClientRect","y","sauceY","mainY","getToken","token","method","body","JSON","stringify","requestPasswordResetActionFailed","setPasswordActionFailed","createUserActionFailed","loginUserActionFailed","getTokenActionSuccess","getUserActionFailed","exitUserActionFailed","patchUserActionFailed","requestPasswordResetThunk","email","requestPasswordResetAction","requestPasswordReset","setPasswordThunk","password","setPasswordAction","setPassword","createUserThunk","createUserAction","createUser","localStorage","setItem","refreshToken","loginUserThunk","loginUserAction","loginUser","getUserThunk","getUserAction","getUser","exitUserThunk","exitUserAction","removeItem","patchUserThunk","setUser","getOrderDetailsActionFailed","resetOrderDetailsAction","getOrderDetailsThunk","getOrderDetailsAction","setOrder","order","FillingConstructorElement","index","useDrop","accept","drop","indexFrom","indexTo","collect","monitor","isHover","isOver","dropTarget","handleClose","deleteConstructorIngredient","fillingConstructorElementStyles","el","text","thumbnail","image_mobile","BurgerConstructorItems","bun","fillings","ingredient","uniqueId","uuidv4","burgerConstructorItemsStyles","isLocked","useAuth","getItem","BurgerConstructor","isBun","find","totalPrice","reduce","previousItem","currentItem","orderIngredientsData","concat","burgerConstructorStyles","size","OrderDetails","orderDetailsStyles","number","doneImagePath","ModalOverlay","children","onClose","modalOverlayStyles","evt","currentTarget","modalRoot","document","getElementById","Modal","closeByEscape","key","addEventListener","removeEventListener","createPortal","modalStyles","Home","appStyles","main","DndProvider","backend","HTML5Backend","AuthForm","onSubmit","buttonText","bottomText","authFormStyles","Login","setEmail","from","preventDefault","loginFormStyles","placeholder","onChange","error","errorText","Register","setName","registerFormStyles","ForgotPassword","forgotPasswordFormStyles","ResetPassword","setToken","resetPasswordFormStyles","ProfileMenu","profileMenuStyles","exact","activeClassName","Profile","nameValue","setNameValue","emailValue","setEmailValue","passwordValue","setPasswordValue","currenNameValue","setCurrentNameValue","currentEmailValue","setCurrentEmailValue","currentPasswordValue","setCurrentPasswordValue","nameDisabled","setNameDisabled","emailDisabled","setEmailDisabled","passwordDisabled","setPasswordDisabled","buttonsVisible","setButtonsVisible","profileFormStyles","icon","onIconClick","disabled","ProtectedRoute","rest","render","pathname","ProfileOrders","profileOrdersFormStyles","NutritionValue","nutritionValueStyles","IngredientDetails","ingredientId","useParams","ingredientDetailsStyles","image_large","calories","proteins","fat","carbohydrates","ModalSwitch","openedFromList","component","goBack","App","app","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6ca8a3a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"home_main__3ygrW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-overlay\":\"modal-overlay_modal-overlay__4byzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile-orders_main__3CNRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nutrition-value\":\"nutrition-value_nutrition-value__3zW1L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iHLW\",\"header__menu\":\"app-header_header__menu__3M2cl\",\"header__links\":\"app-header_header__links__2h6Qr\",\"header__links_right\":\"app-header_header__links_right__2tPXC\",\"header__link\":\"app-header_header__link__Qgbfo\",\"header__link_type_login\":\"app-header_header__link_type_login__3KjJf\"};","export const ADD_CONSTRUCTOR_INGREDIENT: 'ADD_CONSTRUCTOR_INGREDIENT' = 'ADD_CONSTRUCTOR_INGREDIENT';\nexport const DELETE_CONSTRUCTOR_INGREDIENT: 'DELETE_CONSTRUCTOR_INGREDIENT' = 'DELETE_CONSTRUCTOR_INGREDIENT';\nexport const SORT_CONSTRUCTOR_INGREDIENT: 'SORT_CONSTRUCTOR_INGREDIENT' = 'SORT_CONSTRUCTOR_INGREDIENT';\nexport const RESET_CONSTRUCTOR_INGREDIENTS: 'RESET_CONSTRUCTOR_INGREDIENTS' = 'RESET_CONSTRUCTOR_INGREDIENTS';\n\nexport const GET_BURGER_INGREDIENTS_REQUEST: 'GET_API_INGREDIENTS_REQUEST' = 'GET_API_INGREDIENTS_REQUEST';\nexport const GET_BURGER_INGREDIENTS_SUCCESS: 'GET_API_INGREDIENTS_SUCCESS' = 'GET_API_INGREDIENTS_SUCCESS';\nexport const GET_BURGER_INGREDIENTS_FAILED: 'GET_API_INGREDIENTS_FAILED' = 'GET_API_INGREDIENTS_FAILED';\n\nexport const SET_INGREDIENT_DETAILS: 'SET_INGREDIENT_DETAILS' = 'SET_INGREDIENT_DETAILS';\nexport const RESET_INGREDIENT_DETAILS: 'RESET_INGREDIENT_DETAILS' = 'RESET_INGREDIENT_DETAILS';\n\nexport const GET_ORDER_DETAILS_UNAUTH_START: 'GET_ORDER_DETAILS_UNAUTH_START' = 'GET_ORDER_DETAILS_UNAUTH_START';\nexport const GET_ORDER_DETAILS_REQUEST: 'GET_ORDER_DETAILS_REQUEST' = 'GET_ORDER_DETAILS_REQUEST';\nexport const GET_ORDER_DETAILS_SUCCESS: 'GET_ORDER_DETAILS_SUCCESS' = 'GET_ORDER_DETAILS_SUCCESS';\nexport const GET_ORDER_DETAILS_FAILED: 'GET_ORDER_DETAILS_FAILED' = 'GET_ORDER_DETAILS_FAILED';\nexport const RESET_ORDER_DETAILS: 'RESET_ORDER_DETAILS' = 'RESET_ORDER_DETAILS';\n\nexport const REQUEST_PASSWORD_RESET_REQUEST: 'REQUEST_PASSWORD_RESET_REQUEST' = 'REQUEST_PASSWORD_RESET_REQUEST';\nexport const REQUEST_PASSWORD_RESET_SUCCESS: 'REQUEST_PASSWORD_RESET_SUCCESS' = 'REQUEST_PASSWORD_RESET_SUCCESS';\nexport const REQUEST_PASSWORD_RESET_FAILED: 'REQUEST_PASSWORD_RESET_FAILED' = 'REQUEST_PASSWORD_RESET_FAILED';\nexport const RESET_REQUEST_PASSWORD_RESET: 'RESET_REQUEST_PASSWORD_RESET' = 'RESET_REQUEST_PASSWORD_RESET';\n\nexport const SET_PASSWORD_REQUEST: 'SET_PASSWORD_REQUEST' = 'SET_PASSWORD_REQUEST';\nexport const SET_PASSWORD_SUCCESS: 'SET_PASSWORD_SUCCESS' = 'SET_PASSWORD_SUCCESS';\nexport const SET_PASSWORD_FAILED: 'SET_PASSWORD_FAILED' = 'SET_PASSWORD_FAILED';\nexport const RESET_SET_PASSWORD: 'RESET_SET_PASSWORD' = 'RESET_SET_PASSWORD';\n\nexport const CREATE_USER_REQUEST: 'CREATE_USER_REQUEST' = 'CREATE_USER_REQUEST';\nexport const CREATE_USER_SUCCESS: 'CREATE_USER_SUCCESS' = 'CREATE_USER_SUCCESS';\nexport const CREATE_USER_FAILED: 'CREATE_USER_FAILED' = 'CREATE_USER_FAILED';\nexport const RESET_CREATE_USER: 'RESET_CREATE_USER' = 'RESET_CREATE_USER';\n\nexport const LOGIN_USER_REQUEST: 'LOGIN_USER_REQUEST' = 'LOGIN_USER_REQUEST';\nexport const LOGIN_USER_SUCCESS: 'LOGIN_USER_SUCCESS' = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED: 'LOGIN_USER_FAILED' = 'LOGIN_USER_FAILED';\nexport const RESET_LOGIN_USER: 'RESET_LOGIN_USER' = 'RESET_LOGIN_USER';\n\nexport const GET_TOKEN_REQUEST: 'GET_TOKEN_REQUEST' = 'GET_TOKEN_REQUEST';\nexport const GET_TOKEN_SUCCESS: 'GET_TOKEN_SUCCESS' = 'GET_TOKEN_SUCCESS';\nexport const GET_TOKEN_FAILED: 'GET_TOKEN_FAILED' = 'GET_TOKEN_FAILED';\nexport const RESET_GET_TOKEN: 'RESET_GET_TOKEN' = 'RESET_GET_TOKEN';\n\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\nexport const RESET_GET_USER: 'RESET_GET_USER' = 'RESET_GET_USER';\n\nexport const EXIT_USER_REQUEST: 'EXIT_USER_REQUEST' = 'EXIT_USER_REQUEST';\nexport const EXIT_USER_SUCCESS: 'EXIT_USER_SUCCESS' = 'EXIT_USER_SUCCESS';\nexport const EXIT_USER_FAILED: 'EXIT_USER_FAILED' = 'EXIT_USER_FAILED';\n\nexport const PATCH_USER_REQUEST: 'PATCH_USER_REQUEST' = 'PATCH_USER_REQUEST';\nexport const PATCH_USER_SUCCESS: 'PATCH_USER_SUCCESS' = 'PATCH_USER_SUCCESS';\nexport const PATCH_USER_FAILED: 'PATCH_USER_FAILED' = 'PATCH_USER_FAILED';\nexport const RESET_PATCH_USER: 'RESET_PATCH_USER' = 'RESET_PATCH_USER';","import { TIngredientType } from '../types/data';\n\nimport {\n  GET_BURGER_INGREDIENTS_REQUEST,\n  GET_BURGER_INGREDIENTS_SUCCESS,\n  GET_BURGER_INGREDIENTS_FAILED,\n} from '../constants';\n\nimport { TBurgerIngredientsActions } from 'services/actions/burger-ingredients';\n\nexport type TBurgerIngredientsState = {\n  burgerIngredients: ReadonlyArray<TIngredientType>;\n  burgerIngredientsRequest: boolean;\n  burgerIngredientsFailed: boolean;\n};\n\nconst initialState = {\n  burgerIngredients: [],\n  burgerIngredientsRequest: false,\n  burgerIngredientsFailed: false,\n};\n\nexport const burgerIngredientsReducer = (\n  state: TBurgerIngredientsState = initialState, \n  action: TBurgerIngredientsActions\n  ): TBurgerIngredientsState => {\n  switch (action.type) {\n    case GET_BURGER_INGREDIENTS_REQUEST: {\n      return {\n        ...state,\n        burgerIngredientsRequest: true,\n      };\n    }\n    case GET_BURGER_INGREDIENTS_SUCCESS: {\n      return {\n        ...state,\n        burgerIngredientsFailed: false,\n        burgerIngredients: action.burgerIngredients,\n        burgerIngredientsRequest: false,\n      };\n    }\n    case GET_BURGER_INGREDIENTS_FAILED: {\n      return {\n        ...state,\n        burgerIngredientsFailed: true,\n        burgerIngredientsRequest: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TIngredientType } from '../types/data';\n\nimport {\n  ADD_CONSTRUCTOR_INGREDIENT,\n  DELETE_CONSTRUCTOR_INGREDIENT,\n  SORT_CONSTRUCTOR_INGREDIENT,\n  RESET_CONSTRUCTOR_INGREDIENTS,\n} from '../constants';\n\nimport type { TConstructorIngredientActions } from '../actions/burger-constructor';\n\nexport type TBurgerConstructorState = {\n  constructorIngredients: Array<TIngredientType>;\n};\n\nconst initialState = {\n  constructorIngredients: [],\n};\n\nexport const burgerConstructorReducer = (\n  state: TBurgerConstructorState = initialState, \n  action: TConstructorIngredientActions\n  ): TBurgerConstructorState => {\n  switch (action.type) {\n    case ADD_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients: action.constructorIngredient.type === 'bun'\n          ? [...state.constructorIngredients.filter( (x: {type: string}) => x.type !== 'bun'), action.constructorIngredient]\n          : [...state.constructorIngredients, action.constructorIngredient],\n      };\n    }\n    case DELETE_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients: [...state.constructorIngredients.slice(0, action.ingredientIndex), ...state.constructorIngredients.slice(action.ingredientIndex + 1)],\n      }\n    }\n    case SORT_CONSTRUCTOR_INGREDIENT: {\n      return {\n        ...state,\n        constructorIngredients:\n        action.ingredientIndexTo > action.ingredientIndexFrom\n          ? [...state.constructorIngredients.slice(0, action.ingredientIndexFrom), ...state.constructorIngredients.slice(action.ingredientIndexFrom + 1, action.ingredientIndexTo + 1), state.constructorIngredients[action.ingredientIndexFrom], ...state.constructorIngredients.slice(action.ingredientIndexTo + 1)]\n          : [...state.constructorIngredients.slice(0, action.ingredientIndexTo), state.constructorIngredients[action.ingredientIndexFrom], ...state.constructorIngredients.slice(action.ingredientIndexTo, action.ingredientIndexFrom), ...state.constructorIngredients.slice(action.ingredientIndexFrom + 1)]\n      }\n    }\n    case RESET_CONSTRUCTOR_INGREDIENTS: {\n      return {\n        ...state,\n        constructorIngredients: [],\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TIngredientType } from '../types/data';\n\nimport {\n  SET_INGREDIENT_DETAILS,\n  RESET_INGREDIENT_DETAILS,\n} from '../constants';\n\nimport { TIngredintsDetailsActions } from 'services/actions/ingredient-details';\n\nexport type TIngredientDetailsState = {\n  ingredientDetails: TIngredientType | null;\n  modalOpened: boolean;\n};\n\nconst initialState = {\n  ingredientDetails: null,\n  modalOpened: false,\n};\n\nexport const ingredientDetailsReducer = (\n  state: TIngredientDetailsState = initialState, \n  action: TIngredintsDetailsActions\n  ): TIngredientDetailsState => {\n  switch (action.type) {\n    case SET_INGREDIENT_DETAILS: {\n      return {\n        ...state,\n        ingredientDetails: action.ingredientDetails,\n      };\n    }\n    case RESET_INGREDIENT_DETAILS: {\n      return {\n        ...state,\n        ingredientDetails: null,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TOrderDetailsType } from '../types/data';\n\nimport {\n  GET_ORDER_DETAILS_UNAUTH_START,\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  RESET_ORDER_DETAILS,\n} from '../constants';\n\nimport { TOrderDetailsActions } from 'services/actions/order-details';\n\nexport type TOrderDetailsState = {\n  orderDetails: TOrderDetailsType | null;\n  orderDetailsUnauthStart: boolean;\n  orderDetailsRequest: boolean;\n  orderDetailsFailed: boolean;\n};\n\nconst initialState = {\n  orderDetails: null,\n  orderDetailsUnauthStart: false,\n  orderDetailsRequest: false,\n  orderDetailsFailed: false,\n};\n\nexport const orderDetailsReducer = (state: TOrderDetailsState = initialState, \n  action: TOrderDetailsActions\n  ) => {\n  switch (action.type) {\n    case GET_ORDER_DETAILS_UNAUTH_START: {\n      return {\n        ...state,\n        orderDetailsUnauthStart: true,\n      };\n    }\n    case GET_ORDER_DETAILS_REQUEST: {\n      return {\n        ...state,\n        orderDetailsRequest: true,\n        orderDetailsUnauthStart: false,\n      };\n    }\n    case GET_ORDER_DETAILS_SUCCESS: {\n      return {\n        ...state,\n        orderDetailsFailed: false,\n        orderDetails: action.orderDetails,\n        orderDetailsRequest: false,\n        orderDetailsUnauthStart: false,\n      };\n    }\n    case GET_ORDER_DETAILS_FAILED: {\n      return {\n        ...state,\n        orderDetailsFailed: true,\n        orderDetailsRequest: false,\n        orderDetailsUnauthStart: false,\n      };\n    }\n    case RESET_ORDER_DETAILS: {\n      return {\n        ...state,\n        orderDetails: null,\n        orderDetailsFailed: false,\n        orderDetailsUnauthStart: false,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { TUserInfoType } from '../types/data';\n\nimport {\n  REQUEST_PASSWORD_RESET_REQUEST,\n  REQUEST_PASSWORD_RESET_SUCCESS,\n  REQUEST_PASSWORD_RESET_FAILED,\n  RESET_REQUEST_PASSWORD_RESET,\n  SET_PASSWORD_REQUEST,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAILED,\n  RESET_SET_PASSWORD,\n  CREATE_USER_REQUEST,\n  CREATE_USER_SUCCESS,\n  CREATE_USER_FAILED,\n  RESET_CREATE_USER,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILED,\n  RESET_LOGIN_USER,\n  GET_TOKEN_REQUEST,\n  GET_TOKEN_SUCCESS,\n  GET_TOKEN_FAILED,\n  RESET_GET_TOKEN,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  RESET_GET_USER,\n  EXIT_USER_REQUEST,\n  EXIT_USER_SUCCESS,\n  EXIT_USER_FAILED,\n  PATCH_USER_REQUEST,\n  PATCH_USER_SUCCESS,\n  PATCH_USER_FAILED,\n  RESET_PATCH_USER,\n} from '../constants';\n\nimport { TUserActions } from 'services/actions/user';\n\nexport type TUserState = {\n  message: string | null;\n  requestPasswordResetRequest: boolean;\n  requestPasswordResetSuccess: boolean;\n  requestPasswordResetFailed: boolean;\n  setPasswordRequest: boolean;\n  setPasswordSuccess: boolean;\n  setPasswordFailed: boolean;\n  user: TUserInfoType | null;\n  createUserRequest: boolean;\n  createUserSuccess: boolean;\n  createUserFailed: boolean;\n  loginUserRequest: boolean;\n  loginUserSuccess: boolean;\n  loginUserFailed: boolean;\n  accessToken: string | null;\n  exitUserRequest: boolean;\n  exitUserSuccess: boolean;\n  exitUserFailed: boolean;\n  patchUserRequest: boolean;\n  patchUserSuccess: boolean;\n  patchUserFailed: boolean;\n};\n\nconst initialState = {\n  message: null,\n  requestPasswordResetRequest: false,\n  requestPasswordResetSuccess: false,\n  requestPasswordResetFailed: false,\n  setPasswordRequest: false,\n  setPasswordSuccess: false,\n  setPasswordFailed: false,\n  user: null,\n  createUserRequest: false,\n  createUserSuccess: false,\n  createUserFailed: false,\n  loginUserRequest: false,\n  loginUserSuccess: false,\n  loginUserFailed: false,\n  accessToken: null,\n  exitUserRequest: false,\n  exitUserSuccess: false,\n  exitUserFailed: false,\n  patchUserRequest: false,\n  patchUserSuccess: false,\n  patchUserFailed: false,\n};\n\nexport const userReducer = (state: TUserState = initialState, \n  action: TUserActions\n  ) => {\n  switch (action.type) {\n    case REQUEST_PASSWORD_RESET_REQUEST: {\n      return {\n        ...state,\n        requestPasswordResetRequest: true,\n      };\n    }\n    case REQUEST_PASSWORD_RESET_SUCCESS: {\n      return {\n        ...state,\n        requestPasswordResetFailed: false,\n        requestPasswordResetSuccess: true,\n        message: action.message,\n        requestPasswordResetRequest: false,\n      };\n    }\n    case REQUEST_PASSWORD_RESET_FAILED: {\n      return {\n        ...state,\n        requestPasswordResetFailed: true,\n        requestPasswordResetRequest: false,\n        requestPasswordResetSuccess: false,\n      };\n    }\n    case RESET_REQUEST_PASSWORD_RESET: {\n      return {\n        ...state,\n        requestPasswordResetFailed: false,\n        requestPasswordResetRequest: false,\n        requestPasswordResetSuccess: false,\n      };\n    }\n    case SET_PASSWORD_REQUEST: {\n      return {\n        ...state,\n        setPasswordRequest: true,\n      };\n    }\n    case SET_PASSWORD_SUCCESS: {\n      return {\n        ...state,\n        setPasswordFailed: false,\n        setPasswordSuccess: true,\n        message: action.message,\n        setPasswordRequest: false,\n      };\n    }\n    case SET_PASSWORD_FAILED: {\n      return {\n        ...state,\n        setPasswordFailed: true,\n        setPasswordRequest: false,\n        setPasswordSuccess: false,\n      };\n    }\n    case RESET_SET_PASSWORD: {\n      return {\n        ...state,\n        setPasswordFailed: false,\n        setPasswordRequest: false,\n        setPasswordSuccess: false,\n      };\n    }\n    case CREATE_USER_REQUEST: {\n      return {\n        ...state,\n        createUserRequest: true,\n        accessToken: null,\n      };\n    }\n    case CREATE_USER_SUCCESS: {\n      return {\n        ...state,\n        createUserRequest: false,\n        createUserSuccess: true,\n        user: action.user,\n        createUserFailed: false,\n        accessToken: action.accessToken,\n      };\n    }\n    case CREATE_USER_FAILED: {\n      return {\n        ...state,\n        createUserFailed: true,\n        createUserRequest: false,\n        createUserSuccess: false,\n      };\n    }\n    case RESET_CREATE_USER: {\n      return {\n        ...state,\n        createUserFailed: false,\n        createUserRequest: false,\n        createUserSuccess: false,\n      };\n    }\n    case LOGIN_USER_REQUEST: {\n      return {\n        ...state,\n        loginUserRequest: true,\n        accessToken: null,\n      };\n    }\n    case LOGIN_USER_SUCCESS: {\n      return {\n        ...state,\n        loginUserRequest: false,\n        loginUserSuccess: true,\n        user: action.user,\n        loginUserFailed: false,\n        accessToken: action.accessToken,\n      };\n    }\n    case LOGIN_USER_FAILED: {\n      return {\n        ...state,\n        loginUserFailed: true,\n        loginUserRequest: false,\n        loginUserSuccess: false,\n      };\n    }\n    case RESET_LOGIN_USER: {\n      return {\n        ...state,\n        loginUserFailed: false,\n        loginUserRequest: false,\n        loginUserSuccess: false,\n      };\n    }\n    case GET_TOKEN_REQUEST: {\n      return {\n        ...state,\n        getTokenRequest: true,\n        accessToken: null,\n      };\n    }\n    case GET_TOKEN_SUCCESS: {\n      return {\n        ...state,\n        getTokenRequest: false,\n        getTokenSuccess: true,\n        getTokenFailed: false,\n        accessToken: action.accessToken,\n      };\n    }\n    case GET_TOKEN_FAILED: {\n      return {\n        ...state,\n        getTokenFailed: true,\n        getTokenRequest: false,\n        getTokenSuccess: false,\n      };\n    }\n    case RESET_GET_TOKEN: {\n      return {\n        ...state,\n        getTokenFailed: false,\n        getTokenRequest: false,\n        getTokenSuccess: false,\n      };\n    }\n    case GET_USER_REQUEST: {\n      return {\n        ...state,\n        getUserRequest: true,\n        user: null,\n      };\n    }\n    case GET_USER_SUCCESS: {\n      return {\n        ...state,\n        getUserFailed: false,\n        getUserSuccess: true,\n        getUserRequest: false,\n        user: action.user,\n      };\n    }\n    case GET_USER_FAILED: {\n      return {\n        ...state,\n        getUserFailed: true,\n        getUserRequest: false,\n        getUserSuccess: false,\n      };\n    }\n    case RESET_GET_USER: {\n      return {\n        ...state,\n        getUserFailed: false,\n        getUserRequest: false,\n        getUserSuccess: false,\n      };\n    }\n    case EXIT_USER_REQUEST: {\n      return {\n        ...state,\n        exitUserRequest: true,\n      };\n    }\n    case EXIT_USER_SUCCESS: {\n      return {\n        ...state,\n        exitUserRequest: false,\n        exitUserSuccess: true,\n        user: null,\n        exitUserFailed: false,\n        accessToken: null,\n      };\n    }\n    case EXIT_USER_FAILED: {\n      return {\n        ...state,\n        exitUserFailed: true,\n        exitUserRequest: false,\n        exitUserSuccess: false,\n      };\n    }\n    case PATCH_USER_REQUEST: {\n      return {\n        ...state,\n        patchUserRequest: true,\n      };\n    }\n    case PATCH_USER_SUCCESS: {\n      return {\n        ...state,\n        patchUserFailed: false,\n        patchUserSuccess: true,\n        patchUserRequest: false,\n        user: action.user,\n      };\n    }\n    case PATCH_USER_FAILED: {\n      return {\n        ...state,\n        patchUserFailed: true,\n        patchUserRequest: false,\n        patchUserSuccess: false,\n      };\n    }\n    case RESET_PATCH_USER: {\n      return {\n        ...state,\n        patchUserFailed: false,\n        patchUserRequest: false,\n        patchUserSuccess: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}","import { combineReducers } from 'redux';\n\nimport { burgerIngredientsReducer } from './burger-ingredients';\nimport { burgerConstructorReducer } from './burger-constructor';\nimport { ingredientDetailsReducer } from './ingredient-details';\nimport { orderDetailsReducer } from './order-details';\nimport { userReducer } from './user';\n\nexport const rootReducer = combineReducers({\n  burgerIngredients: burgerIngredientsReducer,\n  burgerConstructor: burgerConstructorReducer,\n  ingredientDetails: ingredientDetailsReducer,\n  orderDetails: orderDetailsReducer,\n  user: userReducer,\n});","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers';\n\nimport { compose } from 'redux';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\n\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nexport const store = createStore(rootReducer, enhancer);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport appHeader from './app-header.module.css';\n\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\n\nconst AppHeader = () => {\n  return (\n    <header className={`${appHeader.header} text text_type_main-default pt-4 pb-4`}>\n      <nav className={appHeader.header__menu}>\n        <ul className={`${appHeader.header__links}`}>\n          <li className={`${appHeader.header__link} pl-5 pr-5 mr-2`}>\n            <Link to='/' className={`${appHeader.header__link}`}>\n              <BurgerIcon type=\"primary\" />\n              <p className={`pl-2`}>Конструктор</p>\n            </Link>\n          </li>\n          <li className={`${appHeader.header__link} text_color_inactive`}>\n            <ListIcon type=\"secondary\" />\n            <p className={`pl-2`}>Лента заказов</p>\n          </li>\n        </ul>\n        <Link to='/' className={`${appHeader.header__link}`}>\n          <Logo />\n        </Link>\n        <ul className={`${appHeader.header__links} ${appHeader.header__links_right} pr-5`}>\n          <li className={`${appHeader.header__link} ${appHeader.header__link_type_login} text_color_inactive`}>\n            <Link to='/profile' className={`${appHeader.header__link} ${appHeader.header__link_type_login} text_color_inactive`}>\n              <ProfileIcon type=\"secondary\" />\n              <p className={`pl-2`}>Личный кабинет</p>\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default AppHeader;","import {\n  TypedUseSelectorHook,\n  useDispatch as dispatchHook,\n  useSelector as selectorHook\n} from 'react-redux';\nimport { AppDispatch, AppThunk, RootState } from '../types';\n\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\n\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>(); \n","import React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { useSelector } from 'services/hooks/hooks';\n\nimport ingredientStyles from './ingredient.module.css';\n\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  item: TIngredientType,\n}\n\nconst Ingredient = ({ item }: IProps) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  const [, dragRef] = useDrag({\n    type: 'ingredient',\n    item: {item}\n  });\n\n  const {constructorIngredients} = useSelector((store) => store.burgerConstructor);\n\n  let count = constructorIngredients.filter(x => x._id === item._id).length;\n\n  if(item.type === 'bun') {\n    count *= 2;\n  }\n\n  return (\n    <div className={`${ingredientStyles['ingredient__item']}`} ref={dragRef} onClick={() => history.push('/ingredients/' + item._id, { background: location })} >\n      {count > 0 && <div className={`${ingredientStyles['ingredient__counter']} text_type_digits-default`}>{count}</div>}\n      <img className={`pb-1`} src={item.image} alt={item.name} />\n      <div className={`${ingredientStyles['ingredient__container']} pb-1`}>\n        <p className={`${ingredientStyles['ingredient__price']} text text_type_digits-default pr-2`}>{item.price}</p>\n        <CurrencyIcon type=\"primary\" />\n      </div>\n      <p className={`${ingredientStyles['ingredient__name']} text text_type_main-default`}>{item.name}</p>\n    </div>\n  )\n};\n\nexport default Ingredient;","import React, { forwardRef } from 'react';\n\nimport ingredientsListStyles from './ingredients-list.module.css';\nimport Ingredient from 'components/ingredient/ingredient';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  data: ReadonlyArray<TIngredientType>,\n  title: string,\n  type: string,\n}\n\nconst IngredientsList = forwardRef<HTMLDivElement, IProps>((props, ref) => {\n  const { data, title, type } = props as IProps;\n  return (\n    <div className={`${ingredientsListStyles.ingredients}`} ref={ref}>\n      <h3 className={`text text_type_main-medium pb-6`}>{title}</h3>\n      <div className={`${ingredientsListStyles['ingredients__items']} pl-4 pb-10`}>\n        {data.filter(item => item.type === type).map((item) => (\n          <Ingredient key={item._id} item={item} />\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport default IngredientsList;","const PATHS = {\n  baseUrl: { path: 'https://norma.nomoreparties.space/api' },\n}\n\nexport {\n  PATHS,\n}","import { PATHS } from \"./constants\";\n\nimport { TIngredientType } from 'services/types/data';\n\nconst getResponse = (res: Response) => (res.ok\n  ? res.json()\n  : res.json()\n      .then((err: Error) => Promise.reject(new Error(`${err.message} (${res.status} ${res.statusText})`))));\n\nconst getIngredients = () => fetch(`${ PATHS.baseUrl.path }/ingredients`, {\n  headers: {\n      'Content-Type': 'application/json',\n  },\n})\n  .then((res) => getResponse(res))\n\nconst setOrder = ( ingredients: ReadonlyArray<TIngredientType> ) => fetch(`${ PATHS.baseUrl.path }/orders`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    ingredients: ingredients,\n  })\n})\n.then((res) => getResponse(res))\n\nexport {\n  getIngredients,\n  setOrder,\n}","import { TIngredientType } from 'services/types/data';\nimport { getIngredients } from '../../utils/IngredientsApi'\nimport { AppDispatch, AppThunk } from '../types';\n\nimport {\n  GET_BURGER_INGREDIENTS_REQUEST,\n  GET_BURGER_INGREDIENTS_SUCCESS,\n  GET_BURGER_INGREDIENTS_FAILED,\n} from '../constants';\n\nexport interface IGetBurgerIngredientsRequest {\n  readonly type: typeof GET_BURGER_INGREDIENTS_REQUEST;\n}\n\nexport interface IGetBurgerIngredientsFailed {\n  readonly type: typeof GET_BURGER_INGREDIENTS_FAILED;\n}\n\nexport interface IGetBurgerIngredientsSuccess {\n  readonly type: typeof GET_BURGER_INGREDIENTS_SUCCESS;\n  readonly burgerIngredients : ReadonlyArray<TIngredientType>;\n}\n\nexport type TBurgerIngredientsActions =\n  IGetBurgerIngredientsRequest\n  | IGetBurgerIngredientsFailed\n  | IGetBurgerIngredientsSuccess;\n\n\nexport const getBurgerIngredientsAction = (): IGetBurgerIngredientsRequest => ({\n  type: GET_BURGER_INGREDIENTS_REQUEST,\n});\n\n\nexport const getBurgerIngredientsFailedAction = (): IGetBurgerIngredientsFailed => ({\n  type: GET_BURGER_INGREDIENTS_FAILED,\n});\n\n\nexport const getBurgerIngredientsSuccessAction = ( burgerIngredients: ReadonlyArray<TIngredientType> ): IGetBurgerIngredientsSuccess => ({\n  type: GET_BURGER_INGREDIENTS_SUCCESS,\n  burgerIngredients \n});\n\n\nexport const getBurgerIngredientsThunk: AppThunk = () => (dispatch: AppDispatch) => {\n  dispatch(getBurgerIngredientsAction());\n  getIngredients().then(res => {\n    if (res && res.success) {\n      dispatch(getBurgerIngredientsSuccessAction(res.data));\n    } else {\n      dispatch(getBurgerIngredientsFailedAction());\n    }\n  })\n  .catch(() =>  dispatch(getBurgerIngredientsFailedAction()));\n};","import React, { useState, createRef, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'services/hooks/hooks';\n\nimport ingredientsStyles from './burger-ingredients.module.css';\n\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport IngredientsList from '../ingredients-list/ingredients-list';\nimport { getBurgerIngredientsThunk } from '../../services/actions/burger-ingredients';\n\nconst BurgerIngredients = () => {\n  const dispatch = useDispatch();\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n  const [current, setCurrent] = useState('one');\n\n  const bunsRef = createRef<HTMLDivElement>();\n  const sauceRef = createRef<HTMLDivElement>();\n  const mainRef = createRef<HTMLDivElement>();\n\n  const onScroll = (e: any) =>\n  {\n    const delta = 10;\n    const containerY = e.target.getBoundingClientRect().y;\n    const sauceY = sauceRef.current!.getBoundingClientRect().y;\n    const mainY = mainRef.current!.getBoundingClientRect().y;\n\n    if (mainY <= containerY + delta){\n      setCurrent('three');\n    } else if (sauceY <= containerY + delta){\n      setCurrent('two');\n    } else {\n      setCurrent('one');\n    }\n  }\n\n  useEffect(() => {\n    dispatch(getBurgerIngredientsThunk())\n  }, [dispatch]);\n\n  return (\n    <section className={`${ingredientsStyles['burger-ingredients']} pt-10 pl-5 pb-10`}>\n      <h2 className={`text text_type_main-large pb-5`}>Соберите бургер</h2>\n      <div style={{ display: 'flex' }} className={`pb-10`}>\n        <Tab value=\"one\" active={current === 'one'} onClick={(value) => {\n          setCurrent(value);\n          bunsRef.current!.scrollIntoView({ behavior: 'smooth' });\n        }}>\n          Булки\n        </Tab>\n        <Tab value=\"two\" active={current === 'two'} onClick={(value) => {\n          setCurrent(value);\n          sauceRef.current!.scrollIntoView({ behavior: 'smooth' });\n        }}>\n          Соусы\n        </Tab>\n        <Tab value=\"three\" active={current === 'three'} onClick={(value) => {\n          setCurrent(value);\n          mainRef.current!.scrollIntoView({ behavior: 'smooth' });\n        }}>\n          Начинки\n        </Tab>\n      </div>\n      <div className={`${ingredientsStyles['burger-ingredients__ingredients-list-container']}`} onScroll={onScroll}>\n        <IngredientsList data={burgerIngredients} title=\"Булки\" type=\"bun\" ref={bunsRef} />\n        <IngredientsList data={burgerIngredients} title=\"Соусы\" type=\"sauce\" ref={sauceRef} />\n        <IngredientsList data={burgerIngredients} title=\"Начинки\" type=\"main\" ref={mainRef} />\n      </div>\n    </section>\n  );\n}\n\nexport default BurgerIngredients;","import { PATHS } from \"./constants\";\n\nconst getResponse = (res: Response) => (res.ok\n  ? res.json()\n  : res.json()\n      .then((err: Error) => Promise.reject(new Error(`${err.message} (${res.status} ${res.statusText})`))));\n\nconst requestPasswordReset = ( email: string ) => fetch(`${ PATHS.baseUrl.path }/password-reset`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    email,\n  })\n})\n.then((res) => getResponse(res))\n\nconst createUser = ( email: string, password: string, name: string ) => fetch(`${ PATHS.baseUrl.path }/auth/register`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    email,\n    password,\n    name,\n  })\n})\n.then((res) => getResponse(res))\n\nconst loginUser = ( email: string, password: string ) => fetch(`${ PATHS.baseUrl.path }/auth/login`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    email,\n    password,\n  })\n})\n.then((res) => getResponse(res))\n\nconst getToken = ( token: string ) => fetch(`${ PATHS.baseUrl.path }/auth/token`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    token,\n  })\n})\n.then((res) => getResponse(res))\n\nconst getUser = ( accessToken: string ) => fetch(`${ PATHS.baseUrl.path }/auth/user`, {\n  method: 'GET',\n  headers: {\n    \"Authorization\" : accessToken\n  },\n})\n.then((res) => getResponse(res))\n\nconst exitUser = ( token: string ) => fetch(`${ PATHS.baseUrl.path }/auth/logout`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    token,\n  })\n})\n.then((res) => getResponse(res))\n\nconst setPassword = ( password: string, token: string ) => fetch(`${ PATHS.baseUrl.path }/password-reset/reset`, {\n  method: 'POST',\n  headers: {\n      'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    password,\n    token,\n  })\n})\n.then((res) => getResponse(res))\n\nconst setUser = ( accessToken: string, name: string, email: string, password: string ) => fetch(`${ PATHS.baseUrl.path }/auth/user`, {\n  method: 'PATCH',\n  headers: {\n    \"Authorization\" : accessToken,\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    name,\n    email,\n    password,\n  })\n})\n.then((res) => getResponse(res))\n\nexport {\n  requestPasswordReset,\n  setPassword,\n  createUser,\n  loginUser,\n  getToken,\n  getUser,\n  exitUser,\n  setUser,\n}","import { createUser, requestPasswordReset, setPassword, loginUser, getToken, getUser, exitUser, setUser } from '../../utils/UserApi';\nimport { AppDispatch, AppThunk } from '../types';\n\nimport {\n  REQUEST_PASSWORD_RESET_REQUEST,\n  REQUEST_PASSWORD_RESET_SUCCESS,\n  REQUEST_PASSWORD_RESET_FAILED,\n  RESET_REQUEST_PASSWORD_RESET,\n  SET_PASSWORD_REQUEST,\n  SET_PASSWORD_SUCCESS,\n  SET_PASSWORD_FAILED,\n  RESET_SET_PASSWORD,\n  CREATE_USER_REQUEST,\n  CREATE_USER_SUCCESS,\n  CREATE_USER_FAILED,\n  RESET_CREATE_USER,\n  LOGIN_USER_REQUEST,\n  LOGIN_USER_SUCCESS,\n  LOGIN_USER_FAILED,\n  RESET_LOGIN_USER,\n  GET_TOKEN_REQUEST,\n  GET_TOKEN_SUCCESS,\n  GET_TOKEN_FAILED,\n  RESET_GET_TOKEN,\n  GET_USER_REQUEST,\n  GET_USER_SUCCESS,\n  GET_USER_FAILED,\n  RESET_GET_USER,\n  EXIT_USER_REQUEST,\n  EXIT_USER_SUCCESS,\n  EXIT_USER_FAILED,\n  PATCH_USER_REQUEST,\n  PATCH_USER_SUCCESS,\n  PATCH_USER_FAILED,\n  RESET_PATCH_USER,\n} from '../constants';\n\nimport { TUserInfoType } from '../types/data';\n\n// Типизация экшенов forgot-password\n\nexport interface IRequestPasswordResetRequest {\n  readonly type: typeof REQUEST_PASSWORD_RESET_REQUEST;\n  readonly email: string;\n}\n\nexport interface IRequestPasswordResetSuccess {\n  readonly type: typeof REQUEST_PASSWORD_RESET_SUCCESS;\n  readonly message: string;\n}\n\nexport interface IRequestPasswordResetFailed {\n  readonly type: typeof REQUEST_PASSWORD_RESET_FAILED;\n}\n\nexport interface IResetRequestPasswordReset {\n  readonly type: typeof RESET_REQUEST_PASSWORD_RESET;\n}\n\n// Типизация экшенов reset-password\n\nexport interface ISetPasswordRequest {\n  readonly type: typeof SET_PASSWORD_REQUEST;\n  readonly password: string;\n  readonly token: string;\n}\n\nexport interface ISetPasswordSuccess {\n  readonly type: typeof SET_PASSWORD_SUCCESS;\n  readonly message: string;\n}\n\nexport interface ISetPasswordFailed {\n  readonly type: typeof SET_PASSWORD_FAILED;\n}\n\nexport interface IResetSetPassword {\n  readonly type: typeof RESET_SET_PASSWORD;\n}\n\n// Типизация экшенов register\n\nexport interface ICreateUserRequest {\n  readonly type: typeof CREATE_USER_REQUEST;\n  readonly email: string;\n  readonly password: string;\n  readonly name: string;\n}\n\nexport interface ICreateUserSuccess {\n  readonly type: typeof CREATE_USER_SUCCESS;\n  readonly user: TUserInfoType;\n  readonly accessToken: string;\n}\n\nexport interface ICreateUserFailed {\n  readonly type: typeof CREATE_USER_FAILED;\n}\n\nexport interface IResetCreateUser {\n  readonly type: typeof RESET_CREATE_USER;\n}\n\n// Типизация экшенов login\n\nexport interface ILoginUserRequest {\n  readonly type: typeof LOGIN_USER_REQUEST;\n  readonly email: string;\n  readonly password: string;\n}\n\nexport interface ILoginUserSuccess {\n  readonly type: typeof LOGIN_USER_SUCCESS;\n  readonly user: TUserInfoType;\n  readonly accessToken: string;\n}\n\nexport interface ILoginUserFailed {\n  readonly type: typeof LOGIN_USER_FAILED;\n}\n\nexport interface IResetLoginUser {\n  readonly type: typeof RESET_LOGIN_USER;\n}\n\n// Типизация экшенов get token\n\nexport interface IGetTokenRequest {\n  readonly type: typeof GET_TOKEN_REQUEST;\n  readonly token: string;\n}\n\nexport interface IGetTokenSuccess {\n  readonly type: typeof GET_TOKEN_SUCCESS;\n  readonly accessToken: string;\n}\n\nexport interface IGetTokenFailed {\n  readonly type: typeof GET_TOKEN_FAILED;\n}\n\nexport interface IResetGetToken {\n  readonly type: typeof RESET_GET_TOKEN;\n}\n\n// Типизация экшенов get user\n\nexport interface IGetUserRequest {\n  readonly type: typeof GET_USER_REQUEST;\n  readonly refreshToken: string;\n  readonly accessToken: string;\n}\n\nexport interface IGetUserSuccess {\n  readonly type: typeof GET_USER_SUCCESS;\n  readonly user: TUserInfoType;\n}\n\nexport interface IGetUserFailed {\n  readonly type: typeof GET_USER_FAILED;\n}\n\nexport interface IResetGetUser {\n  readonly type: typeof RESET_GET_USER;\n}\n\n// Типизация экшенов exit\n\nexport interface IExitUserRequest {\n  readonly type: typeof EXIT_USER_REQUEST;\n  readonly refreshToken: string;\n}\n\nexport interface IExitUserSuccess {\n  readonly type: typeof EXIT_USER_SUCCESS;\n  readonly message: string;\n}\n\nexport interface IExitUserFailed {\n  readonly type: typeof EXIT_USER_FAILED;\n}\n\n// Типизация экшенов patch user\n\nexport interface IPatchUserRequest {\n  readonly type: typeof PATCH_USER_REQUEST;\n}\n\nexport interface IPatchUserSuccess {\n  readonly type: typeof PATCH_USER_SUCCESS;\n  readonly user: TUserInfoType;\n}\n\nexport interface IPatchUserFailed {\n  readonly type: typeof PATCH_USER_FAILED;\n}\n\nexport interface IResetPatchUser {\n  readonly type: typeof RESET_PATCH_USER;\n}\n\n// объединение в Union\n\nexport type TUserActions =\n  IRequestPasswordResetRequest\n  | IRequestPasswordResetSuccess\n  | IRequestPasswordResetFailed\n  | IResetRequestPasswordReset\n  | ISetPasswordRequest\n  | ISetPasswordSuccess\n  | ISetPasswordFailed\n  | IResetSetPassword\n  | ICreateUserRequest\n  | ICreateUserSuccess\n  | ICreateUserFailed\n  | IResetCreateUser\n  | ILoginUserRequest\n  | ILoginUserSuccess\n  | ILoginUserFailed\n  | IResetLoginUser\n  | IGetTokenRequest\n  | IGetTokenSuccess\n  | IGetTokenFailed\n  | IResetGetToken\n  | IGetUserRequest\n  | IGetUserSuccess\n  | IGetUserFailed\n  | IResetGetUser\n  | IExitUserRequest\n  | IExitUserSuccess\n  | IExitUserFailed\n  | IPatchUserRequest\n  | IPatchUserSuccess\n  | IPatchUserFailed\n  | IResetPatchUser;\n\n// Экшены forgot-password\n\nexport const requestPasswordResetAction = (email: string): IRequestPasswordResetRequest => ({\n  type: REQUEST_PASSWORD_RESET_REQUEST,\n  email,\n});\n\nexport const requestPasswordResetActionSuccess = (message: string): IRequestPasswordResetSuccess => ({\n  type: REQUEST_PASSWORD_RESET_SUCCESS,\n  message,\n});\n\nexport const requestPasswordResetActionFailed = (): IRequestPasswordResetFailed => ({\n  type: REQUEST_PASSWORD_RESET_FAILED,\n});\n\nexport const resetRequestPasswordResetAction = (): IResetRequestPasswordReset => ({\n  type: RESET_REQUEST_PASSWORD_RESET,\n});\n\n// Экшены reset-password\n\nexport const setPasswordAction = (password: string, token: string): ISetPasswordRequest => ({\n  type: SET_PASSWORD_REQUEST,\n  password,\n  token,\n});\n\nexport const setPasswordActionSuccess = (message: string): ISetPasswordSuccess => ({\n  type: SET_PASSWORD_SUCCESS,\n  message,\n});\n\nexport const setPasswordActionFailed = (): ISetPasswordFailed => ({\n  type: SET_PASSWORD_FAILED,\n});\n\nexport const resetSetPasswordAction = (): IResetSetPassword => ({\n  type: RESET_SET_PASSWORD,\n});\n\n// Экшены register\n\nexport const createUserAction = ( email: string, password: string, name: string): ICreateUserRequest => ({\n  type: CREATE_USER_REQUEST,\n  email,\n  password,\n  name,\n});\n\nexport const createUserActionSuccess = (user: TUserInfoType, accessToken: string): ICreateUserSuccess => ({\n  type: CREATE_USER_SUCCESS,\n  user,\n  accessToken,\n});\n\nexport const createUserActionFailed = (): ICreateUserFailed => ({\n  type: CREATE_USER_FAILED,\n});\n\nexport const resetCreateUserAction = (): IResetCreateUser => ({\n  type: RESET_CREATE_USER,\n});\n\n// Экшены login\n\nexport const loginUserAction = ( email: string, password: string ): ILoginUserRequest => ({\n  type: LOGIN_USER_REQUEST,\n  email,\n  password,\n});\n\nexport const loginUserActionSuccess = (user: TUserInfoType, accessToken: string): ILoginUserSuccess => ({\n  type: LOGIN_USER_SUCCESS,\n  user,\n  accessToken,\n});\n\nexport const loginUserActionFailed = (): ILoginUserFailed => ({\n  type: LOGIN_USER_FAILED,\n});\n\nexport const resetLoginUserAction = (): IResetLoginUser => ({\n  type: RESET_LOGIN_USER,\n});\n\n// Экшены get token\n\nexport const getTokenAction = ( token: string ): IGetTokenRequest => ({\n  type: GET_TOKEN_REQUEST,\n  token,\n});\n\nexport const getTokenActionSuccess = ( accessToken: string ): IGetTokenSuccess => ({\n  type: GET_TOKEN_SUCCESS,\n  accessToken,\n});\n\nexport const getTokenActionFailed = (): IGetTokenFailed => ({\n  type: GET_TOKEN_FAILED,\n});\n\nexport const resetGetTokenAction = (): IResetGetToken => ({\n  type: RESET_GET_TOKEN,\n});\n\n// Экшены get user\n\nexport const getUserAction = ( refreshToken: string, accessToken: string ): IGetUserRequest => ({\n  type: GET_USER_REQUEST,\n  refreshToken,\n  accessToken,\n});\n\nexport const getUserActionSuccess = ( user: TUserInfoType ): IGetUserSuccess => ({\n  type: GET_USER_SUCCESS,\n  user,\n});\n\nexport const getUserActionFailed = (): IGetUserFailed => ({\n  type: GET_USER_FAILED,\n});\n\nexport const resetGetUserAction = (): IResetGetUser => ({\n  type: RESET_GET_USER,\n});\n\n// Экшены exit\n\nexport const exitUserAction = ( refreshToken: string ): IExitUserRequest => ({\n  type: EXIT_USER_REQUEST,\n  refreshToken,\n});\n\nexport const exitUserActionSuccess = ( message: string ): IExitUserSuccess => ({\n  type: EXIT_USER_SUCCESS,\n  message,\n});\n\nexport const exitUserActionFailed = (): IExitUserFailed => ({\n  type: EXIT_USER_FAILED,\n});\n\n// Экшены patch user\n\nexport const patchUserAction = ( ): IPatchUserRequest => ({\n  type: PATCH_USER_REQUEST,\n});\n\nexport const patchUserActionSuccess = (user: TUserInfoType): IPatchUserSuccess => ({\n  type: PATCH_USER_SUCCESS,\n  user,\n});\n\nexport const patchUserActionFailed = (): IPatchUserFailed => ({\n  type: PATCH_USER_FAILED,\n});\n\nexport const resetPatchUserAction = (): IResetPatchUser => ({\n  type: RESET_PATCH_USER,\n});\n\n// Типизированный thunk forgot-password\n\nexport const requestPasswordResetThunk: AppThunk = ( email: string ) => (dispatch: AppDispatch) => {\n  dispatch(requestPasswordResetAction(email));\n  requestPasswordReset(email).then(res => {\n    if (res && res.success) {\n      dispatch(requestPasswordResetActionSuccess(res.message));\n    } else {\n      dispatch(requestPasswordResetActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(requestPasswordResetActionFailed()));\n};\n\n// Типизированный thunk reset-password\n\nexport const setPasswordThunk: AppThunk = ( password: string, token: string ) => (dispatch: AppDispatch) => {\n  dispatch(setPasswordAction(password, token));\n  setPassword(password, token).then(res => {\n    if (res && res.success) {\n      dispatch(setPasswordActionSuccess(res.message));\n    } else {\n      dispatch(setPasswordActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(setPasswordActionFailed()));\n};\n\n// Типизированный thunk register\n\nexport const createUserThunk: AppThunk = ( email: string, password: string, name: string ) => (dispatch: AppDispatch) => {\n  dispatch(createUserAction(email, password, name));\n  createUser(email, password, name).then(res => {\n    if (res && res.success) {\n      localStorage.setItem('refreshToken', res.refreshToken);\n      dispatch(createUserActionSuccess(res.user, res.accessToken));\n    } else {\n      dispatch(createUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(createUserActionFailed()));\n};\n\n// Типизированный thunk login\n\nexport const loginUserThunk: AppThunk = ( email: string, password: string ) => (dispatch: AppDispatch) => {\n  dispatch(loginUserAction(email, password));\n  loginUser(email, password).then(res => {\n    if (res && res.success) {\n      localStorage.setItem('refreshToken', res.refreshToken);\n      dispatch(loginUserActionSuccess(res.user, res.accessToken));\n    } else {\n      dispatch(loginUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(loginUserActionFailed()));\n};\n\n// Типизированный thunk get token\n\nexport const getTokenThunk: AppThunk = ( token: string ) => (dispatch: AppDispatch) => {\n  dispatch(getTokenAction(token));\n  getToken(token).then(res => {\n    if (res && res.success) {\n      localStorage.setItem('refreshToken', res.refreshToken);\n      dispatch(getTokenActionSuccess(res.accessToken));\n    } else {\n      dispatch(getTokenActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(getTokenActionFailed()));\n};\n\n// Типизированный thunk get user\n\nexport const getUserThunk: AppThunk = ( refreshToken: string, accessToken: string ) => (dispatch: AppDispatch | AppThunk) => {\n  dispatch(getUserAction(refreshToken, accessToken));\n\n  if (!refreshToken){\n    dispatch(getUserActionFailed());\n    return;\n  }\n\n  if (!accessToken){\n    getToken(refreshToken).then(res => {\n      if (res && res.success) {\n        localStorage.setItem('refreshToken', res.refreshToken);\n        accessToken = res.accessToken;\n        dispatch(getTokenActionSuccess(accessToken));\n        dispatch(getUserThunk(refreshToken, accessToken));\n      } else {\n        dispatch(getUserActionFailed());\n        return;\n      }\n    })\n    .catch(() =>  dispatch(getUserActionFailed()));\n    return;\n  }\n\n  getUser(accessToken).then(res => {\n    if (res && res.success) {\n      dispatch(getUserActionSuccess(res.user));\n    } else if (res && !res.success && res.message === 'jwt expired') {\n      dispatch(getUserThunk(refreshToken, null));\n    } else {\n      dispatch(getUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(getUserActionFailed()));\n};\n\n// Типизированный thunk exit\n\nexport const exitUserThunk: AppThunk = ( refreshToken: string ) => (dispatch: AppDispatch) => {\n  dispatch(exitUserAction(refreshToken));\n  exitUser(refreshToken).then(res => {\n    if (res && res.success) {\n      localStorage.removeItem('refreshToken');\n      dispatch(exitUserActionSuccess(res.message));\n    } else {\n      dispatch(exitUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(exitUserActionFailed()));\n};\n\n// Типизированный thunk patch user\n\nexport const patchUserThunk: AppThunk = ( refreshToken: string, accessToken: string, name: string, email: string, password: string ) => (dispatch: AppDispatch | AppThunk) => {\n  dispatch(patchUserAction());\n\n  if (!refreshToken){\n    dispatch(patchUserActionFailed());\n    return;\n  }\n\n  if (!accessToken){\n    getToken(refreshToken).then(res => {\n      if (res && res.success) {\n        localStorage.setItem('refreshToken', res.refreshToken);\n        accessToken = res.accessToken;\n        dispatch(getTokenActionSuccess(accessToken));\n        dispatch(patchUserThunk(refreshToken, accessToken, name, email, password));\n      } else {\n        dispatch(patchUserActionFailed());\n        return;\n      }\n    })\n    .catch(() =>  dispatch(patchUserActionFailed()));\n    return;\n  }\n\n  setUser(accessToken, name, email, password).then(res => {\n    if (res && res.success) {\n      dispatch(patchUserActionSuccess(res.user));\n    } else if (res && !res.success && res.message === 'jwt expired') {\n      dispatch(patchUserThunk(refreshToken, null));\n    } else {\n      dispatch(patchUserActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(patchUserActionFailed()));\n};","import { setOrder } from '../../utils/IngredientsApi';\nimport { AppDispatch, AppThunk } from '../types';\n\nimport {\n  GET_ORDER_DETAILS_UNAUTH_START,\n  GET_ORDER_DETAILS_REQUEST,\n  GET_ORDER_DETAILS_SUCCESS,\n  GET_ORDER_DETAILS_FAILED,\n  RESET_ORDER_DETAILS,\n} from '../constants';\n\nimport { TIngredientType, TOrderDetailsType } from '../types/data';\nimport { getToken } from 'utils/UserApi';\nimport { getTokenActionSuccess } from './user';\n\nexport interface IGetOrderDetailsUnauthStart {\n  readonly type: typeof GET_ORDER_DETAILS_UNAUTH_START;\n}\n\nexport interface IGetOrderDetailsRequest {\n  readonly type: typeof GET_ORDER_DETAILS_REQUEST;\n  readonly ingredients: ReadonlyArray<TIngredientType | undefined>;\n}\n\nexport interface IGetOrderDetailsSuccess {\n  readonly type: typeof GET_ORDER_DETAILS_SUCCESS;\n  readonly orderDetails: TOrderDetailsType;\n}\n\nexport interface IGetOrderDetailsFailed {\n  readonly type: typeof GET_ORDER_DETAILS_FAILED;\n}\n\nexport interface IResetOrderDetails {\n  readonly type: typeof RESET_ORDER_DETAILS;\n}\n\nexport type TOrderDetailsActions =\n  IGetOrderDetailsUnauthStart\n  | IGetOrderDetailsRequest\n  | IGetOrderDetailsSuccess\n  | IGetOrderDetailsFailed\n  | IResetOrderDetails;\n\nexport const getOrderDetailsUnauthStart = (): IGetOrderDetailsUnauthStart => ({\n  type: GET_ORDER_DETAILS_UNAUTH_START,\n});\n\nexport const getOrderDetailsAction = (ingredients: ReadonlyArray<TIngredientType | undefined>): IGetOrderDetailsRequest => ({\n  type: GET_ORDER_DETAILS_REQUEST,\n  ingredients,\n});\n\nexport const getOrderDetailsActionSuccess = (orderDetails: TOrderDetailsType): IGetOrderDetailsSuccess => ({\n  type: GET_ORDER_DETAILS_SUCCESS,\n  orderDetails,\n});\n\nexport const getOrderDetailsActionFailed = (): IGetOrderDetailsFailed => ({\n  type: GET_ORDER_DETAILS_FAILED,\n});\n\nexport const resetOrderDetailsAction = (): IResetOrderDetails => ({\n  type: RESET_ORDER_DETAILS,\n});\n\nexport const getOrderDetailsThunk: AppThunk = ( refreshToken: string, accessToken: string, ingredients: ReadonlyArray<TIngredientType> ) => (dispatch: AppDispatch | AppThunk) => {\n  dispatch(getOrderDetailsAction(ingredients));\n\n  if (!refreshToken){\n    dispatch(getOrderDetailsActionFailed());\n    return;\n  }\n\n  if (!accessToken){\n    getToken(refreshToken).then(res => {\n      if (res && res.success) {\n        localStorage.setItem('refreshToken', res.refreshToken);\n        accessToken = res.accessToken;\n        dispatch(getTokenActionSuccess(accessToken));\n        dispatch(getOrderDetailsThunk(refreshToken, accessToken, ingredients));\n      } else {\n        dispatch(getOrderDetailsActionFailed());\n        return;\n      }\n    })\n    .catch(() =>  dispatch(getOrderDetailsActionFailed()));\n    return;\n  }\n\n  setOrder(ingredients).then(res => {\n    if (res && res.success) {\n      dispatch(getOrderDetailsActionSuccess(res.order));\n    } else if (res && !res.success && res.message === 'jwt expired') {\n      dispatch(getOrderDetailsThunk(refreshToken, null, ingredients));\n    } else {\n      dispatch(getOrderDetailsActionFailed());\n    }\n  })\n  .catch(() =>  dispatch(getOrderDetailsActionFailed()));\n};","import React from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { useDispatch } from 'services/hooks/hooks';\n\nimport fillingConstructorElementStyles from './filling-constructor-element.module.css';\n\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { deleteConstructorIngredient, sortConstructorIngredient } from 'services/actions/burger-constructor';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  item: TIngredientType,\n}\n\ninterface IDropItem {\n  index: number,\n}\n\nconst FillingConstructorElement = ({ item }: IProps) => {\n  const dispatch = useDispatch();\n\n  const [, dragRef] = useDrag({\n    type: 'filling',\n    item: {index: item.index}\n  });\n\n  const [{ isHover }, dropTarget] = useDrop({\n    accept: 'filling',\n    drop({index}: IDropItem) {\n      dispatch(sortConstructorIngredient(index, item.index! ));\n    },\n    collect: monitor => ({\n      isHover: monitor.isOver(),\n    }),\n  });\n\n  const attachRef = (el: any) => {\n    dragRef(el);\n    dropTarget(el);\n  }\n\n  const handleClose = (index: number) => {\n    dispatch(deleteConstructorIngredient(index));\n  }\n\n  return (\n    <div className={`${fillingConstructorElementStyles['filling-constructor-element__container']} ${isHover && fillingConstructorElementStyles['filling-constructor-element__container-hovered']} pr-4`} ref={attachRef}>\n      <DragIcon type=\"primary\" />\n      <ConstructorElement\n        text={item.name}\n        price={item.price}\n        thumbnail={item.image_mobile}\n        handleClose={() => handleClose(item.index!)}\n      />\n    </div>\n  );\n}\n\nexport default FillingConstructorElement;","import { v4 as uuidv4 } from 'uuid';\n\nimport {\n  ADD_CONSTRUCTOR_INGREDIENT,\n  DELETE_CONSTRUCTOR_INGREDIENT,\n  SORT_CONSTRUCTOR_INGREDIENT,\n  RESET_CONSTRUCTOR_INGREDIENTS,\n} from '../constants';\n\nimport { TIngredientType } from '../types/data';\n\nexport interface IAddConstructorIngredient {\n  readonly type: typeof ADD_CONSTRUCTOR_INGREDIENT;\n  readonly constructorIngredient: TIngredientType;\n}\n\nexport interface IDeleteConstructorIngredient {\n  readonly type: typeof DELETE_CONSTRUCTOR_INGREDIENT;\n  readonly ingredientIndex: number;\n}\n\nexport interface ISortConstructorIngredient {\n  readonly type: typeof SORT_CONSTRUCTOR_INGREDIENT;\n  readonly ingredientIndexFrom: number;\n  readonly ingredientIndexTo: number;\n}\n\nexport interface IResetConstructorIngredients {\n  readonly type: typeof RESET_CONSTRUCTOR_INGREDIENTS;\n}\n\nexport type TConstructorIngredientActions =\n  | IAddConstructorIngredient\n  | IDeleteConstructorIngredient\n  | ISortConstructorIngredient\n  | IResetConstructorIngredients;\n\n\nexport const addConstructorIngredient = ( ingredient: TIngredientType ): IAddConstructorIngredient => ({\n  type: ADD_CONSTRUCTOR_INGREDIENT,\n  constructorIngredient: { ...ingredient, uniqueId: uuidv4() },\n});\n\nexport const deleteConstructorIngredient = ( index: number ): IDeleteConstructorIngredient => ({\n  type: DELETE_CONSTRUCTOR_INGREDIENT,\n  ingredientIndex: index,\n});\n\nexport const sortConstructorIngredient = ( indexFrom: number, indexTo: number ): ISortConstructorIngredient => ({\n  type: SORT_CONSTRUCTOR_INGREDIENT,\n  ingredientIndexFrom: indexFrom,\n  ingredientIndexTo: indexTo,\n});\n\nexport const resetConstructorIngredients = (): IResetConstructorIngredients => ({\n  type: RESET_CONSTRUCTOR_INGREDIENTS,\n});\n","import React from 'react';\nimport { useDrop } from 'react-dnd';\n\nimport { useDispatch } from 'services/hooks/hooks';\n\nimport burgerConstructorItemsStyles from './burger-constructor-items.module.css';\n\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { addConstructorIngredient } from 'services/actions/burger-constructor';\nimport FillingConstructorElement from 'components/filling-constructor-element/filling-constructor-element';\n\nimport { TIngredientType } from 'services/types/data';\n\ninterface IProps {\n  bun: TIngredientType,\n  fillings: ReadonlyArray<TIngredientType>,\n}\n\ninterface IDropItem {\n  item: TIngredientType,\n}\n\nconst BurgerConstructorItems = ({ bun, fillings } : IProps) => {\n  const dispatch = useDispatch();\n\n  const [, dropTarget] = useDrop({\n    accept: 'ingredient',\n    drop({item}:IDropItem) {\n      dispatch(addConstructorIngredient(item));\n    },\n  });\n\n  return (\n      <div className={`${burgerConstructorItemsStyles['burger-constructor__items-container']}`} ref={dropTarget}>\n        <div className={`${burgerConstructorItemsStyles['burger-constructor__item-container']} pr-4`}>\n          {bun\n            ? <ConstructorElement\n              type=\"top\"\n              isLocked={true}\n              text={`${bun.name} (верх)`}\n              price={bun.price}\n              thumbnail={bun.image_mobile}\n            />\n            : <div className='mt-20'></div>\n          }\n        </div>\n        <div className={`${burgerConstructorItemsStyles['burger-constructor__center-items-container']}`}>\n          { fillings?.map(( item ) => \n              <FillingConstructorElement key={item.uniqueId} item={item} />\n            )\n          }\n        </div>\n        <div className={`${burgerConstructorItemsStyles['burger-constructor__item-container']} pr-4`}>\n        {bun\n          ? <ConstructorElement\n            type=\"bottom\"\n            isLocked={true}\n            text={`${bun.name} (низ)`}\n            price={bun.price}\n            thumbnail={bun.image_mobile}\n          />\n          : <div className='mt-20'></div>\n          }\n        </div>\n      </div>\n  );\n}\n\nexport default BurgerConstructorItems;","const useAuth = () => {\n  return {\n    refreshToken: localStorage.getItem('refreshToken'),\n  }\n};\n\nexport default useAuth;","import React, { useEffect } from 'react';\n\nimport burgerConstructorStyles from './burger-constructor.module.css';\n\nimport { useSelector, useDispatch } from 'services/hooks/hooks';\n\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { getOrderDetailsUnauthStart, getOrderDetailsThunk, resetOrderDetailsAction } from 'services/actions/order-details';\nimport BurgerConstructorItems from 'components/burger-constructor-items/burger-constructor-items';\nimport { TIngredientType } from 'services/types/data';\nimport useAuth from 'services/auth';\nimport { Redirect } from 'react-router-dom';\n\nconst BurgerConstructor = () => {\n  const dispatch = useDispatch();\n  const { refreshToken } = useAuth();\n\n  const { accessToken } = useSelector((state) => state.user);\n  const { constructorIngredients } = useSelector((store) => store.burgerConstructor);\n  const { orderDetailsUnauthStart } = useSelector((store) => store.orderDetails);\n\n  const isBun = (item: TIngredientType) => item.type === 'bun';\n\n  const bun = constructorIngredients?.find(item => isBun(item));\n  const fillings = constructorIngredients?.map((item, index) => { return {...item, index: index}} ).filter(item => !isBun(item));\n\n  const reducer = (previousItem: number, currentItem: TIngredientType) => previousItem + currentItem.price;\n  const totalPrice = (bun?.price ?? 0) * 2 + (fillings?.reduce(reducer, 0) ?? 0);\n\n  const orderIngredientsData = [bun].concat(fillings).concat([bun]);\n\n  const createOrder = () => {\n    if (refreshToken){\n      dispatch(getOrderDetailsThunk(refreshToken, accessToken, orderIngredientsData));\n    }\n    else {\n      dispatch(getOrderDetailsUnauthStart());\n    }\n  }\n\n  useEffect(() => {\n    dispatch(resetOrderDetailsAction());\n  }, [orderDetailsUnauthStart])\n\n  if (!refreshToken && orderDetailsUnauthStart) {\n    return <Redirect to={'/login'} />\n  }\n\n  return (\n    <section className={`${burgerConstructorStyles['burger-constructor']} mt-25 pl-10 pb-10`}>\n      <BurgerConstructorItems bun={bun!} fillings={fillings} />\n      <div className={`${burgerConstructorStyles['burger-constructor__burger-price-container']} pt-10 pr-2`}>\n        <div className={`${burgerConstructorStyles['burger-constructor__burger-price-container']} pr-10`}>\n          <p className={`${burgerConstructorStyles['burger-constructor__burger-price']} text text_type_digits-medium`}>{totalPrice}</p>\n          <CurrencyIcon type=\"primary\" />\n        </div>\n        {bun && totalPrice > 0 && <div className={`pl-10`}><Button type=\"primary\" size=\"large\" onClick={createOrder} >\n          Оформить заказ\n        </Button></div>}\n      </div>\n    </section>\n  );\n}\n\nexport default BurgerConstructor;","export default __webpack_public_path__ + \"static/media/order-details__done.887b83be.gif\";","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nimport orderDetailsStyles from 'components/order-details/order-details.module.css';\n\nimport doneImagePath from 'images/order-details__done.gif'\nimport { resetConstructorIngredients } from 'services/actions/burger-constructor';\n\nconst OrderDetails = () => {\n  const dispatch = useDispatch();\n  const { orderDetails } = useSelector((state) => state.orderDetails);\n\n  useEffect(() => {\n    dispatch(resetConstructorIngredients());\n  }, [orderDetails]);\n\n  return (\n    <div className={`${orderDetailsStyles['order-details']} pb-30 pt-4`}>\n      <h3 className={`${orderDetailsStyles['order-details__title']} text text_type_digits-large pb-8`}>{ orderDetails?.number }</h3>\n      <p className={`text text_type_main-medium pb-15`}>идентификатор заказа</p>\n      <img className={`${orderDetailsStyles['order-details__done-image']}`} src={doneImagePath} alt=\"Выполняется\" />\n      <p className={`text text_type_main-default pt-15 pb-2`}>Ваш заказ начали готовить</p>\n      <p className={`text text_type_main-default text_color_inactive`}>Дождитесь готовности на орбитальной станции</p>\n    </div>\n  );\n}\n\nexport default OrderDetails;","import React from 'react';\n\nimport modalOverlayStyles from './modal-overlay.module.css';\n\ninterface IProps {\n  children: any,\n  onClose: () => void,\n}\n\nconst ModalOverlay = ({ children, onClose }: IProps) => {\n  return(\n    <section className={`${modalOverlayStyles['modal-overlay']}`} onClick={(evt) => {\n      if (evt.target !== evt.currentTarget)\n        return;\n      onClose();\n    }}>\n      { children }\n    </section>\n  );\n};\n\nexport default ModalOverlay;\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport modalStyles from 'components/modal/modal.module.css';\n\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport ModalOverlay from 'components/modal-overlay/modal-overlay';\n\nconst modalRoot = document.getElementById(\"modals\");\n\ninterface IProps {\n  children: any,\n  title?: string,\n  onClose: () => void,\n}\n\nconst Modal = ({ children, title, onClose }: IProps) => {\n  const closeByEscape = (evt: KeyboardEvent) => {\n    if (evt.key === 'Escape') {\n      onClose();\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('keydown', closeByEscape);\n    return () => {\n      document.removeEventListener('keydown', closeByEscape);\n    }\n  }, []);\n\n  return createPortal(\n    <ModalOverlay onClose={onClose} >\n      <div className={`${modalStyles['modal']} pt-10 pr-10 pl-10`} >\n        <div className={`${modalStyles['modal__header-container']}`}>\n          <h2 className={`${modalStyles['modal__title']} text text_type_main-large`}>{title}</h2>\n          <button className={`${modalStyles['modal__close-icon']}`} type=\"button\" onClick={onClose}><CloseIcon type=\"primary\" /></button>\n        </div>\n        {children}\n      </div>\n    </ModalOverlay>,\n    modalRoot as Element\n  )\n};\n\nexport default Modal;","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\nimport appStyles from './home.module.css' ;\n\nimport BurgerIngredients from 'components/burger-ingredients/burger-ingredients';\nimport BurgerConstructor from 'components/burger-constructor/burger-constructor';\nimport OrderDetails from 'components/order-details/order-details';\nimport Modal from 'components/modal/modal';\n\nimport { useSelector, useDispatch } from 'services/hooks/hooks';\n\nimport { resetOrderDetailsAction } from 'services/actions/order-details';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n\n  const {orderDetails} = useSelector((state) => state.orderDetails);\n\n  const onOrderModalClose = () => {\n    dispatch(resetOrderDetailsAction());\n  }\n\n  return (\n    <main className={`${appStyles.main}`}>\n      <DndProvider backend={HTML5Backend}>\n        <BurgerIngredients />\n\n        <BurgerConstructor />\n\n        {orderDetails &&\n          <Modal onClose={onOrderModalClose} >\n            <OrderDetails />\n          </Modal> \n        }\n      </DndProvider>\n    </main>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nimport authFormStyles from './auth-form.module.css' ;\n\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\n\ninterface IProps {\n  name: string,\n  onSubmit: (event: React.FormEvent) => void,\n  title: string,\n  children: any,\n  buttonText: string,\n  bottomText: any,\n}\n\nconst AuthForm = ({name, onSubmit, title, children, buttonText, bottomText} : IProps) => {\n  return (\n    <main className={`${authFormStyles.main}`}>\n      <section className={`${authFormStyles['auth-form']}`}>\n        <form className={`${authFormStyles['auth-form__container']}`} name={name} onSubmit={onSubmit}>\n          <h2 className={`${authFormStyles['auth-form__title']} text text_type_main-medium`}>{title}</h2>\n          {children}\n          <Button type=\"primary\" size=\"medium\">\n            {buttonText ?? \"Отправить\"}\n          </Button>\n          {bottomText}\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default AuthForm;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\nimport loginFormStyles from './login.module.css' ;\n\nimport { Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport { loginUserThunk } from \"services/actions/user\";\nimport useAuth from \"services/auth\";\n\ninterface IProps {\n  location?: any,\n}\n\nconst Login = ({location} : IProps) => {\n  const dispatch = useDispatch();\n  const { accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  if (accessToken || refreshToken) {\n    return <Redirect to={ location?.state?.from || '/' } />\n  }\n\n  return (\n    <AuthForm title=\"Вход\" name=\"login\" buttonText={\"Войти\"} onSubmit={e => {e.preventDefault(); dispatch(loginUserThunk(email, password))}} children={\n        <div className={`${loginFormStyles['login-form-container']} pt-6 pb-6`}>\n            <Input\n              type={'email'}\n              placeholder={'E-mail'}\n              onChange={e => setEmail(e.target.value)}\n              value={email}\n              name={'email'}\n              error={false}\n              errorText={'Ошибка'}\n              size={'default'}\n            />\n            <PasswordInput \n              onChange={e => setPassword(e.target.value)} \n              value={password} \n              name={'password'} \n              size={'default'} \n            />\n        </div>\n      } \n      bottomText={\n        <div>\n          <p className={`${loginFormStyles['login-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Вы — новый пользователь? <Link to=\"register\" className={`${loginFormStyles['login-form__link']} text text_type_main-default text_color_inactive`}>Зарегистрироваться</Link></p>\n          <p className={`${loginFormStyles['login-form__bottom-text']} text text_type_main-default text_color_inactive pt-4`}>Забыли пароль? <Link to=\"forgot-password\" className={`${loginFormStyles['login-form__link']} text text_type_main-default text_color_inactive`}>Восстановить пароль</Link></p>\n        </div>\n      }\n    />\n  )\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nimport registerFormStyles from './register.module.css' ;\n\nimport { Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport { createUserThunk } from \"services/actions/user\";\nimport useAuth from \"services/auth\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const { createUserSuccess, accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  if (createUserSuccess){\n    return <Redirect to='/' />;\n  }\n\n  if (accessToken || refreshToken) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <AuthForm title=\"Регистрация\" name=\"register\" buttonText={\"Зарегистрироваться\"} onSubmit={e => {e.preventDefault(); dispatch(createUserThunk(email, password, name))}} children={\n        <div className={`${registerFormStyles['register-form-container']} pt-6 pb-6`}>\n            <Input\n              type={'text'}\n              placeholder={'Имя'}\n              onChange={e => setName(e.target.value)} \n              value={name}\n              name={'name'}\n              error={false}\n              errorText={'Ошибка'}\n              size={'default'}\n            />\n            <Input\n              type={'email'}\n              placeholder={'E-mail'}\n              onChange={e => setEmail(e.target.value)} \n              value={email}\n              name={'email'}\n              error={false}\n              errorText={'Ошибка'}\n              size={'default'}\n            />\n            <PasswordInput \n              onChange={e => setPassword(e.target.value)} \n              value={password} \n              name={'password'} \n              size={'default'} \n            />\n        </div>\n      } \n      bottomText={\n        <p className={`${registerFormStyles['register-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Уже зарегистрированы? <Link to=\"login\" className={`${registerFormStyles['register-form__link']} text text_type_main-default text_color_inactive`}>Войти</Link></p>\n      }\n    />\n  )\n}\n\nexport default Register;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport forgotPasswordFormStyles from './forgot-password.module.css' ;\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\nimport { requestPasswordResetThunk } from 'services/actions/user';\n\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport useAuth from \"services/auth\";\n\nconst ForgotPassword = () => {\n  const dispatch = useDispatch();\n  const { requestPasswordResetSuccess, accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [email, setEmail] = useState('');\n\n  if (requestPasswordResetSuccess){\n    return <Redirect to='/reset-password'/>;\n  }\n\n  if (accessToken || refreshToken) {\n    return <Redirect to='/' />\n  }\n\n  return (\n    <AuthForm title=\"Восстановление пароля\" name=\"forgot-password\" buttonText={\"Восстановить\"} onSubmit={e => {e.preventDefault(); dispatch(requestPasswordResetThunk(email))}} children={\n        <div className={`${forgotPasswordFormStyles['forgot-password-form-container']} pt-6 pb-6`}>\n          <Input\n            type={'email'}\n            placeholder={'Укажите e-mail'}\n            onChange={e => setEmail(e.target.value)} \n            value={email}\n            name={'email'}\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          /> \n        </div>\n      } \n      bottomText={\n        <div>\n          <p className={`${forgotPasswordFormStyles['forgot-password-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Вспомнили пароль? <Link to=\"register\" className={`${forgotPasswordFormStyles['forgot-password-form__link']} text text_type_main-default text_color_inactive`}>Войти</Link></p>\n        </div>\n      }\n    />\n  )\n}\n\nexport default ForgotPassword;","import React, { useState } from \"react\";\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\nimport resetPasswordFormStyles from './reset-password.module.css' ;\n\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport AuthForm from \"components/auth-form/auth-form\";\nimport { setPasswordThunk } from '../../services/actions/user';\nimport useAuth from \"services/auth\";\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const { setPasswordSuccess, requestPasswordResetSuccess, accessToken } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [password, setPassword] = useState('');\n  const [token, setToken] = useState('');\n\n  if (setPasswordSuccess){\n    return <Redirect to='/login' />;\n  }\n\n  if (!requestPasswordResetSuccess || accessToken || refreshToken) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <AuthForm title=\"Восстановление пароля\" name=\"reset-password\" buttonText={\"Сохранить\"} onSubmit={e => {e.preventDefault(); dispatch(setPasswordThunk(password, token))}} children={\n        <div className={`${resetPasswordFormStyles['reset-password-form-container']} pt-6 pb-6`}>\n          <Input\n            type={'password'}\n            placeholder={'Введите новый пароль'}\n            onChange={e => setPassword(e.target.value)} \n            value={password}\n            name={'password'}\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          /> \n          <Input\n            type={'text'}\n            placeholder={'Введите код из письма'}\n            onChange={e => setToken(e.target.value)} \n            value={token}\n            name={'token'}\n            error={false}\n            errorText={'Ошибка'}\n            size={'default'}\n          /> \n        </div>\n      } \n      bottomText={\n        <div>\n          <p className={`${resetPasswordFormStyles['reset-password-form__bottom-text']} text text_type_main-default text_color_inactive pt-20`}>Вспомнили пароль? <Link to=\"login\" className={`${resetPasswordFormStyles['reset-password-form__link']} text text_type_main-default text_color_inactive`}>Войти</Link></p>\n        </div>\n      }\n    />\n  )\n}\n\nexport default ResetPassword;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch } from \"services/hooks/hooks\";\nimport { exitUserThunk } from \"services/actions/user\";\nimport useAuth from 'services/auth';\n\nimport profileMenuStyles from './profile-menu.module.css';\n\nconst ProfileMenu = () => {\n  const dispatch = useDispatch();\n  const { refreshToken } = useAuth();\n\n  return (\n    <section className={`${profileMenuStyles['profile-menu']}`}>\n      <nav className={`${profileMenuStyles['profile-menu__navigation']}`}>\n        <NavLink exact to=\"/profile\" activeClassName={`${profileMenuStyles['profile-menu__link_active']}`} className={`${profileMenuStyles['profile-menu__link']} text text_type_main-medium text_color_inactive`} >Профиль</NavLink>\n        <NavLink to=\"/profile/orders\" activeClassName={`${profileMenuStyles['profile-menu__link_active']}`} className={`${profileMenuStyles['profile-menu__link']} text text_type_main-medium text_color_inactive`}>История заказов</NavLink>\n        <button className={`${profileMenuStyles['profile-menu__link']} text text_type_main-medium text_color_inactive`} onClick={() => dispatch(exitUserThunk(refreshToken))}>Выход</button>\n      </nav>\n      <p className={`${profileMenuStyles['profile-menu__caption']} text text_type_main-default text_color_inactive pt-20`}>В этом разделе вы можете изменить свои персональные данные</p>\n    </section>\n  )\n};\n\nexport default ProfileMenu;","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport profileFormStyles from './profile.module.css' ;\n\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useSelector, useDispatch } from \"services/hooks/hooks\";\nimport { getUserThunk, patchUserThunk, resetPatchUserAction } from \"services/actions/user\";\nimport useAuth from \"services/auth\";\nimport ProfileMenu from \"components/profile-menu/profile-menu\";\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const { user, accessToken, patchUserSuccess } = useSelector((state) => state.user);\n  const { refreshToken } = useAuth();\n\n  const [nameValue, setNameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [passwordValue, setPasswordValue] = useState('');\n\n  const [currenNameValue, setCurrentNameValue] = useState('');\n  const [currentEmailValue, setCurrentEmailValue] = useState('');\n  const [currentPasswordValue, setCurrentPasswordValue] = useState('');\n\n  const [nameDisabled, setNameDisabled] = useState(true);\n  const [emailDisabled, setEmailDisabled] = useState(true);\n  const [passwordDisabled, setPasswordDisabled] = useState(true);\n\n  const [buttonsVisible, setButtonsVisible] = useState(false);\n\n  useEffect(() => {\n    dispatch(getUserThunk(refreshToken, accessToken));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (user) {\n      setNameValue(user.name);\n      setEmailValue(user.email);\n      setCurrentNameValue(user.name);\n      setCurrentEmailValue(user.email);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (\n      ((nameValue !== currenNameValue)) ||\n      ((emailValue !== currentEmailValue)) ||\n      ((passwordValue !== currentPasswordValue))\n    ) {\n      setButtonsVisible(true);\n    } else {\n      setButtonsVisible(false);\n    }\n  }, [nameValue, emailValue, passwordValue, currenNameValue, currentEmailValue, currentPasswordValue, nameDisabled, emailDisabled, passwordDisabled]);\n\n  useEffect(() => {\n    if (patchUserSuccess)\n    {\n      dispatch(resetPatchUserAction());\n      if (user) {\n        setCurrentNameValue(user.name);\n        setCurrentEmailValue(user.email);\n      }\n      setCurrentPasswordValue('');\n      setPasswordValue('');\n      setNameDisabled(true);\n      setEmailDisabled(true);\n      setPasswordDisabled(true);\n    }\n  }, [dispatch, patchUserSuccess, user]);\n\n  const onNameIconClick = () => {\n    if(nameDisabled) {\n      setCurrentNameValue(nameValue);\n    } else {\n      setNameValue(currenNameValue);\n    }\n    setNameDisabled(!nameDisabled);\n  }\n\n  const onEmailIconClick = () => {\n    if(emailDisabled) {\n      setCurrentEmailValue(emailValue);\n    } else {\n      setEmailValue(currentEmailValue);\n    }\n    setEmailDisabled(!emailDisabled);\n  }\n\n  const onPasswordIconClick = () => {\n    if(passwordDisabled) {\n      setCurrentPasswordValue(passwordValue);\n    } else {\n      setPasswordValue(currentPasswordValue);\n    }\n    setPasswordDisabled(!passwordDisabled);\n  }\n\n  const confirmlInput = (e: any) => {\n    e.preventDefault();\n    dispatch(patchUserThunk(refreshToken, accessToken, nameValue, emailValue, passwordValue));\n  }\n\n  const cancelInput = (e: any) => {\n    e.preventDefault()\n    setNameDisabled(true);\n    setEmailDisabled(true);\n    setPasswordDisabled(true);\n    setNameValue(currenNameValue);\n    setEmailValue(currentEmailValue);\n    setPasswordValue(currentPasswordValue);\n  }\n\n  if (!refreshToken) {\n    return <Redirect to={'/login'} />\n  }\n\n  return (\n    <main className={`${profileFormStyles.main}`}>\n      <ProfileMenu />\n      <section className={`${profileFormStyles['profile-form']}`}>\n        <form className={`${profileFormStyles['profile-form__container']}`}>\n          <Input\n            type={'text'}\n            placeholder={'Имя'}\n            onChange={e => setNameValue(e.target.value)}\n            icon={nameDisabled ? 'EditIcon' : 'CloseIcon'}\n            value={nameValue}\n            name={'name'}\n            error={false}\n            onIconClick={onNameIconClick}\n            errorText={'Ошибка'}\n            size={'default'}\n            disabled={nameDisabled}\n          />\n          <Input\n            type={'email'}\n            placeholder={'Логин'}\n            onChange={e => setEmailValue(e.target.value)}\n            icon={emailDisabled ? 'EditIcon' : 'CloseIcon'}\n            value={emailValue}\n            name={'email'}\n            error={false}\n            onIconClick={onEmailIconClick}\n            errorText={'Ошибка'}\n            size={'default'}\n            disabled={emailDisabled}\n          />\n          <Input\n            type={'password'}\n            placeholder={'Пароль'}\n            onChange={e => setPasswordValue(e.target.value)}\n            icon={passwordDisabled ? 'EditIcon' : 'CloseIcon'}\n            value={passwordDisabled? '******' : passwordValue}\n            name={'password'}\n            error={false}\n            onIconClick={onPasswordIconClick}\n            errorText={'Ошибка'}\n            size={'default'}\n            disabled={passwordDisabled}\n          />\n          {buttonsVisible && \n            <div className={`${profileFormStyles['profile-form__button-container']} text text_type_main-default`}>\n              <Button type=\"secondary\" size=\"medium\" onClick={cancelInput}>\n                Отмена\n              </Button>\n              <Button type=\"primary\" size=\"medium\" onClick={confirmlInput} >\n                Сохранить\n              </Button>\n            </div>\n          }\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport useAuth from 'services/auth';\n\nconst ProtectedRoute = ({ children, path, exact, ...rest }: RouteProps) => {\n  const {refreshToken} = useAuth();\n\n  return (\n      <Route\n        path={path}\n        exact={exact}\n        {...rest}\n        render={({ location  }) => (\n          refreshToken ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: location }\n              }}\n            />\n          )\n        )}\n      /> \n  );\n}\n\nexport default ProtectedRoute;","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport profileOrdersFormStyles from './profile-orders.module.css' ;\n\nimport useAuth from \"services/auth\";\nimport ProfileMenu from \"components/profile-menu/profile-menu\";\n\nconst ProfileOrders = () => {\n  const { refreshToken } = useAuth();\n\n  if (!refreshToken) {\n    return <Redirect to={'/login'} />\n  }\n\n  return (\n    <main className={`${profileOrdersFormStyles.main}`}>\n      <ProfileMenu />\n    </main>\n  )\n}\n\nexport default ProfileOrders;","import React from \"react\";\n\nimport nutritionValueStyles from 'components/nutrition-value/nutrition-value.module.css';\n\ninterface IProps {\n  title: string,\n  value?: number,\n}\n\nconst NutritionValue = ({ title, value }: IProps) => {\n  return (\n    <div className={`${nutritionValueStyles['nutrition-value']}`}>\n      <h4 className={`text text_type_main-default text_color_inactive`}>{title}</h4>\n      <p className={`text text_type_digits-default text_color_inactive`}>{value}</p>\n    </div>\n  )\n}\n\nexport default NutritionValue;\n","import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'services/hooks/hooks';\n\nimport ingredientDetailsStyles from 'components/ingredient-details/ingredient-details.module.css'\n\nimport NutritionValue from \"components/nutrition-value/nutrition-value\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { setIngredientDetails } from 'services/actions/ingredient-details';\nimport { getBurgerIngredientsThunk } from 'services/actions/burger-ingredients';\n\ninterface IParams {\n  ingredientId: string;\n}\n\nconst IngredientDetails = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { ingredientId } = useParams<IParams>();\n\n  const {burgerIngredients} = useSelector((state) => state.burgerIngredients);\n  const {ingredientDetails} = useSelector((state) => state.ingredientDetails);\n\n  useEffect(() => {\n    if (!burgerIngredients || burgerIngredients?.length === 0){\n        dispatch(getBurgerIngredientsThunk());\n        return;\n    }\n    const item = burgerIngredients?.find( x => x._id === ingredientId );\n\n    if (item)\n    {\n      dispatch(setIngredientDetails(item));\n    }\n    else\n    {\n      history.push('');\n    }\n    \n  }, [burgerIngredients, ingredientId]);\n\n  return (\n    <div className={`${ingredientDetailsStyles['ingredient-details']}`}>\n      <img className={`${ingredientDetailsStyles['ingredient-details__image']} pb-4`} src={ingredientDetails?.image_large} alt={ingredientDetails?.name} />\n      <h3 className={`${ingredientDetailsStyles['ingredient-details__title']} text text_type_main-large pb-8`}>{ingredientDetails?.name}</h3>\n      <div className={`${ingredientDetailsStyles['ingredient-details__nutrition-values']} pb-15`}>\n        <NutritionValue title={'Калории,ккал'} value={ingredientDetails?.calories} />\n        <NutritionValue title={'Белки, г'} value={ingredientDetails?.proteins} />\n        <NutritionValue title={'Жиры, г'} value={ingredientDetails?.fat} />\n        <NutritionValue title={'Углеводы, г'} value={ingredientDetails?.carbohydrates} />\n      </div>\n    </div>\n  );\n}\n\nexport default IngredientDetails;","import {\n  SET_INGREDIENT_DETAILS,\n  RESET_INGREDIENT_DETAILS,\n} from '../constants';\n\nimport { TIngredientType } from '../types/data';\n\nexport interface ISetIngredientsDetails {\n  readonly type: typeof SET_INGREDIENT_DETAILS;\n  readonly ingredientDetails: TIngredientType;\n}\n\nexport interface IResetIngredientsDetails {\n  readonly type: typeof RESET_INGREDIENT_DETAILS;\n}\n\nexport type TIngredintsDetailsActions =\n  ISetIngredientsDetails\n  | IResetIngredientsDetails;\n\nexport const setIngredientDetails = ( ingredient: TIngredientType ): ISetIngredientsDetails => ({\n  type: SET_INGREDIENT_DETAILS,\n  ingredientDetails: ingredient,\n});\n\nexport const resetIngredientDetails = (): IResetIngredientsDetails => ({\n  type: RESET_INGREDIENT_DETAILS,\n});","import React from 'react';\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\n\nimport Home from 'pages/home/home';\nimport Login from 'pages/login/login';\nimport Register from 'pages/register/register';\nimport ForgotPassword from 'pages/forgot-password/forgot-password';\nimport ResetPassword from 'pages/reset-password/reset-password';\nimport Profile from 'pages/profile/profile';\nimport ProtectedRoute from 'components/protected-route/protected-route';\nimport ProfileOrders from 'pages/profile-orders/profile-orders';\nimport { useDispatch } from 'services/hooks/hooks';\nimport { resetIngredientDetails } from 'services/actions/ingredient-details';\nimport IngredientDetails from 'components/ingredient-details/ingredient-details';\nimport Modal from 'components/modal/modal';\n\ninterface ILocationState {\n  background: any;\n}\n\nconst ModalSwitch = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { state } = useLocation<ILocationState>();\n  const background = state && state.background;\n\n  const onIngredientModalClose = () => {\n    dispatch(resetIngredientDetails());\n    history.goBack();\n  }\n\n  const openedFromList = background && history.action === 'PUSH';\n\n  return (\n    <div>\n      <Switch location={openedFromList ? background : location}>\n        <Route path={\"/\"} exact={true}>\n          <Home />\n        </Route>\n        <Route path={\"/ingredients/:ingredientId\"} children={<IngredientDetails />} />\n        <Route path={\"/login\"} component={Login}>\n        </Route>\n        <Route path={\"/register\"}>\n          <Register />\n        </Route>\n        <Route path={\"/forgot-password\"}>\n          <ForgotPassword />\n        </Route>\n        <Route path={\"/reset-password\"}>\n          <ResetPassword />\n        </Route>\n        <ProtectedRoute path={\"/profile\"} exact={true}>\n          <Profile />\n        </ProtectedRoute>\n        <ProtectedRoute path={\"/profile/orders\"} exact={true}>\n          <ProfileOrders />\n        </ProtectedRoute>\n        <Route path=\"*\">\n          404\n        </Route>\n      </Switch>\n      {openedFromList && <Route path=\"/ingredients/:ingredientId\" children={\n        <Modal title={\"Детали ингредиента\"} onClose={onIngredientModalClose} >\n          <IngredientDetails />\n        </Modal> \n      } />}\n    </div>\n  );\n}\n\nexport default ModalSwitch;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport appStyles from 'components/app/app.module.css' ;\n\nimport AppHeader from 'components/app-header/app-header';\nimport ModalSwitch from 'components/modalSwitch/modal-switch';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className={`${appStyles.app}`}>\n        <AppHeader/>\n        <ModalSwitch/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from 'services/store';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport './vendor/normalize.css';\n\nimport App from './components/app/app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-menu\":\"profile-menu_profile-menu__1Yitf\",\"profile-menu__navigation\":\"profile-menu_profile-menu__navigation__2Z2Eq\",\"profile-menu__link\":\"profile-menu_profile-menu__link__4TkT1\",\"profile-menu__link_active\":\"profile-menu_profile-menu__link_active__55Im5\",\"profile-menu__caption\":\"profile-menu_profile-menu__caption__2QwS0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient__item\":\"ingredient_ingredient__item__1GTeL\",\"ingredient__container\":\"ingredient_ingredient__container__1_br5\",\"ingredient__name\":\"ingredient_ingredient__name__3gIIs\",\"ingredient__counter\":\"ingredient_ingredient__counter__3ed5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login-form-container\":\"login_login-form-container__3fdEU\",\"login-form__link\":\"login_login-form__link__2pxAz\",\"login-form__input\":\"login_login-form__input__1nZkZ\",\"login-form__field\":\"login_login-form__field__v_Gpc\",\"login-form__bottom-text\":\"login_login-form__bottom-text__32h6G\",\"input_size_default\":\"login_input_size_default__28895\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor\":\"burger-constructor_burger-constructor__2Wv3Z\",\"burger-constructor__burger-price-container\":\"burger-constructor_burger-constructor__burger-price-container__1EqL3\",\"burger-constructor__burger-price\":\"burger-constructor_burger-constructor__burger-price__1kRgh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-constructor__items-container\":\"burger-constructor-items_burger-constructor__items-container__3Dfop\",\"burger-constructor__center-items-container\":\"burger-constructor-items_burger-constructor__center-items-container__2_VRP\",\"burger-constructor__item-container\":\"burger-constructor-items_burger-constructor__item-container__3yyjb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__1DF1f\",\"modal__header-container\":\"modal_modal__header-container__1X7X0\",\"modal__title\":\"modal_modal__title__CykZc\",\"modal__close-icon\":\"modal_modal__close-icon__1B_ge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"auth-form_main__3dvC0\",\"auth-form\":\"auth-form_auth-form__Ruiec\",\"auth-form__container\":\"auth-form_auth-form__container__39lkj\",\"auth-form__title\":\"auth-form_auth-form__title__3RqkY\",\"auth-form__link\":\"auth-form_auth-form__link__3z_s9\",\"auth-form__input\":\"auth-form_auth-form__input__3xCRR\",\"auth-form__field\":\"auth-form_auth-form__field__Ifo3Q\",\"auth-form__bottom-text\":\"auth-form_auth-form__bottom-text__AFycj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profile_main__qGy5r\",\"profile-form\":\"profile_profile-form__37ykj\",\"profile-form__container\":\"profile_profile-form__container__S6vx1\",\"profile-form__button-container\":\"profile_profile-form__button-container__elb5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-details\":\"ingredient-details_ingredient-details__zttXH\",\"ingredient-details__image\":\"ingredient-details_ingredient-details__image__1EWkH\",\"ingredient-details__title\":\"ingredient-details_ingredient-details__title__2zsUn\",\"ingredient-details__nutrition-values\":\"ingredient-details_ingredient-details__nutrition-values__2itqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-details\":\"order-details_order-details__3xw4W\",\"order-details__title\":\"order-details_order-details__title__BOwot\",\"order-details__done-image\":\"order-details_order-details__done-image__1yvzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register-form-container\":\"register_register-form-container__1CE3F\",\"register-form__link\":\"register_register-form__link__aATpA\",\"register-form__bottom-text\":\"register_register-form__bottom-text__hK0V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgot-password-form-container\":\"forgot-password_forgot-password-form-container__q_00V\",\"forgot-password-form__link\":\"forgot-password_forgot-password-form__link__IaIgH\",\"forgot-password-form__input\":\"forgot-password_forgot-password-form__input__3azJw\",\"forgot-password-form__field\":\"forgot-password_forgot-password-form__field__25tvT\",\"forgot-password-form__bottom-text\":\"forgot-password_forgot-password-form__bottom-text__3DweC\",\"input_size_default\":\"forgot-password_input_size_default__2Ba19\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset-password-form-container\":\"reset-password_reset-password-form-container__1Zncv\",\"reset-password-form__link\":\"reset-password_reset-password-form__link__gGYME\",\"reset-password-form__input\":\"reset-password_reset-password-form__input__3t6UW\",\"reset-password-form__field\":\"reset-password_reset-password-form__field__1C0v5\",\"reset-password-form__bottom-text\":\"reset-password_reset-password-form__bottom-text__2kX0I\",\"input_size_default\":\"reset-password_input_size_default__O115y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger-ingredients\":\"burger-ingredients_burger-ingredients__3ja-s\",\"burger-ingredients__ingredients-list-container\":\"burger-ingredients_burger-ingredients__ingredients-list-container__3r3bz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients\":\"ingredients-list_ingredients__2NfY-\",\"ingredients__items\":\"ingredients-list_ingredients__items__17U65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filling-constructor-element__container\":\"filling-constructor-element_filling-constructor-element__container__2Vhnu\",\"filling-constructor-element__container-hovered\":\"filling-constructor-element_filling-constructor-element__container-hovered__3Le3v\"};"],"sourceRoot":""}